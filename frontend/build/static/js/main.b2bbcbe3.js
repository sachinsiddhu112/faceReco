/*! For license information please see main.b2bbcbe3.js.LICENSE.txt */
(()=>{var e={8249:(e,t,n)=>{"use strict";n.r(t),n.d(t,{BlazeFaceModel:()=>d,load:()=>p});var a=n(5452),r=n(263);function s(e,t,n,a){return new(n||(n=Promise))((function(r,s){function o(e){try{c(a.next(e))}catch(t){s(t)}}function i(e){try{c(a.throw(e))}catch(t){s(t)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}c((a=a.apply(e,t||[])).next())}))}function o(e,t){var n,a,r,s,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"===typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,a&&(r=2&s[0]?a.return:s[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,s[1])).done)return r;switch(a=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,a=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(r=(r=o.trys).length>0&&r[r.length-1])&&(6===s[0]||2===s[0])){o=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){o.label=s[1];break}if(6===s[0]&&o.label<r[1]){o.label=r[1],r=s;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(s);break}r[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(i){s=[6,i],a=0}finally{n=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}}var i=function(e){return{startEndTensor:e,startPoint:r.dik(e,[0,0],[-1,2]),endPoint:r.dik(e,[0,2],[-1,2])}},c={strides:[8,16],anchors:[2,6]};function l(e,t){var n,a,s;if(e.topLeft instanceof r.qYS&&e.bottomRight instanceof r.qYS){var o=r.DZQ((function(){return[r.xWs([r.dik(r.jbE(t-1,e.topLeft),0,1),r.dik(e.topLeft,1,1)]),r.xWs([r.jbE(t-1,r.dik(e.bottomRight,0,1)),r.dik(e.bottomRight,1,1)])]}));n=o[0],a=o[1],null!=e.landmarks&&(s=r.DZQ((function(){var n=r.jbE(r.tGX([t-1,0]),e.landmarks),a=r.tGX([1,-1]);return r.lKK(n,a)})))}else{var i=e.topLeft,c=i[0],l=i[1],u=e.bottomRight,d=u[0],h=u[1];n=[t-1-c,l],a=[t-1-d,h],null!=e.landmarks&&(s=e.landmarks.map((function(e){return[t-1-e[0],e[1]]})))}var p={topLeft:n,bottomRight:a};return null!=s&&(p.landmarks=s),null!=e.probability&&(p.probability=e.probability instanceof r.qYS?e.probability.clone():e.probability),p}function u(e,t){return r.DZQ((function(){var n;return n=e.hasOwnProperty("box")?e.box:e,r.r2V(function(e,t){var n=r.lKK(e.startPoint,t),a=r.lKK(e.endPoint,t),s=r.RPU([n,a],1);return i(s)}(n,t).startEndTensor)}))}var d=function(){function e(e,t,n,a,s,o){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=a,this.anchorsData=function(e,t,n){for(var a=[],r=0;r<n.strides.length;r++)for(var s=n.strides[r],o=Math.floor((t+s-1)/s),i=Math.floor((e+s-1)/s),c=n.anchors[r],l=0;l<o;l++)for(var u=s*(l+.5),d=0;d<i;d++)for(var h=s*(d+.5),p=0;p<c;p++)a.push([h,u]);return a}(t,n,c),this.anchors=r.KtR(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=r.tGX([t,n]),this.iouThreshold=s,this.scoreThreshold=o}return e.prototype.getBoundingBoxes=function(e,t,n){return void 0===n&&(n=!0),s(this,void 0,void 0,(function(){var a,c,l,u,d,h,p,f,m,g,y,b,v,x,w=this;return o(this,(function(k){switch(k.label){case 0:return a=r.DZQ((function(){var t=r.image.resizeBilinear(e,[w.width,w.height]),n=r.lKK(r.jbE(r.y4m(t,255),.5),2),a=w.blazeFaceModel.predict(n),s=r.r2V(a),o=function(e,t,n){var a=r.dik(e,[0,1],[-1,2]),s=r.WQq(a,t),o=r.dik(e,[0,3],[-1,2]),i=r.y4m(o,n),c=r.y4m(s,n),l=r.y4m(i,2),u=r.jbE(c,l),d=r.WQq(c,l),h=r.lKK(u,n),p=r.lKK(d,n);return r.RPU([h,p],1)}(s,w.anchors,w.inputSize),i=r.dik(s,[0,0],[-1,1]);return[s,o,r.r2V(r.ry7(i))]})),c=a[0],l=a[1],u=a[2],d=console.warn,console.warn=function(){},h=r.image.nonMaxSuppression(l,u,this.maxFaces,this.iouThreshold,this.scoreThreshold),console.warn=d,[4,h.array()];case 1:return p=k.sent(),h.dispose(),f=p.map((function(e){return r.dik(l,[e,0],[1,-1])})),t?[3,3]:[4,Promise.all(f.map((function(e){return s(w,void 0,void 0,(function(){var t;return o(this,(function(n){switch(n.label){case 0:return[4,e.array()];case 1:return t=n.sent(),e.dispose(),[2,t]}}))}))})))];case 2:f=k.sent(),k.label=3;case 3:for(m=e.shape[1],g=e.shape[2],y=t?r.y4m([g,m],this.inputSize):[g/this.inputSizeData[0],m/this.inputSizeData[1]],b=[],v=function(e){var a=f[e],s=r.DZQ((function(){var s=a instanceof r.qYS?i(a):i(r.KtR(a));if(!n)return s;var o,l=p[e];return o=t?r.dik(w.anchors,[l,0],[1,2]):w.anchorsData[l],{box:s,landmarks:r.tQQ(r.r2V(r.dik(c,[l,5],[1,-1])),[6,-1]),probability:r.dik(u,[l],[1]),anchor:o}}));b.push(s)},x=0;x<f.length;x++)v(x);return l.dispose(),u.dispose(),c.dispose(),[2,{boxes:b,scaleFactor:y}]}}))}))},e.prototype.estimateFaces=function(e,t,n,a){return void 0===t&&(t=!1),void 0===n&&(n=!1),void 0===a&&(a=!0),s(this,void 0,void 0,(function(){var i,c,d,h,p,f,m=this;return o(this,(function(g){switch(g.label){case 0:return i=function(e){return e instanceof r.qYS?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),c=i[1],d=r.DZQ((function(){return e instanceof r.qYS||(e=r.TaL.fromPixels(e)),r.UG6(r.wgE(e,"float32"),0)})),[4,this.getBoundingBoxes(d,t,a)];case 1:return h=g.sent(),p=h.boxes,f=h.scaleFactor,d.dispose(),t?[2,p.map((function(e){var t=u(e,f),s={topLeft:r.dik(t,[0],[2]),bottomRight:r.dik(t,[2],[2])};if(a){var o=e,i=o.landmarks,d=o.probability,h=o.anchor,p=r.lKK(r.WQq(i,h),f);s.landmarks=p,s.probability=d}return n&&(s=l(s,c)),s}))]:[2,Promise.all(p.map((function(e){return s(m,void 0,void 0,(function(){var t,r,i,d,h,p,m,g,y,b,v,x=this;return o(this,(function(w){switch(w.label){case 0:return t=u(e,f),a?[3,2]:[4,t.array()];case 1:return h=w.sent(),r={topLeft:h.slice(0,2),bottomRight:h.slice(2)},[3,4];case 2:return[4,Promise.all([e.landmarks,t,e.probability].map((function(e){return s(x,void 0,void 0,(function(){return o(this,(function(t){return[2,e.array()]}))}))})))];case 3:i=w.sent(),d=i[0],h=i[1],p=i[2],m=e.anchor,y=(g=f)[0],b=g[1],v=d.map((function(e){return[(e[0]+m[0])*y,(e[1]+m[1])*b]})),r={topLeft:h.slice(0,2),bottomRight:h.slice(2),landmarks:v,probability:p},(k=e.box).startEndTensor.dispose(),k.startPoint.dispose(),k.endPoint.dispose(),e.landmarks.dispose(),e.probability.dispose(),w.label=4;case 4:return t.dispose(),n&&(r=l(r,c)),[2,r]}var k}))}))})))]}}))}))},e.prototype.dispose=function(){this.blazeFaceModel.dispose(),this.anchors.dispose(),this.inputSize.dispose()},e}(),h="https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1";function p(e){var t=void 0===e?{}:e,n=t.maxFaces,r=void 0===n?10:n,i=t.inputWidth,c=void 0===i?128:i,l=t.inputHeight,u=void 0===l?128:l,p=t.iouThreshold,f=void 0===p?.3:p,m=t.scoreThreshold,g=void 0===m?.75:m,y=t.modelUrl;return s(this,void 0,void 0,(function(){var e;return o(this,(function(t){switch(t.label){case 0:return null==y?[3,2]:[4,a.ox(y)];case 1:return e=t.sent(),[3,4];case 2:return[4,a.ox(h,{fromTFHub:!0})];case 3:e=t.sent(),t.label=4;case 4:return[2,new d(e,c,u,r,f,g)]}}))}))}},5452:(e,t,n)=>{"use strict";n.d(t,{ox:()=>Ke,uW:()=>He});var a={};n.r(a),n.d(a,{json:()=>M});var r={};n.r(r),n.d(r,{json:()=>z});var s={};n.r(s),n.d(s,{json:()=>P});var o={};n.r(o),n.d(o,{json:()=>B});var i={};n.r(i),n.d(i,{json:()=>W});var c={};n.r(c),n.d(c,{json:()=>U});var l={};n.r(l),n.d(l,{json:()=>V});var u={};n.r(u),n.d(u,{json:()=>G});var d={};n.r(d),n.d(d,{json:()=>j});var h={};n.r(h),n.d(h,{json:()=>Z});var p={};n.r(p),n.d(p,{json:()=>K});var f={};n.r(f),n.d(f,{json:()=>H});var m={};n.r(m),n.d(m,{json:()=>q});var g={};n.r(g),n.d(g,{json:()=>Y});var y={};n.r(y),n.d(y,{json:()=>Q});var b={};n.r(b),n.d(b,{json:()=>X});var v={};n.r(v),n.d(v,{json:()=>J});var x={};n.r(x),n.d(x,{json:()=>$});var w={};n.r(w),n.d(w,{json:()=>ee});var k={};n.r(k),n.d(k,{OP_SCOPE_SUFFIX:()=>ye.BTT,abs:()=>ye.tnl,acos:()=>ye.HQu,acosh:()=>ye.FqL,add:()=>ye.WQq,addN:()=>ye.QiD,all:()=>ye.Q7R,any:()=>ye.bzn,argMax:()=>ye.FLi,argMin:()=>ye.XRg,asin:()=>ye.qRo,asinh:()=>ye.yHs,atan:()=>ye.rYl,atan2:()=>ye.FPz,atanh:()=>ye.rfv,avgPool:()=>ye.$jT,avgPool3d:()=>ye.sub,basicLSTMCell:()=>ye.lZX,batchNorm:()=>ye.$v7,batchNorm2d:()=>ye.BFc,batchNorm3d:()=>ye.kSi,batchNorm4d:()=>ye.T5N,batchToSpaceND:()=>ye.GTe,bincount:()=>ye.HbZ,bitwiseAnd:()=>ye.vjT,booleanMaskAsync:()=>ye.ftb,broadcastArgs:()=>ye.ROE,broadcastTo:()=>ye.hOW,buffer:()=>ye.ra8,cast:()=>ye.wgE,ceil:()=>ye.mkO,clipByValue:()=>ye.zQh,clone:()=>ye.o8B,complex:()=>ye.faB,concat:()=>ye.xWs,concat1d:()=>ye.I1m,concat2d:()=>ye.RPU,concat3d:()=>ye.O5O,concat4d:()=>ye.P1l,conv1d:()=>ye.kA9,conv2d:()=>ye.Xtf,conv2dTranspose:()=>ye.wX9,conv3d:()=>ye.IPL,conv3dTranspose:()=>ye.jIJ,cos:()=>ye.gnS,cosh:()=>ye.yIG,cosineWindow:()=>ye._jP,cumprod:()=>ye.Lp0,cumsum:()=>ye.rCv,denseBincount:()=>ye.aOp,depthToSpace:()=>ye.Rj8,depthwiseConv2d:()=>ye.Gl3,diag:()=>ye.smy,dilation2d:()=>ye.X7t,div:()=>ye.y4m,divNoNan:()=>ye.ek5,dot:()=>ye.Omf,dropout:()=>ye.EZY,einsum:()=>ye._3C,elu:()=>ye.Pqc,enclosingPowerOfTwo:()=>ye.FJY,ensureShape:()=>ye.QP2,equal:()=>ye.LCg,erf:()=>ye.Y12,euclideanNorm:()=>ye.p4S,exp:()=>ye.oNF,expandDims:()=>ye.UG6,expm1:()=>ye.IYd,eye:()=>ye.y5U,fft:()=>ye.hVP,fill:()=>ye.GSj,floor:()=>ye.RIf,floorDiv:()=>ye.wh_,fused:()=>ye.cZk,gather:()=>ye.kgh,gatherND:()=>ye.SY9,greater:()=>ye.rhj,greaterEqual:()=>ye.DQN,ifft:()=>ye.KGM,imag:()=>ye.ngS,image:()=>ye.Slp,inTopKAsync:()=>ye.U4u,irfft:()=>ye.ggX,isFinite:()=>ye.MIs,isInf:()=>ye.EN4,isNaN:()=>ye.yrW,leakyRelu:()=>ye.H8d,less:()=>ye.M7h,lessEqual:()=>ye.InN,linalg:()=>ye.mPL,linspace:()=>ye.mT8,localResponseNormalization:()=>ye.Kgs,log:()=>ye.Rm2,log1p:()=>ye.Kko,logSigmoid:()=>ye.nqI,logSoftmax:()=>ye.HPB,logSumExp:()=>ye.VZ,logicalAnd:()=>ye.n76,logicalNot:()=>ye.NSZ,logicalOr:()=>ye.ztW,logicalXor:()=>ye.rxB,losses:()=>ye.YYh,lowerBound:()=>ye.yzS,matMul:()=>ye.NoW,max:()=>ye.T9B,maxPool:()=>ye.jgi,maxPool3d:()=>ye.NYV,maxPoolWithArgmax:()=>ye.RO,maximum:()=>ye.PhQ,mean:()=>ye.i2o,meshgrid:()=>ye.OYQ,min:()=>ye.jkA,minimum:()=>ye.BpO,mirrorPad:()=>ye.FFZ,mod:()=>ye.ziu,moments:()=>ye.Clk,movingAverage:()=>ye.CRk,mul:()=>ye.lKK,multiRNNCell:()=>ye.YDF,multinomial:()=>ye.OjQ,neg:()=>ye.HZy,norm:()=>ye.xbf,notEqual:()=>ye.Ec,oneHot:()=>ye.Mw0,ones:()=>ye.SaS,onesLike:()=>ye.P61,op:()=>ye.op,outerProduct:()=>ye.X4o,pad:()=>ye.eVF,pad1d:()=>ye.BZs,pad2d:()=>ye.grY,pad3d:()=>ye.XHu,pad4d:()=>ye.WLX,pool:()=>ye.dzn,pow:()=>ye.n7C,prelu:()=>ye.NsG,print:()=>ye.yyV,prod:()=>ye._eU,raggedGather:()=>ye.whe,raggedRange:()=>ye.iyU,raggedTensorToTensor:()=>ye.Q0_,rand:()=>ye._9M,randomGamma:()=>ye.pR9,randomNormal:()=>ye.FE$,randomStandardNormal:()=>ye.m0H,randomUniform:()=>ye.YeY,randomUniformInt:()=>ye.HYA,range:()=>ye.y17,real:()=>ye.xav,reciprocal:()=>ye.VOZ,relu:()=>ye.VVh,relu6:()=>ye.j__,reshape:()=>ye.tQQ,reverse:()=>ye.BEg,reverse1d:()=>ye.QD2,reverse2d:()=>ye.LMr,reverse3d:()=>ye.I2l,reverse4d:()=>ye.JYU,rfft:()=>ye.z8$,round:()=>ye.LIG,rsqrt:()=>ye.Z$r,scalar:()=>ye.d_2,scatterND:()=>ye.NFr,searchSorted:()=>ye.sZg,selu:()=>ye.WfX,separableConv2d:()=>ye.wdz,setdiff1dAsync:()=>ye.F12,sigmoid:()=>ye.ry7,sign:()=>ye._SZ,signal:()=>ye.vPA,sin:()=>ye.F8e,sinh:()=>ye.L0l,slice:()=>ye.dik,slice1d:()=>ye.Q$M,slice2d:()=>ye.zAd,slice3d:()=>ye.wck,slice4d:()=>ye.R0O,softmax:()=>ye.Vs9,softplus:()=>ye.lw0,spaceToBatchND:()=>ye.eDJ,sparse:()=>ye.lMo,sparseToDense:()=>ye.Zhr,spectral:()=>ye.lOn,split:()=>ye.lDo,sqrt:()=>ye.RZD,square:()=>ye.EwI,squaredDifference:()=>ye.Pbu,squeeze:()=>ye.r2V,stack:()=>ye.t$z,step:()=>ye.PMw,stridedSlice:()=>ye.Ym9,string:()=>ye.YjP,sub:()=>ye.jbE,sum:()=>ye.czq,tan:()=>ye.Mlm,tanh:()=>ye.ymU,tensor:()=>ye.OEK,tensor1d:()=>ye.tGX,tensor2d:()=>ye.KtR,tensor3d:()=>ye.$_$,tensor4d:()=>ye.g9W,tensor5d:()=>ye.Lpo,tensor6d:()=>ye.yxw,tensorScatterUpdate:()=>ye.NNh,tile:()=>ye.Vsq,topk:()=>ye.rfw,transpose:()=>ye.mgz,truncatedNormal:()=>ye.efE,unique:()=>ye.AmM,unsortedSegmentSum:()=>ye.zAU,unstack:()=>ye.K$i,upperBound:()=>ye.rni,variable:()=>ye.bvq,where:()=>ye._M9,whereAsync:()=>ye.YJN,zeros:()=>ye.Ul9,zerosLike:()=>ye.POl});var S=n(263);var T,I;(0,S._K2)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(T||(T={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(I||(I={}));const N={};function C(e){return N[e]}function E(e,t,n,a,r){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return A(t.inputNames[i],n,a,r);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>A(e,n,a,r)))}const c=A(t.inputNames[i],n,a,r),l=c.dataSync();return"number"===s.type?l[0]:S.ZSL.toNestedArray(c.shape,l)}const o=t.attrParams[e];return o&&o.value}function A(e,t,n,a){const[r,s]=D(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[F(r,e)]));return void 0!==o?t[F(r,o)][s]:void 0}function _(e,t,n){return t[F(e,n.currentContextId)]}function R(e,t){const[n,a,r]=D(e,t);return[F(n,t&&t.currentContextId),a,r]}function F(e,t){return t?"".concat(e,"-").concat(t):e}function D(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function O(e,t,n){let a=E("pad",e,t,n);if("explicit"===a){a=E("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function L(e){return e.kept?e:(0,S.o8B)(e)}const M=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],z=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],P=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],B=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],W=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],U=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],V=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],G=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],j=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Z=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],K=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],H=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],q=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Y=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Q=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],X=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],J=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],$=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ee=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class te{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[a,r,s,o,i,c,l,u,d,h,p,f,m,g,y,b,v,x,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const c=[];let l={},u={};null!=t&&(l=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=R(e),s=o[a];if(null!=s.outputs){const e=s.outputs.indexOf(r);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(u).length?d.forEach((e=>{const t=o[e];0===t.children.length&&c.push(t)})):Object.keys(u).forEach((e=>{const[t]=R(e),n=o[t];null!=n&&(n.signatureKey=u[e],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=R(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=a;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:o,inputs:i,outputs:c,weights:r,placeholders:a,signature:t,functions:h};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=C(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=ae(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=pe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=se(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=he(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=re(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=re(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=me(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=de(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=fe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=ce(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=le(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=ie(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=R(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:oe(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=R(e),o=a[r];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=R(o[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));const i=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function ne(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,S._K2)().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function ae(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?ne(r.s,a):n}function re(e,t,n){const a=e[t];return a?a.b:n}function se(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function oe(e){switch("string"===typeof e&&(e=T[e]),e){case T.DT_FLOAT:case T.DT_HALF:return"float32";case T.DT_INT32:case T.DT_INT64:case T.DT_INT8:case T.DT_UINT8:return"int32";case T.DT_BOOL:return"bool";case T.DT_DOUBLE:return"float32";case T.DT_STRING:return"string";case T.DT_COMPLEX64:case T.DT_COMPLEX128:return"complex64";default:return null}}function ie(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function ce(e,t,n){const a=e[t];return a&&a.type?oe(a.type):n}function le(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>oe(e))):n}function ue(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function de(e,t,n){const a=e[t];return a&&a.shape?ue(a.shape):n}function he(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function pe(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>ne(e,a))):n}function fe(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>ue(e))):n}function me(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class ge{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return A(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return A(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return se(this.node.rawAttrs,e,t);if(null!=n.s)return ae(this.node.rawAttrs,e,t);if(null!=n.b)return re(this.node.rawAttrs,e,t);if(null!=n.shape)return de(this.node.rawAttrs,e,t);if(null!=n.type)return ce(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return he(this.node.rawAttrs,e,t);if(null!=n.list.s)return pe(this.node.rawAttrs,e,t);if(null!=n.list.shape)return fe(this.node.rawAttrs,e,t);if(null!=n.list.b)return me(this.node.rawAttrs,e,t);if(null!=n.list.type)return le(this.node.rawAttrs,e,t)}return t}}var ye=n(3007);function be(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){S.ZSL.assert(e.length===t.length,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")));for(let a=0;a<e.length;a++){const r=e[a],s=t[a];S.ZSL.assert(r<0||s<0||r===s,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}}}function ve(e){return"number"!==typeof e&&!e.some((e=>e<0))}function xe(e,t,n){let a=we(e,n);const r=!ve(a);if(r&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(r&&t.forEach((e=>{a=we(e.shape,a)})),!ve(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function we(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let a=0;a<e.length;++a){const r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[a]=r>=0?r:s}return n}class ke{constructor(e,t,n,a,r,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,S.d_2)(0),(0,S.aCs)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),be(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,(0,S.aCs)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,S.OEK)([],[0].concat(this.elementShape));const n=this.readMany(e);return be(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,S.t$z)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return(0,S.OEK)([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return be(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),(0,S.xWs)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,(0,S.K$i)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:t.size/n,s=[];(0,S.DZQ)((()=>{t=(0,S.tQQ)(t,[1,n,r]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:a[n-1],0],i=[1,e[n],r];s[n]=(0,S.tQQ)((0,S.dik)(t,o,i),this.elementShape)}return s}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,s)}}class Se{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));be(t,e.shape,"TensorList shape mismatch: "),(0,S.aCs)(e)})),this.idTensor=(0,S.d_2)(0),this.maxNumElements=a,(0,S.aCs)(this.idTensor)}copy(){return new Se([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));be(e,this.elementShape,"TensorList shape mismatch: ");const a=xe(this.elementShape,this.tensors,e);return(0,S.DZQ)((()=>{const e=this.tensors.map((e=>(0,S.tQQ)(e,a)));return(0,S.t$z)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=xe(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,be(a.shape,e,"TensorList shape mismatch: "),(0,S.tQQ)(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(be(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,S.aCs)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new Se([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));be(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=xe(this.elementShape,this.tensors,t);return(0,S.tQQ)(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));be(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,S.aCs)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));be(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=xe(this.elementShape,this.tensors,n);return 0===e.length?(0,S.OEK)([],[0].concat(a)):(0,S.DZQ)((()=>{const t=e.map((e=>(0,S.tQQ)(this.tensors[e],a)));return(0,S.t$z)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));be(this.elementShape,t,"TensorList shape mismatch: ");const n=xe(this.elementShape,this.tensors,t);return 0===this.size()?(0,S.OEK)([],[0].concat(n)):(0,S.DZQ)((()=>{const e=this.tensors.map((e=>(0,S.tQQ)(e,n)));return(0,S.xWs)(e,0)}))}}const Te=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=E("thenBranch",e,t,n),r=E("elseBranch",e,t,n),s=E("cond",e,t,n),o=E("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=E("body",e,t,n),r=E("cond",e,t,n),s=E("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let c=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;c[0];){const e=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[L(E("pred",e,t,n))];case"Switch":{const a=E("pred",e,t,n);let r=E("data",e,t,n);return r.kept||(r=L(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==A(e,t,n)));if(a){return[L(A(a,t,n))]}return}case"Enter":{const a=E("frameName",e,t,n),r=E("tensor",e,t,n);return n.enterFrame(a),[L(r)]}case"Exit":{const a=E("tensor",e,t,n);return n.exitFrame(),[L(a)]}case"NextIteration":{const a=E("tensor",e,t,n);return n.nextIteration(),[L(a)]}case"TensorArrayV3":{const a=E("size",e,t,n),r=E("dtype",e,t,n),s=E("elementShape",e,t,n),o=E("dynamicSize",e,t,n),i=E("clearAfterRead",e,t,n),c=E("identicalElementShapes",e,t,n),l=E("name",e,t,n),u=new ke(l,r,a,s,c,o,i);return n.addTensorArray(u),[u.idTensor,(0,S.d_2)(1)]}case"TensorArrayWriteV3":{const a=E("tensorArrayId",e,t,n),r=E("index",e,t,n),s=E("tensor",e,t,n),o=n.getTensorArray(a.id);return o.write(r,s),[o.idTensor]}case"TensorArrayReadV3":{const a=E("tensorArrayId",e,t,n),r=E("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=E("tensorArrayId",e,t,n),r=E("indices",e,t,n),s=E("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=E("tensorArrayId",e,t,n),r=E("indices",e,t,n),s=E("tensor",e,t,n),o=n.getTensorArray(a.id);return o.scatter(r,s),[o.idTensor]}case"TensorArrayConcatV3":{const a=E("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=E("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=E("tensorArrayId",e,t,n),r=E("tensor",e,t,n),s=E("lengths",e,t,n),o=n.getTensorArray(a.id);return o.split(s,r),[o.idTensor]}case"TensorArraySizeV3":{const a=E("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return[(0,S.d_2)(r.size(),"int32")]}case"TensorArrayCloseV3":{const a=E("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=E("tensorListId",e,t,n),r=E("index",e,t,n),s=E("tensor",e,t,n),o=n.getTensorList(a.id);return o.setItem(r,s),[o.idTensor]}case"TensorListGetItem":{const a=E("tensorListId",e,t,n),r=E("index",e,t,n),s=E("elementShape",e,t,n),o=E("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=E("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const s=new Se([],n,e.dtype,a),o=(0,S.K$i)(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(E("tensor",e,t,n),a,E("elementShape",e,t,n),E("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=E("elementShape",e,t,n),r=E("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=E(s,e,t,n),i=function(e,t,n,a){return new Se([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=E("tensorListId",e,t,n),r=E("indices",e,t,n),s=E("elementShape",e,t,n),o=E("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,o,s)]}case"TensorListStack":{const a=E("tensorListId",e,t,n),r=E("elementShape",e,t,n),s=E("elementDType",e,t,n),o=E("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,o)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));be(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=(0,S.K$i)(e);return new Se(r,t,a)}(E("tensor",e,t,n),E("elementShape",e,t,n),E("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=E("tensorListId",e,t,n),r=n.getTensorList(a.id),s=E("dtype",e,t,n),o=E("elementShape",e,t,n);return[r.concat(s,o)]}case"TensorListPushBack":{const a=E("tensorListId",e,t,n),r=E("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=E("tensorListId",e,t,n),r=E("elementShape",e,t,n),s=E("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=E("tensor",e,t,n),r=E("elementShape",e,t,n),s=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));const s=we(e.shape.slice(1),n),o=0===a?0:e.size/a,i=(0,S.DZQ)((()=>{const n=[];e=(0,S.tQQ)(e,[1,a,o]);for(let a=0;a<t.length;++a){const i=[0,0===a?0:r[a-1],0],c=[1,t[a],o];n[a]=(0,S.tQQ)((0,S.dik)(e,i,c),s)}return e.dispose(),n})),c=new Se([],n,e.dtype,t.length);for(let l=0;l<i.length;l++)c.setItem(l,i[l]);return c}(a,E("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const a=E("tensorListId",e,t,n),r=n.getTensorList(a.id);return[(0,S.d_2)(r.size(),"int32")]}case"TensorListResize":{const a=E("tensorListId",e,t,n),r=E("size",e,t,n),s=n.getTensorList(a.id).resize(r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function Ie(e,t,n){const[a,r]=E("fusedOps",e,t,n),s="biasadd"===a,o=!s,i="prelu"===r,c="fusedbatchnorm"===a,l=E("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=E("strides",e,t,n),d=O(e,t,n),h=E("dataFormat",e,t,n).toUpperCase(),p=E("dilations",e,t,n);let[f,m]=E("args",e,t,n);o&&(m=f,f=void 0);return{stride:u,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:E("leakyreluAlpha",e,t,n)}}function Ne(e,t,n){return{boxes:E("boxes",e,t,n),scores:E("scores",e,t,n),maxOutputSize:E("maxOutputSize",e,t,n),iouThreshold:E("iouThreshold",e,t,n),scoreThreshold:E("scoreThreshold",e,t,n),softNmsSigma:E("softNmsSigma",e,t,n)}}var Ce=n(1997);class Ee{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,S.d_2)(0),this.tensorMap=new Map,(0,S.aCs)(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ce.d(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,S.DZQ)((()=>{const e=(0,S.K$i)(t),a=n.length,r=e.length;S.ZSL.assert(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let t=0;t<a;t++){const a=n[t],r=e[t];(0,S.aCs)(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,S.DZQ)((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,t);e.push(s)}return(0,S.t$z)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}function Ae(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:S.DZQ;const s=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(E("a",e,t,n),E("b",e,t,n))];case"AddN":return[a.addN(E("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(E("a",e,t,n),E("b",e,t,n))];case"Mul":return[a.mul(E("a",e,t,n),E("b",e,t,n))];case"RealDiv":case"Div":return[a.div(E("a",e,t,n),E("b",e,t,n))];case"DivNoNan":return[a.divNoNan(E("a",e,t,n),E("b",e,t,n))];case"FloorDiv":return[a.floorDiv(E("a",e,t,n),E("b",e,t,n))];case"Sub":return[a.sub(E("a",e,t,n),E("b",e,t,n))];case"Minimum":return[a.minimum(E("a",e,t,n),E("b",e,t,n))];case"Maximum":return[a.maximum(E("a",e,t,n),E("b",e,t,n))];case"Pow":return[a.pow(E("a",e,t,n),E("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(E("a",e,t,n),E("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"basic_math":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(E("x",e,t,n))];case"Acos":return[a.acos(E("x",e,t,n))];case"Acosh":return[a.acosh(E("x",e,t,n))];case"Asin":return[a.asin(E("x",e,t,n))];case"Asinh":return[a.asinh(E("x",e,t,n))];case"Atan":return[a.atan(E("x",e,t,n))];case"Atan2":return[a.atan2(E("x",e,t,n),E("y",e,t,n))];case"Atanh":return[a.atanh(E("x",e,t,n))];case"Ceil":return[a.ceil(E("x",e,t,n))];case"Complex":return[a.complex(E("real",e,t,n),E("imag",e,t,n))];case"Cos":return[a.cos(E("x",e,t,n))];case"Cosh":return[a.cosh(E("x",e,t,n))];case"Elu":return[a.elu(E("x",e,t,n))];case"Erf":return[a.erf(E("x",e,t,n))];case"Exp":return[a.exp(E("x",e,t,n))];case"Expm1":return[a.expm1(E("x",e,t,n))];case"Floor":return[a.floor(E("x",e,t,n))];case"Log":return[a.log(E("x",e,t,n))];case"Log1p":return[a.log1p(E("x",e,t,n))];case"Imag":return[a.imag(E("x",e,t,n))];case"Neg":return[a.neg(E("x",e,t,n))];case"Reciprocal":return[a.reciprocal(E("x",e,t,n))];case"Real":return[a.real(E("x",e,t,n))];case"Relu":return[a.relu(E("x",e,t,n))];case"Round":return[a.round(E("x",e,t,n))];case"Selu":return[a.selu(E("x",e,t,n))];case"Sigmoid":return[a.sigmoid(E("x",e,t,n))];case"Sin":return[a.sin(E("x",e,t,n))];case"Sign":return[a.sign(E("x",e,t,n))];case"Sinh":return[a.sinh(E("x",e,t,n))];case"Softplus":return[a.softplus(E("x",e,t,n))];case"Sqrt":return[a.sqrt(E("x",e,t,n))];case"Square":return[a.square(E("x",e,t,n))];case"Tanh":return[a.tanh(E("x",e,t,n))];case"Tan":return[a.tan(E("x",e,t,n))];case"ClipByValue":return[a.clipByValue(E("x",e,t,n),E("clipValueMin",e,t,n),E("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(E("x",e,t,n))];case"Rsqrt":return[a.rsqrt(A(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(E("x",e,t,n),E("alpha",e,t,n))];case"Prelu":return[a.prelu(E("x",e,t,n),E("alpha",e,t,n))];case"IsNan":return[a.isNaN(A(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(A(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(A(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"control":return Te(e,t,n);case"convolution":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Conv1D":{const r=E("stride",e,t,n),s=E("pad",e,t,n),o=E("dataFormat",e,t,n).toUpperCase(),i=E("dilation",e,t,n);return[a.conv1d(E("x",e,t,n),E("filter",e,t,n),r,s,o,i)]}case"Conv2D":{const r=E("strides",e,t,n),s=O(e,t,n),o=E("dataFormat",e,t,n).toUpperCase(),i=E("dilations",e,t,n);return[a.conv2d(E("x",e,t,n),E("filter",e,t,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=Ie(e,t,n);return[a.fused.conv2d({x:E("x",e,t,n),filter:E("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=Ie(e,t,n);return[a.fused.depthwiseConv2d({x:E("x",e,t,n),filter:E("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=E("outputShape",e,t,n),s=E("strides",e,t,n),o=O(e,t,n);return[a.conv2dTranspose(E("x",e,t,n),E("filter",e,t,n),r,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=E("strides",e,t,n),s=O(e,t,n),o=E("dilations",e,t,n),i=E("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(E("input",e,t,n),E("filter",e,t,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const r=E("strides",e,t,n),s=E("pad",e,t,n),o=E("dataFormat",e,t,n).toUpperCase(),i=E("dilations",e,t,n);return[a.conv3d(E("x",e,t,n),E("filter",e,t,n),[r[1],r[2],r[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const r=E("strides",e,t,n),s=E("pad",e,t,n),o=E("kernelSize",e,t,n);return[a.avgPool(E("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=E("strides",e,t,n),s=E("pad",e,t,n),o=E("kernelSize",e,t,n);return[a.maxPool(E("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=E("strides",e,t,n),s=E("pad",e,t,n),o=E("kernelSize",e,t,n),i=E("includeBatchInIndex",e,t,n),{result:c,indexes:l}=a.maxPoolWithArgmax(E("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s,i);return[c,l]}case"AvgPool3D":{const r=E("strides",e,t,n),s=E("pad",e,t,n),o=E("kernelSize",e,t,n);return[a.avgPool3d(E("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=E("strides",e,t,n),s=E("pad",e,t,n),o=E("kernelSize",e,t,n);return[a.maxPool3d(E("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=E("strides",e,t,n),s=E("pad",e,t,n),o=E("dilations",e,t,n),i=r[1],c=r[2],l=o[1],u=o[2];return[a.dilation2d(E("x",e,t,n),E("filter",e,t,n),[i,c],s,[l,u],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"creation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Fill":{const r=E("shape",e,t,n),s=E("dtype",e,t,n),o=E("value",e,t,n);return[a.fill(r,o,s)]}case"LinSpace":{const r=E("start",e,t,n),s=E("stop",e,t,n),o=E("num",e,t,n);return[a.linspace(r,s,o)]}case"Multinomial":{const r=E("logits",e,t,n),s=E("numSamples",e,t,n),o=E("seed",e,t,n);return[a.multinomial(r,s,o)]}case"OneHot":{const r=E("indices",e,t,n),s=E("depth",e,t,n),o=E("onValue",e,t,n),i=E("offValue",e,t,n),c=E("dtype",e,t,n);return[a.oneHot(r,s,o,i,c)]}case"Ones":return[a.ones(E("shape",e,t,n),E("dtype",e,t,n))];case"OnesLike":return[a.onesLike(E("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(E("shape",e,t,n),E("dtype",e,t,n),E("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(E("shape",e,t,n),E("minval",e,t,n),E("maxval",e,t,n),E("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(E("shape",e,t,n),E("minval",e,t,n),E("maxval",e,t,n),E("seed",e,t,n))];case"Range":{const r=E("start",e,t,n),s=E("stop",e,t,n),o=E("step",e,t,n);return[a.range(r,s,o,E("dtype",e,t,n))]}case"TruncatedNormal":{const r=E("shape",e,t,n),s=E("mean",e,t,n),o=E("stdDev",e,t,n),i=E("seed",e,t,n);return[a.truncatedNormal(r,s,o,E("dtype",e,t,n),i)]}case"Zeros":return[a.zeros(E("shape",e,t,n),E("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(E("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:k;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=Ne(e,t,n),u=await r.image.nonMaxSuppressionWithScoreAsync(a,s,o,i,c,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Ne(e,t,n),l=E("padToMaxOutputSize",e,t,n),u=await r.image.nonMaxSuppressionPaddedAsync(a,s,o,i,c,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Ne(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,s,o,i,c)]}case"Where":{const a=r.cast(E("condition",e,t,n),"bool"),s=[await r.whereAsync(a)];return a.dispose(),s}case"ListDiff":return r.setdiff1dAsync(E("x",e,t,n),E("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n);case"evaluation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"LowerBound":{const r=E("sortedSequence",e,t,n),s=E("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{const r=E("x",e,t,n),s=E("k",e,t,n),o=E("sorted",e,t,n),i=a.topk(r,s,o);return[i.values,i.indices]}case"UpperBound":{const r=E("sortedSequence",e,t,n),s=E("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{const r=E("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{const r=E("x",e,t,n),s=E("axis",e,t,n),o=a.unique(r,s);return[o.values,o.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"image":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ResizeBilinear":{const r=E("images",e,t,n),s=E("size",e,t,n),o=E("alignCorners",e,t,n),i=E("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const r=E("images",e,t,n),s=E("size",e,t,n),o=E("alignCorners",e,t,n),i=E("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],o,i)]}case"CropAndResize":{const r=E("image",e,t,n),s=E("boxes",e,t,n),o=E("boxInd",e,t,n),i=E("cropSize",e,t,n),c=E("method",e,t,n),l=E("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,o,i,c,l)]}case"ImageProjectiveTransformV3":{const r=E("images",e,t,n),s=E("transforms",e,t,n),o=E("outputShape",e,t,n),i=E("fillValue",e,t,n),c=E("interpolation",e,t,n),l=E("fillMode",e,t,n);return[a.image.transform(r,s,c.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"graph":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=E("default",e,t,n);return[A(e.name,t,n)||r];case"Placeholder":return[A(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[L(E("x",e,t,n))];case"IdentityN":return E("x",e,t,n).map((e=>L(e)));case"Shape":return[a.tensor1d(E("x",e,t,n).shape,"int32")];case"ShapeN":return E("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(E("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(E("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const s=E("x",e,t,n),o=E("data",e,t,n),i=E("message",e,t,n),c=E("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,c));return[s];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"logical":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Equal":return[a.equal(E("a",e,t,n),E("b",e,t,n))];case"NotEqual":return[a.notEqual(E("a",e,t,n),E("b",e,t,n))];case"Greater":return[a.greater(E("a",e,t,n),E("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(E("a",e,t,n),E("b",e,t,n))];case"Less":return[a.less(E("a",e,t,n),E("b",e,t,n))];case"LessEqual":return[a.lessEqual(E("a",e,t,n),E("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(E("a",e,t,n),E("b",e,t,n))];case"LogicalNot":return[a.logicalNot(E("a",e,t,n))];case"LogicalOr":return[a.logicalOr(E("a",e,t,n),E("b",e,t,n))];case"Select":case"SelectV2":return[a.where(E("condition",e,t,n),E("a",e,t,n),E("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(E("a",e,t,n),E("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"matrices":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(E("a",e,t,n),E("b",e,t,n),E("transposeA",e,t,n),E("transposeB",e,t,n))];case"Einsum":return[a.einsum(E("equation",e,t,n),...E("tensors",e,t,n))];case"Transpose":return[a.transpose(E("x",e,t,n),E("perm",e,t,n))];case"_FusedMatMul":const[r,s]=E("fusedOps",e,t,n),o="biasadd"===r,i="prelu"===s,c=E("numArgs",e,t,n),l=E("leakyreluAlpha",e,t,n);if(o){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,d]=E("args",e,t,n);return[a.fused.matMul({a:E("a",e,t,n),b:E("b",e,t,n),transposeA:E("transposeA",e,t,n),transposeB:E("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:d,leakyreluAlpha:l})];case"MatrixBandPart":return[a.linalg.bandPart(E("a",e,t,n),E("numLower",e,t,n),E("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"normalization":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(E("x",e,t,n),E("axis",e,t,n),E("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(E("x",e,t,n),E("mean",e,t,n),E("variance",e,t,n),E("offset",e,t,n),E("scale",e,t,n),E("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(E("x",e,t,n),E("radius",e,t,n),E("bias",e,t,n),E("alpha",e,t,n),E("beta",e,t,n))];case"Softmax":return[a.softmax(E("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(E("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"ragged":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather(E("paramsNestedSplits",e,t,n),E("paramsDenseValues",e,t,n),E("indices",e,t,n),E("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange(E("starts",e,t,n),E("limits",e,t,n),E("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(E("shape",e,t,n),E("values",e,t,n),E("defaultValue",e,t,n),E("rowPartitionTensors",e,t,n),E("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"reduction":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Max":{const r=E("axis",e,t,n),s=E("keepDims",e,t,n);return[a.max(E("x",e,t,n),r,s)]}case"Mean":{const r=E("axis",e,t,n),s=E("keepDims",e,t,n);return[a.mean(E("x",e,t,n),r,s)]}case"Min":{const r=E("axis",e,t,n),s=E("keepDims",e,t,n);return[a.min(E("x",e,t,n),r,s)]}case"Sum":{const r=E("axis",e,t,n),s=E("keepDims",e,t,n);return[a.sum(E("x",e,t,n),r,s)]}case"All":{const r=E("axis",e,t,n),s=E("keepDims",e,t,n);return[a.all(E("x",e,t,n),r,s)]}case"Any":{const r=E("axis",e,t,n),s=E("keepDims",e,t,n);return[a.any(E("x",e,t,n),r,s)]}case"ArgMax":{const r=E("axis",e,t,n);return[a.argMax(E("x",e,t,n),r)]}case"ArgMin":{const r=E("axis",e,t,n);return[a.argMin(E("x",e,t,n),r)]}case"Prod":{const r=E("axis",e,t,n),s=E("keepDims",e,t,n);return[a.prod(E("x",e,t,n),r,s)]}case"Cumprod":{const r=E("axis",e,t,n),s=E("exclusive",e,t,n),o=E("reverse",e,t,n);return[a.cumprod(E("x",e,t,n),r,s,o)]}case"Cumsum":{const r=E("axis",e,t,n),s=E("exclusive",e,t,n),o=E("reverse",e,t,n);return[a.cumsum(E("x",e,t,n),r,s,o)]}case"Bincount":const r=E("x",e,t,n),s=E("weights",e,t,n),o=E("size",e,t,n);return[a.bincount(r,s,o)];case"DenseBincount":{const r=E("x",e,t,n),s=E("weights",e,t,n),o=E("size",e,t,n),i=E("binaryOutput",e,t,n);return[a.denseBincount(r,s,o,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"slice_join":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ConcatV2":case"Concat":{const r=E("n",e,t,n),s=E("axis",e,t,n);let o=E("tensors",e,t,n);return o=o.slice(0,r),[a.concat(o,s)]}case"Gather":{const r=E("x",e,t,n),s=E("indices",e,t,n);return[a.gather(r,a.cast(s,"int32"),0)]}case"GatherV2":{const r=E("axis",e,t,n),s=E("batchDims",e,t,n),o=E("x",e,t,n),i=E("indices",e,t,n);return[a.gather(o,a.cast(i,"int32"),r,s)]}case"Reverse":{const r=E("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const o=E("x",e,t,n);return[a.reverse(o,s)]}case"ReverseV2":{const r=E("axis",e,t,n),s=E("x",e,t,n);return[a.reverse(s,r)]}case"Slice":{const r=E("begin",e,t,n),s=E("size",e,t,n);return[a.slice(E("x",e,t,n),r,s)]}case"StridedSlice":{const r=E("begin",e,t,n),s=E("end",e,t,n),o=E("strides",e,t,n),i=E("beginMask",e,t,n),c=E("endMask",e,t,n),l=E("ellipsisMask",e,t,n),u=E("newAxisMask",e,t,n),d=E("shrinkAxisMask",e,t,n),h=E("x",e,t,n);return[a.stridedSlice(h,r,s,o,i,c,l,u,d)]}case"Pack":return(0,S.DZQ)((()=>{const r=E("axis",e,t,n),s=E("tensors",e,t,n),o=s[0].shape,i=a.squeeze(s[0]).shape,c=s.map((e=>{const t=S.ZSL.arraysEqual(e.shape,o);if(!t&&!S.ZSL.arraysEqual(a.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,o)}));return[a.stack(c,r)]}));case"Unpack":{const r=E("axis",e,t,n),s=E("tensor",e,t,n);return a.unstack(s,r)}case"Tile":{const r=E("reps",e,t,n);return[a.tile(E("x",e,t,n),r)]}case"Split":case"SplitV":{const r=E("axis",e,t,n),s=E("numOrSizeSplits",e,t,n),o=E("x",e,t,n);return a.split(o,s,r)}case"ScatterNd":{const r=E("indices",e,t,n),s=E("values",e,t,n),o=E("shape",e,t,n);return[a.scatterND(r,s,o)]}case"GatherNd":{const r=E("x",e,t,n),s=E("indices",e,t,n);return[a.gatherND(r,s)]}case"SparseToDense":{const r=E("sparseIndices",e,t,n),s=E("outputShape",e,t,n),o=E("sparseValues",e,t,n),i=E("defaultValue",e,t,n);return[a.sparseToDense(r,o,s,o.dtype===i.dtype?i:a.cast(i,o.dtype))]}case"TensorScatterUpdate":{const r=E("indices",e,t,n),s=E("values",e,t,n),o=E("tensor",e,t,n);return[a.tensorScatterUpdate(o,r,s)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"sparse":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows(E("indices",e,t,n),E("values",e,t,n),E("denseShape",e,t,n),E("defaultValue",e,t,n));return[r,s,o,i]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=a.sparse.sparseReshape(E("inputIndices",e,t,n),E("inputShape",e,t,n),E("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(E("data",e,t,n),E("indices",e,t,n),E("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(E("data",e,t,n),E("indices",e,t,n),E("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"spectral":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"FFT":return[a.fft(E("x",e,t,n))];case"IFFT":return[a.ifft(E("x",e,t,n))];case"RFFT":return[a.rfft(E("x",e,t,n))];case"IRFFT":return[a.irfft(E("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"string":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(E("input",e,t,n),E("pattern",e,t,n),E("rewrite",e,t,n),E("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=a.string.stringNGrams(E("data",e,t,n),E("dataSplits",e,t,n),E("separator",e,t,n),E("nGramWidths",e,t,n),E("leftPad",e,t,n),E("rightPad",e,t,n),E("padWidth",e,t,n),E("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:o}=a.string.stringSplit(E("input",e,t,n),E("delimiter",e,t,n),E("skipEmpty",e,t,n));return[r,s,o]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(E("input",e,t,n),E("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"transformation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Cast":return[a.cast(E("x",e,t,n),E("dtype",e,t,n))];case"ExpandDims":{const r=E("axis",e,t,n);return[a.expandDims(E("x",e,t,n),r)]}case"Squeeze":{const r=E("axis",e,t,n);return[a.squeeze(E("x",e,t,n),r)]}case"Reshape":return[a.reshape(E("x",e,t,n),E("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(E("x",e,t,n),E("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(E("x",e,t,n),E("padding",e,t,n),E("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(E("x",e,t,n),E("padding",e,t,n),E("constantValue",e,t,n))];case"SpaceToBatchND":{const r=E("blockShape",e,t,n),s=E("paddings",e,t,n);return[a.spaceToBatchND(E("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=E("blockShape",e,t,n),s=E("crops",e,t,n);return[a.batchToSpaceND(E("x",e,t,n),r,s)]}case"DepthToSpace":{const r=E("blockSize",e,t,n),s=E("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(E("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo(E("x",e,t,n),E("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(E("s0",e,t,n),E("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=E("keyDType",e,t,n),s=E("valueDType",e,t,n),o=new Ee(r,s);return a.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=E("tableHandle",e,t,n,a),s=E("keys",e,t,n),o=E("values",e,t,n),i=a.getHashTableById(r.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=E("tableHandle",e,t,n,a),s=E("keys",e,t,n),o=E("defaultValue",e,t,n),i=a.getHashTableById(r.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=E("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}})(e,t,n,a);case"custom":const s=C(e.op);if(s&&s.customExecutor)return s.customExecutor(new ge(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return S.ZSL.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}class _e{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId))).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Re(e,t,n,a){const r=new Set,s=[];let o=null,i=null;const c=new Set,l=new Set(Object.keys(e).map((e=>D(e)[0])));a=a||[];const u=new Set(a.map((e=>D(e.name)[0]))),d=[...t];for(;d.length>0;){const e=d.pop();(ze(e)||Pe(e)||Be(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(l.has(e.name)||u.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{c.has(e.name)||(c.add(e.name),d.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:i}}function Fe(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>D(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],o=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const c=i([...r,...e.weights,...s]).filter(o),l=i([...c,...Object.values(e.nodes)]).filter(o),u=new Map(l.map((e=>[e.name,e]))),d={};for(const m of l){d[m.name]=d[m.name]||0;for(const e of m.children)o(e)||(d[e.name]=Number.POSITIVE_INFINITY),d[e.name]=(d[e.name]||0)+1}const h=Object.entries(d).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...h];for(;h.length>0;){const e=h.pop(),t=u.get(e);for(const n of t.children.filter(o))0===--d[n.name]&&(p.push(n.name),h.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!r.has(s.name)&&(r.add(s.name),a.push(s.name))}const s=e.filter((e=>r.has(e.name)));return s}(p.map((e=>u.get(e))),c);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"===typeof e?e:e.name),s=new Set(e.map((e=>e.name))),o=e=>s.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(o)){if(!n.has(e.name))throw new De("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new De("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!r(i))for(const e of i.inputs){if(!n.has(e.name))throw new De("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new De("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(f,c),f}class De extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const Oe=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Le=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Me=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function ze(e){return Oe.has(e.op)}function Pe(e){return Le.has(e.op)}function Be(e){return Me.has(e.op)}class We{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new We(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=Re(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}const o=Fe(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>ze(e)?n:t)),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),o=new Map;for(let i=0;i<e.length;++i){const t=s[i];if(t===n)continue;const a=e[i],r=e[t];o.has(r.name)||o.set(r.name,[]),o.get(r.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,S.aCs)(t),t}cloneTensorList(e){if(!e)return null;return e.map((e=>this.cloneAndKeepTensor(e)))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[D(e)[0]])),r=t.map((e=>D(e)[0])),s=new Set(r);let o=r.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(a,o);let c=this.compiledMap.get(i);null==c&&(c=this.compile(e,o),this.compiledMap.set(i,c));try{this.keepIntermediateTensors=(0,S._K2)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const l={},u={};return(0,S.DZQ)((()=>{const n=new _e(this.weightMap,l,u,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,s]=D(t,n),o=[];o[s]=e[t],a[r]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(o))}));const r=this.getFrozenTensorIds(a),{orderedNodes:o,nodeLiveUntilMap:i}=c;for(const e of o){if(a[e.name])continue;const t=Ae(e,a,n,this._resourceManager);if(S.ZSL.isPromise(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,s,i.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>A(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,o){if(!ze(t)&&!s.has(e)){for(const a of n[e])null!=a&&(o[a.id]=(o[a.id]||0)+t.children.length);for(const e of t.inputs){if(ze(e))continue;const t=_(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,s){function o(e){return ze(e)||r.has(e.name)}if(!ze(e)&&null!=s)for(const i of s){if(o(i))continue;const e=_(i.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,S._K2)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const s=new _e(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>A(e,o,s))),c=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),u=new Set([...c,...l,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||u.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(u),i}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),s=r.map((e=>this.graph.nodes[D(e)[0]])),o=n.map((e=>D(e)[0])),i=new Set(o);let c=o.map((e=>this.graph.nodes[e]));0===c.length&&(c=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:d,syncInputs:h}=Re(e,c,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=D(t),r=[];r[a]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(s,p,t,f,y,g,i,m,l);await Promise.all(e)}null!=d||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=c.filter((e=>!ze(e)&&!A(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=d&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(h,"]")),new Error("Cannot compute the outputs [".concat(b,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(u,"]. ").concat(e))}return f}processStack(e,t,n,a,r,s,o,i,c){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let u="";if("Enter"===e.node.op&&E("isConstant",e.node,a,n)&&([u]=R(e.node.name,n)),null==a[e.node.name]){const d=Ae(e.node,a,n,this._resourceManager);u||([u]=R(e.node.name,n));const h=n.currentContext;S.ZSL.isPromise(d)?l.push(d.then((l=>(a[u]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(l)),n.currentContext=h,this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c),l)))):(a[u]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(d)),this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c))}else this.processChildNodes(e.node,t,n,a,r,c)}return l}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{const[o]=R(e.name,n);!r[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!A(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!A(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=D(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));S.ZSL.assert(t,(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&S.ZSL.assert(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(e){var t,n;const a={};for(const r in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=s?a[s.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=D(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map((e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=D(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))}))}}class Ue{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var Ve=n(285);const Ge="?tfjs-format=file",je="model.json";class Ze{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Ue}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return S.ZSL.isPromise(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await(0,Ve.s5)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new We(te.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=te.Instance.transformGraph(e.modelInitializer);this.initializer=new We(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof S.qYS?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof S.qYS)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let a=0;return this.inputNodes.reduce(((t,n)=>{var r,s,o;const i=null===(o=null===(s=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,S.ASo)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Ke(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return"".concat(e).concat(je).concat(Ge)}(e));const a=new Ze(e,t,n);return await a.load(),a}const He="4.17.0"},6790:(e,t,n)=>{"use strict";n.d(t,{GJ:()=>a,uI:()=>r});class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class r{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,a,r){return s("move")}createTensorFromGPUData(e,t,n){return s("createTensorFromGPUData")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},6692:(e,t,n)=>{"use strict";function a(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(t,e[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(e,t,n||r)}(e,t,n),s=a<0?-(a+1):a;e.splice(s,0,t)}function r(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,a,r){return c(e,t,n,a,r,0)}function o(e,t,n,a,r,s){return c(e,t,n,a,r,0,!1,s,!0)}function i(e,t,n,a,r,s){return c(e,t,n,a,r,s,!0)}function c(e,t,n,r,s,o){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],h=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const p=[];for(let a=0;a<t.length;a++)t[a]>s&&p.push({score:t[a],boxIndex:a,suppressBeginIndex:0});p.sort(d);const f=o>0?-.5/o:0,m=[],g=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<s)break;let c=!1;for(let a=m.length-1;a>=i;--a){const n=l(e,o,m[a]);if(n>=r){c=!0;break}if(t.score=t.score*u(r,f,n),t.score<=s)break}t.suppressBeginIndex=m.length,c||(t.score===n?(m.push(o),g.push(t.score)):t.score>s&&a(p,t,d))}const y=m.length,b=n-y;c&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const v={selectedIndices:m};return i&&(v.selectedScores=g),h&&(v.validOutputs=y),v}function l(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(i-s)*(c-o),f=(d-l)*(h-u);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,u),y=Math.min(i,d),b=Math.min(c,h),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(p+f-v)}function u(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{c7:()=>s,ZS:()=>o,ut:()=>i})},9286:(e,t,n)=>{"use strict";n.d(t,{Y:()=>r});var a=n(259);function r(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=(0,a.r)(e,"int32"),s=(0,a.r)([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]),o=a*e.length;s.values.set(t,o)}return s.toTensor()}},2164:(e,t,n)=>{"use strict";n.d(t,{T2:()=>x,Ye:()=>v});var a=n(6790),r=n(5399),s=n(7926),o=n(9554),i=n(843),c=n(4124),l=n(8977),u=n(1426);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let a;const s=()=>{a=n()};let o;const i=l.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of a)e.dataSync();o=Promise.resolve({kernelMs:l.now()-i})}if((0,r._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let r=0;r<a.length;r++){const t=a[r];t.data().then((n=>{h(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class p{logKernelProfile(e,t,n,a,r,s){const o="number"===typeof a?u.av("".concat(a,"ms"),9):a.error,i=u.av(e,25),c=t.rank,l=t.size,d=u.av(t.shape.toString(),14);let h="";for(const u in r){const e=r[u];if(null!=e){const n=e.shape||t.shape,a=n.length;h+="".concat(u,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(d,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(9494),m=n(8804);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(c.i("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){(0,i.Op)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.Op)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof a.uI||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,c.i("Initialization of backend ".concat(e," failed")),c.i(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return c.i("Initialization of backend ".concat(e," failed")),c.i(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=x.runKernel(o.lzr,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return x.runKernel(o.KXH,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,i._5)(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-t-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let o,c;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const l=(0,i._5)(t,this.backendName);u.vA(null!=l,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),o=()=>{const e=this.backend.numDataIds();c=l.kernelFunc({inputs:r,attrs:s,backend:this.backend});const o=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();c=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:h}=e,p=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),a&&this.addTapeNode(l,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const a=(0,i.vQ)(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(u.vA(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>r[t]));return s.concat(o)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&u.Kg(e[0])&&(r=e.map((e=>l.encodeString(e))));const s=a.write(r,t,n),o=new f.qY(t,n,s,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,u.SL)(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,s=new f.qY(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new f.rT(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*u.jv(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.rT||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*u.jv(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},c=(0,i.vQ)(e);null!=c&&(a=c.gradFunc),null!=a&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=u.Ty(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(u.vA(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));u.vA(r instanceof f.qY,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const a={},r={};for(let c=0;c<t.length;c++)a[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(a[o.id]){n.outputs.forEach((e=>a[e.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(r[t.id]&&o[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=(0,u.FZ)((0,u.Ze)(e),"float32");return x.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[t]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[t];if(!u.r1(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==e[o.id])e[o.id]=r;else{const t=e[o.id];e[o.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),w);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){var t=this;return u.vA(u.Tn(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;u.vA(a.every((e=>e instanceof f.qY)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};a.forEach(((e,t)=>{o[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(s=e(...a,n),u.vA(s.value instanceof f.qY,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.vA(u.Tn(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(e,t)=>{const n=s.gradFunc(e,t),r=Array.isArray(n)?n:[n];u.vA(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.vA(r.every((e=>e instanceof f.qY)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return r.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function v(){const e=(0,s.L)();if(null==e._tfengine){const t=new r.OH(e);e._tfengine=new b(t)}return(0,r.tj)(e._tfengine.ENV),(0,f.qP)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const x=v();function w(e,t){const n={a:e,b:t};return x.runKernel(o.OMN,n)}},5399:(e,t,n)=>{"use strict";n.d(t,{OH:()=>s,_K:()=>i,tj:()=>l});var a=n(1426);const r="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,a.yL)(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(r in e){e[r].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function o(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")})),t}function i(){return c}let c=null;function l(e){c=e}},7926:(e,t,n)=>{"use strict";let a;function r(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function s(e,t){const n=function(){const e=r();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}n.d(t,{L:()=>r,m:()=>s})},8046:(e,t,n)=>{"use strict";n.d(t,{AS:()=>u,DZ:()=>l,Hi:()=>i,Hs:()=>f,aC:()=>d,gJ:()=>p,jz:()=>h,m1:()=>c});var a=n(2164),r=n(5399),s=n(9494),o=n(8804);function i(){return a.T2}function c(){return a.T2.memory()}function l(e,t){return a.T2.tidy(e,t)}function u(e){(0,o.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function d(e){return a.T2.keep(e)}function h(){return a.T2.backendName}function p(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return a.T2.registerBackend(e,t,n)}function f(){return a.T2.backend}(0,s.B4)((function(e){(0,r._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},1839:(e,t,n)=>{"use strict";n.d(t,{_X:()=>i,y7:()=>o});var a=n(2164),r=n(9494),s=n(1426);function o(e,t){s.vA(s.Tn(e),(()=>"The f passed in variableGrads(f) must be a function")),s.vA(null==t||Array.isArray(t)&&t.every((e=>e instanceof r.rT)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in a.T2.registeredVariables)t.push(a.T2.registeredVariables[e])}const o=n?t.filter((e=>!e.trainable)):null,i=t.length;t=t.filter((e=>e.trainable)),s.vA(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable."));const{value:c,grads:l}=a.T2.gradients(e,t,null,!0);s.vA(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),s.vA(0===c.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor")));const u={};return t.forEach(((e,t)=>{null!=l[t]&&(u[e.name]=l[t])})),null!=o&&o.forEach((e=>u[e.name]=null)),{value:c,grads:u}}function i(e){return a.T2.customGrad(e)}},263:(e,t,n)=>{"use strict";n.d(t,{ljI:()=>ct.ljI,Vvy:()=>ct.Vvy,PH8:()=>ct.PH8,OMN:()=>ct.OMN,EkD:()=>ct.EkD,u8Z:()=>ct.u8Z,FSt:()=>ct.FSt,Jp_:()=>ct.Jp_,p_m:()=>ct.p_m,QKF:()=>ct.QKF,epO:()=>ct.epO,TyE:()=>ct.TyE,lxb:()=>ct.lxb,zP9:()=>ct.zP9,ho8:()=>ct.ho8,cS:()=>ct.cS,wwC:()=>ct.wwC,VCH:()=>ct.VCH,jAQ:()=>ct.jAQ,Ik2:()=>ct.Ik2,N4F:()=>ct.N4F,HNs:()=>ct.HNs,vj7:()=>ct.vj7,KXH:()=>ct.KXH,QDP:()=>ct.QDP,vaV:()=>ct.vaV,pr3:()=>ct.pr3,$zE:()=>ct.$zE,$dB:()=>ct.$dB,p2J:()=>ct.p2J,rFm:()=>ct.rFm,jfg:()=>ct.jfg,A1h:()=>ct.A1h,iGz:()=>ct.iGz,gC7:()=>ct.gC7,Mn0:()=>ct.Mn0,MnK:()=>ct.MnK,MRQ:()=>ct.MRQ,jj_:()=>ct.jj_,nY8:()=>ct.nY8,GJx:()=>jn.GJ,wNW:()=>ct.wNW,TMz:()=>ct.TMz,tGH:()=>ct.tGH,X$8:()=>ct.X$8,nVu:()=>ct.nVu,ORI:()=>ct.ORI,jxD:()=>ct.jxD,pk0:()=>ct.pk0,bP9:()=>ct.bP9,XmO:()=>ct.XmO,Qgm:()=>ct.Qgm,Pah:()=>ct.Pah,rsH:()=>ct.rsH,BRl:()=>ct.BRl,_s9:()=>ct._s9,ox3:()=>ct.ox3,ybN:()=>ct.ybN,ybj:()=>ct.ybj,rGP:()=>ct.rGP,SQl:()=>ct.SQl,BxF:()=>ct.BxF,ZgB:()=>ct.ZgB,ElG:()=>ct.ElG,awo:()=>ct.awo,i5R:()=>ct.i5R,aAr:()=>ct.aAr,T7M:()=>ct.T7M,O4G:()=>ct.O4G,mxL:()=>ct.mxL,XhZ:()=>ct.XhZ,lLS:()=>ct.lLS,OAQ:()=>ct.OAQ,lzr:()=>ct.lzr,dv8:()=>ct.dv8,gIW:()=>ct.gIW,E3$:()=>ct.E3$,iPs:()=>ct.iPs,uI_:()=>jn.uI,jM4:()=>ct.jM4,ToN:()=>ct.ToN,X0$:()=>ct.X0$,mIA:()=>ct.mIA,CwD:()=>ct.CwD,mnI:()=>ct.mnI,tG8:()=>ct.tG8,Cg$:()=>ct.Cg$,RUm:()=>ct.RUm,nZd:()=>ct.nZd,LXA:()=>ct.LXA,VAI:()=>ct.VAI,t3d:()=>ct.t3d,ySp:()=>ct.ySp,cHb:()=>ct.cHb,RXX:()=>ct.RXX,TL8:()=>ct.TL8,LDN:()=>ct.LDN,g5A:()=>ct.g5A,lNG:()=>ct.lNG,LG0:()=>ct.LG0,x7F:()=>ct.x7F,BLA:()=>ct.BLA,WT3:()=>ct.WT3,xu7:()=>ct.xu7,l0G:()=>ct.l0G,SDM:()=>ct.SDM,Zl4:()=>ct.Zl4,e0f:()=>ct.e0f,ylV:()=>ct.ylV,urI:()=>ct.urI,LWX:()=>ct.LWX,ELo:()=>Ne,mM$:()=>ct.mM$,ODT:()=>ct.ODT,pyJ:()=>ct.pyJ,Ncv:()=>ct.Ncv,kdj:()=>ct.kdj,oJ2:()=>ct.oJ2,CQC:()=>ct.CQC,mH5:()=>ct.mH5,Q6t:()=>ct.Q6t,LRy:()=>ct.LRy,sDr:()=>ct.sDr,huO:()=>ct.huO,fUj:()=>ct.fUj,P_L:()=>ct.P_L,R23:()=>ct.R23,hgw:()=>ct.hgw,FCQ:()=>ct.FCQ,jOE:()=>ct.jOE,XQy:()=>ct.XQy,D7i:()=>ct.D7i,BK4:()=>ct.BK4,hVg:()=>ct.hVg,TOR:()=>ct.TOR,pJc:()=>ct.pJc,uWl:()=>ct.uWl,l6P:()=>ct.l6P,u$b:()=>ct.u$b,vI1:()=>ct.vI1,YVe:()=>ct.YVe,hql:()=>ct.hql,J3C:()=>ct.J3C,JiE:()=>ct.JiE,rFG:()=>ct.rFG,Fin:()=>ct.Fin,A8B:()=>ct.A8B,C8s:()=>ct.C8s,BoJ:()=>ct.BoJ,L6G:()=>ct.L6G,DvZ:()=>ct.DvZ,jgd:()=>ct.jgd,Blb:()=>ct.Blb,dFH:()=>ct.dFH,M6A:()=>ct.M6A,Ddj:()=>ct.Ddj,GZp:()=>ct.GZp,pnw:()=>ct.pnw,UcO:()=>ct.UcO,YAb:()=>ct.YAb,iW0:()=>ct.iW0,$jE:()=>ct.$jE,PbM:()=>ct.PbM,WuN:()=>ct.WuN,oFs:()=>ct.oFs,iuW:()=>ct.iuW,qYS:()=>le.qY,ylz:()=>le.yl,X4r:()=>ct.X4r,FAs:()=>ct.FAs,TBb:()=>ct.TBb,dLy:()=>ct.dLy,wx0:()=>ct.wx0,EwU:()=>ct.EwU,dXR:()=>ct.dXR,pPe:()=>ct.pPe,xJ3:()=>ct.xJ3,Dr:()=>ct.Dr,tnl:()=>Ct.tnl,WQq:()=>Ct.WQq,Q7R:()=>Ct.Q7R,bzn:()=>Ct.bzn,FLi:()=>Ct.FLi,$jT:()=>Ct.$jT,sub:()=>Ct.sub,Hs:()=>de.Hs,backend_util:()=>c,BFc:()=>Ct.BFc,kSi:()=>Ct.kSi,T5N:()=>Ct.T5N,hOW:()=>Ct.hOW,ZEY:()=>it,TaL:()=>o,ra8:()=>Ct.ra8,wgE:()=>Ct.wgE,zQh:()=>Ct.zQh,o8B:()=>Ct.o8B,xWs:()=>Ct.xWs,I1m:()=>Ct.I1m,RPU:()=>Ct.RPU,O5O:()=>Ct.O5O,P1l:()=>Ct.P1l,kA9:()=>Ct.kA9,Xtf:()=>Ct.Xtf,wX9:()=>Ct.wX9,IPL:()=>Ct.IPL,jIJ:()=>Ct.jIJ,aOp:()=>Ct.aOp,Gl3:()=>Ct.Gl3,eMq:()=>a,ASo:()=>de.AS,y4m:()=>Ct.y4m,EZY:()=>Ct.EZY,Pqc:()=>Ct.Pqc,Hi9:()=>de.Hi,_K2:()=>m._K,LCg:()=>Ct.LCg,oNF:()=>Ct.oNF,UG6:()=>Ct.UG6,y5U:()=>Ct.y5U,GSj:()=>Ct.GSj,RIf:()=>Ct.RIf,cZk:()=>Ct.cZk,kgh:()=>Ct.kgh,rhj:()=>Ct.rhj,DQN:()=>Ct.DQN,image:()=>Ct.Slp,io:()=>s,aCs:()=>de.aC,kpo:()=>l,H8d:()=>Ct.H8d,mPL:()=>Ct.mPL,Rm2:()=>Ct.Rm2,Kko:()=>Ct.Kko,HPB:()=>Ct.HPB,VZ:()=>Ct.VZ,n76:()=>Ct.n76,NoW:()=>Ct.NoW,T9B:()=>Ct.T9B,jgi:()=>Ct.jgi,NYV:()=>Ct.NYV,PhQ:()=>Ct.PhQ,i2o:()=>Ct.i2o,m1Z:()=>de.m1,jkA:()=>Ct.jkA,BpO:()=>Ct.BpO,Clk:()=>Ct.Clk,lKK:()=>Ct.lKK,HZy:()=>Ct.HZy,dA1:()=>_t,Ec:()=>Ct.Ec,Mw0:()=>Ct.Mw0,SaS:()=>Ct.SaS,P61:()=>Ct.P61,eVF:()=>Ct.eVF,NsG:()=>Ct.NsG,FE$:()=>Ct.FE$,YeY:()=>Ct.YeY,y17:()=>Ct.y17,gJX:()=>de.gJ,tAK:()=>lt.tA,VVh:()=>Ct.VVh,tQQ:()=>Ct.tQQ,BEg:()=>Ct.BEg,d_2:()=>Ct.d_2,WfX:()=>Ct.WfX,wdz:()=>Ct.wdz,JFn:()=>r,ry7:()=>Ct.ry7,dik:()=>Ct.dik,Q$M:()=>Ct.Q$M,zAd:()=>Ct.zAd,wck:()=>Ct.wck,R0O:()=>Ct.R0O,Kro:()=>kt,Vs9:()=>Ct.Vs9,lw0:()=>Ct.lw0,lDo:()=>Ct.lDo,RZD:()=>Ct.RZD,r2V:()=>Ct.r2V,t$z:()=>Ct.t$z,jbE:()=>Ct.jbE,czq:()=>Ct.czq,chL:()=>Nt.ch,ymU:()=>Ct.ymU,OEK:()=>Ct.OEK,tGX:()=>Ct.tGX,KtR:()=>Ct.KtR,d_S:()=>St,DZQ:()=>de.DZ,Vsq:()=>Ct.Vsq,BaG:()=>Et,mgz:()=>Ct.mgz,efE:()=>Ct.efE,K$i:()=>Ct.K$i,TuY:()=>Nt.Tu,ZSL:()=>Tt,bvq:()=>Ct.bvq,bgA:()=>It,_M9:()=>Ct._M9,Ul9:()=>Ct.Ul9,POl:()=>Ct.POl});var a={};n.r(a),n.d(a,{isBrowser:()=>f,isMobile:()=>p,mockIsMobile:()=>h});var r={};n.r(r),n.d(r,{Serializable:()=>ke,SerializationMap:()=>Se,getRegisteredName:()=>Ie,registerClass:()=>Te});var s={};n.r(s),n.d(s,{CompositeArrayBuffer:()=>S.D,browserFiles:()=>Ge,browserHTTPRequest:()=>$e,concatenateArrayBuffers:()=>y.AQ,copyModel:()=>J,decodeWeights:()=>y.CY,decodeWeightsStream:()=>y.s5,encodeWeights:()=>y.aG,fromMemory:()=>at,fromMemorySync:()=>rt,getLoadHandlers:()=>k,getModelArtifactsForJSON:()=>y.Ej,getModelArtifactsForJSONSync:()=>y.Rl,getModelArtifactsInfoForJSON:()=>y.oR,getSaveHandlers:()=>w,getWeightSpecs:()=>y.Xf,http:()=>Je,isHTTPScheme:()=>Qe,listModels:()=>Q,loadWeights:()=>He,moveModel:()=>$,registerLoadRouter:()=>x,registerSaveRouter:()=>v,removeModel:()=>X,weightsLoaderFactory:()=>qe,withSaveHandler:()=>st,withSaveHandlerSync:()=>ot});var o={};n.r(o),n.d(o,{draw:()=>xt,fromPixels:()=>wt,fromPixelsAsync:()=>yt,toPixels:()=>vt});var i={};n.r(i),n.d(i,{collectGatherOpShapeInfo:()=>Bn,computeOutShape:()=>Pn,segOpComputeOptimalWindowSize:()=>zn});var c={};n.r(c),n.d(c,{ERF_A1:()=>$t,ERF_A2:()=>en,ERF_A3:()=>tn,ERF_A4:()=>nn,ERF_A5:()=>an,ERF_P:()=>Jt,PARALLELIZE_THRESHOLD:()=>Ut,RowPartitionType:()=>Ot,SELU_SCALE:()=>Xt.X,SELU_SCALEALPHA:()=>Xt.j,applyActivation:()=>Mt.f2,assertAndGetBroadcastShape:()=>it.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>Rt.WC,assertParamsConsistent:()=>Ft,assignToTypedArray:()=>dn,axesAreInnerMostDims:()=>Rt.WH,calculateShapes:()=>Qt.l8,checkEinsumDimSizes:()=>xn,checkPadOnDimRoundingMode:()=>Lt.s_,combineLocations:()=>Rt.aF,combineRaggedTensorToTensorShapes:()=>zt,complexWithEvenIndex:()=>cn,complexWithOddIndex:()=>ln,computeConv2DInfo:()=>Lt.uf,computeConv3DInfo:()=>Lt.p$,computeDefaultPad:()=>Lt.G8,computeDilation2DInfo:()=>Lt.YQ,computeOptimalWindowSize:()=>Vt,computeOutAndReduceShapes:()=>Rt.lb,computeOutShape:()=>Dt,computePool2DInfo:()=>Lt.E6,computePool3DInfo:()=>Lt.l5,convertConv2DDataFormat:()=>Lt.$Q,decodeEinsumEquation:()=>bn,eitherStridesOrDilationsAreOne:()=>Lt.G0,expandShapeToKeepDim:()=>Rt.SM,exponent:()=>pn,exponents:()=>hn,fromStringArrayToUint8:()=>Un,fromUint8ToStringArray:()=>Wn,getAxesPermutation:()=>Rt.Em,getBroadcastDims:()=>it.getBroadcastDims,getComplexWithIndex:()=>un,getEinsumComputePath:()=>wn,getEinsumPermutation:()=>vn,getFusedBiasGradient:()=>Mt.Do,getFusedDyActivation:()=>Mt.XB,getImageCenter:()=>Gt,getInnerMostAxes:()=>Rt.fK,getPermuted:()=>Zt,getRaggedRank:()=>Bt,getReductionAxes:()=>it.getReductionAxes,getReshaped:()=>jt,getReshapedPermuted:()=>Kt,getRowPartitionTypesHelper:()=>Pt,getSliceBeginCoords:()=>Ht,getSliceSize:()=>qt,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>In,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Nn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Cn,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>_n,getSparseReshapeInputOutputMismatchErrorMessage:()=>Fn,getSparseReshapeInputOutputMultipleErrorMessage:()=>Rn,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>En,getSparseReshapeNegativeOutputDimErrorMessage:()=>An,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Mn,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Dn,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>On,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Ln,getUndoAxesPermutation:()=>Rt.gx,isIdentityPermutation:()=>kn,log:()=>rn.R,mergeRealAndImagArrays:()=>sn,prepareAndValidate:()=>Yt,prepareSplitSize:()=>Tn,segment_util:()=>i,shouldFuse:()=>Mt.zE,slice_util:()=>kt,splitRealAndImagArrays:()=>on,stridesOrDilationsArePositive:()=>Lt.qk,tupleValuesAreOne:()=>Lt.Dh,upcastType:()=>Nt.Tu,validateDefaultValueShape:()=>Wt,validateInput:()=>Qt.TT,validateUpdateShape:()=>Qt.Ly,warn:()=>rn.i});var l={};n.r(l),n.d(l,{c7:()=>Vn.c7,ZS:()=>Vn.ZS,ut:()=>Vn.ut,YO:()=>Gn.Y});var u=n(2164);let d;function h(e){d=e}function p(e){if(void 0!==d)return d;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function f(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var m=n(5399);const g=(0,m._K)();g.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),g.registerFlag("IS_BROWSER",(()=>f())),g.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),g.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),g.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),g.registerFlag("PROD",(()=>!1)),g.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>g.getBool("DEBUG"))),g.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),g.registerFlag("IS_TEST",(()=>!1)),g.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>g.getBool("DEBUG"))),g.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),g.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),g.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var y=n(285);class b{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==b.instance&&(b.instance=new b),b.instance}static registerSaveRouter(e){b.getInstance().saveRouters.push(e)}static registerLoadRouter(e){b.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return b.getHandlers(e,"save")}static getLoadHandlers(e,t){return b.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?b.getInstance().loadRouters:b.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const v=e=>b.registerSaveRouter(e),x=e=>b.registerLoadRouter(e),w=e=>b.getSaveHandlers(e),k=(e,t)=>b.getLoadHandlers(e,t);var S=n(7131);const T="tensorflowjs",I="models_store",N="model_info_store";function C(){if(!(0,m._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function E(e){const t=e.result;t.createObjectStore(I,{keyPath:"modelPath"}),t.createObjectStore(N,{keyPath:"modelPath"})}class A{constructor(e){if(this.indexedDB=C(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(T,1);a.onupgradeneeded=()=>E(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(I,"readonly"),a=t.objectStore(I).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=S.D.join(t.weightData);const a=(0,y.oR)(t),o=r.transaction(N,"readwrite");let i,c,l=o.objectStore(N);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(s){return n(s)}i.onsuccess=()=>{c=r.transaction(I,"readwrite");const i=c.objectStore(I);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(s){return n(s)}u.onsuccess=()=>e({modelArtifactsInfo:a}),u.onerror=e=>{l=o.objectStore(N);const t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(u.error)),t.onerror=e=>(r.close(),n(u.error))}},i.onerror=e=>(r.close(),n(i.error)),o.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}A.URL_SCHEME="indexeddb://";const _=e=>{return(0,m._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(A.URL_SCHEME)?(t=e.slice(A.URL_SCHEME.length),new A(t)):null;var t};b.registerSaveRouter(_),b.registerLoadRouter(_);class R{constructor(){this.indexedDB=C()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(T,1);n.onupgradeneeded=()=>E(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(N,"readonly"),s=r.objectStore(N).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(A.URL_SCHEME)?t.slice(A.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(T,1);a.onupgradeneeded=()=>E(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(N,"readwrite"),o=s.objectStore(N),i=o.get(e);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=o.delete(e),s=()=>{c=r.transaction(I,"readwrite");const a=c.objectStore(I).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(i.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}var F=n(1426);const D="/",O="tensorflowjs_models",L="info",M="model_topology",z="weight_specs",P="weight_data",B="model_metadata";function W(e){return{info:[O,e,L].join(D),topology:[O,e,M].join(D),weightSpecs:[O,e,z].join(D),weightData:[O,e,P].join(D),modelMetadata:[O,e,B].join(D)}}function U(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function V(e){const t=e.split(D);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(D)}class G{constructor(e){if(!(0,m._K)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=W(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=(0,y.oR)(e),s=S.D.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,(0,y.l3)(s));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw U(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=(0,y.jf)(s),t}}G.URL_SCHEME="localstorage://";const j=e=>{return(0,m._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(G.URL_SCHEME)?(t=e.slice(G.URL_SCHEME.length),new G(t)):null;var t};b.registerSaveRouter(j),b.registerLoadRouter(j);class Z{constructor(){(0,F.vA)((0,m._K)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,F.vA)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=O+D,n=D+L;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[V(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=W(e=(t=e).startsWith(G.URL_SCHEME)?t.slice(G.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return U(n),a}}const K="://";class H{constructor(){this.managers={}}static getInstance(){return null==H.instance&&(H.instance=new H),H.instance}static registerManager(e,t){(0,F.vA)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(K)&&(e=e.slice(0,e.indexOf(K))),(0,F.vA)(e.length>0,(()=>"scheme must not be an empty string."));const n=H.getInstance();(0,F.vA)(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=H.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(H.getInstance().managers)}}function q(e){if(-1===e.indexOf(K))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(H.getSchemes().join(",")));return{scheme:e.split(K)[0],path:e.split(K)[1]}}async function Y(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(0,F.vA)(e!==t,(()=>"Old path and new path are the same: '".concat(e,"'")));const a=b.getLoadHandlers(e);(0,F.vA)(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(e,"."))),(0,F.vA)(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")));const r=a[0],s=b.getSaveHandlers(t);(0,F.vA)(s.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,"."))),(0,F.vA)(s.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,".")));const o=s[0],i=q(e).scheme,c=q(e).path,l=i===q(e).scheme,u=await r.load();n&&l&&await H.getManager(i).removeModel(c);const d=await o.save(u);return n&&!l&&await H.getManager(i).removeModel(c),d.modelArtifactsInfo}async function Q(){const e=H.getSchemes(),t={};for(const n of e){const e=await H.getManager(n).listModels();for(const a in e){t[n+K+a]=e[a]}}return t}async function X(e){const t=q(e);return H.getManager(t.scheme).removeModel(t.path)}async function J(e,t){return Y(e,t,!1)}async function $(e,t){return Y(e,t,!0)}var ee=n(5767);class te{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&(0,m._K)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,ee.Y)(e)}}if((0,m._K)().get("IS_BROWSER")){(0,m._K)().setPlatform("browser",new te);try{H.registerManager(G.URL_SCHEME,new Z)}catch(Zn){}try{H.registerManager(A.URL_SCHEME,new R)}catch(Zn){}}const ne=()=>n(5817);let ae;class re{constructor(){this.util=n(8590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,m._K)().global.fetch?(0,m._K)().global.fetch(e,t):(null==ae&&(ae=ne()),ae(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,m._K)().get("IS_NODE")&&!(0,m._K)().get("IS_BROWSER")&&(0,m._K)().setPlatform("node",new re);var se=n(259),oe=n(7794),ie=n(9820),ce=n(6574),le=n(9494);(0,u.Ye)();const ue={buffer:se.r,cast:oe.w,clone:ie.o,print:ce.y};(0,le.Q5)(ue);var de=n(8046),he=n(7242),pe=n(4974),fe=n(803),me=n(191),ge=n(7738),ye=n(3290),be=n(1839),ve=n(1997);const xe=new Map,we=new Map;class ke{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Se{constructor(){this.classNameMap={}}static getMap(){return null==Se.instance&&(Se.instance=new Se),Se.instance}static register(e){Se.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Te(e,t,n){(0,F.vA)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,F.vA)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,F.vA)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return Se.register(e),xe.set(a,e),we.set(e,a),e}function Ie(e){return we.has(e)?we.get(e):e.className}class Ne extends ke{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return(0,de.AS)(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,be.y7)(e,t)}dispose(){null!=this.iterations_&&(0,de.AS)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,ve.d)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ne,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ce extends Ne{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=u.T2.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=u.T2.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:(0,de.DZ)((()=>(0,ye.P)(a).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:(0,de.DZ)((()=>(0,ye.P)(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,de.DZ)((()=>{const e=(0,he.W)((0,fe.l)(o,this.rho),(0,fe.l)((0,ge.E)(s),1-this.rho)),t=(0,fe.l)((0,pe.y)((0,me.R)((0,he.W)(i,this.epsilon)),(0,me.R)((0,he.W)(o,this.epsilon))),s),n=(0,he.W)((0,fe.l)(i,this.rho),(0,fe.l)((0,ge.E)(t),1-this.rho));o.assign(e),i.assign(n);const r=(0,he.W)((0,fe.l)(t,-this.learningRate),a);a.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,de.AS)(this.accumulatedGrads.map((e=>e.variable))),(0,de.AS)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var Ee=n(4660);class Ae extends Ne{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=u.T2.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:(0,de.DZ)((()=>(0,Ee.G)(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;(0,de.DZ)((()=>{const e=(0,he.W)(s,(0,ge.E)(r));s.assign(e);const t=(0,he.W)((0,fe.l)((0,pe.y)(r,(0,me.R)((0,he.W)(e,u.T2.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,de.AS)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var _e=n(7587),Re=n(7951);class Fe extends Ne{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,de.DZ)((()=>{this.accBeta1=(0,ve.d)(t).variable(),this.accBeta2=(0,ve.d)(n).variable()})),null==a&&(this.epsilon=u.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,de.DZ)((()=>{const n=(0,Re.j)(1,this.accBeta1),a=(0,Re.j)(1,this.accBeta2);t.forEach(((t,r)=>{const s=u.T2.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:(0,de.DZ)((()=>(0,ye.P)(s).variable(o)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(t,"/v"),variable:(0,de.DZ)((()=>(0,ye.P)(s).variable(o)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,d=(0,he.W)((0,fe.l)(c,this.beta1),(0,fe.l)(i,1-this.beta1)),h=(0,he.W)((0,fe.l)(l,this.beta2),(0,fe.l)((0,ge.E)(i),1-this.beta2)),p=(0,pe.y)(d,n),f=(0,pe.y)(h,a);c.assign(d),l.assign(h);const m=(0,he.W)((0,fe.l)((0,pe.y)(p,(0,he.W)((0,me.R)(f),this.epsilon)),-this.learningRate),s);s.assign(m)})),this.accBeta1.assign((0,fe.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,fe.l)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,de.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,de.AS)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,de.DZ)((()=>{this.accBeta1.assign((0,_e.n)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,_e.n)(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var De=n(3753),Oe=n(2131);class Le extends Ne{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,de.DZ)((()=>{this.iteration=(0,ve.d)(0).variable(),this.accBeta1=(0,ve.d)(t).variable()})),null==a&&(this.epsilon=u.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,de.DZ)((()=>{const n=(0,Re.j)(1,this.accBeta1),a=(0,pe.y)(-this.learningRate,(0,he.W)((0,fe.l)(this.iteration,this.decay),1));t.forEach(((t,r)=>{const s=u.T2.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:(0,ye.P)(s).variable(o)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(t,"/v"),variable:(0,ye.P)(s).variable(o)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,d=(0,he.W)((0,fe.l)(c,this.beta1),(0,fe.l)(i,1-this.beta1)),h=(0,fe.l)(l,this.beta2),p=(0,De.t)(i),f=(0,Oe.P)(h,p);c.assign(d),l.assign(f);const m=(0,he.W)((0,fe.l)((0,pe.y)(a,n),(0,pe.y)(d,(0,he.W)(f,this.epsilon))),s);s.assign(m)})),this.iteration.assign((0,he.W)(this.iteration,1)),this.accBeta1.assign((0,fe.l)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,de.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,de.AS)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Me extends Ne{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=u.T2.registeredVariables[t];(0,de.DZ)((()=>{const e=(0,he.W)((0,fe.l)(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,de.aC)((0,ve.d)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class ze extends Me{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,ve.d)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=u.T2.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:(0,de.DZ)((()=>(0,ye.P)(a).variable(e)))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,de.DZ)((()=>{let e;const t=(0,he.W)((0,fe.l)(this.m,r),s);e=this.useNesterov?(0,he.W)((0,fe.l)(this.c,(0,he.W)(s,(0,fe.l)(t,this.m))),a):(0,he.W)((0,fe.l)(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,de.AS)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Pe extends Ne{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=u.T2.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=u.T2.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:(0,de.DZ)((()=>(0,ye.P)(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:(0,de.DZ)((()=>(0,ye.P)(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:(0,de.DZ)((()=>(0,ye.P)(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,de.DZ)((()=>{const e=(0,he.W)((0,fe.l)(o,this.decay),(0,fe.l)((0,ge.E)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=(0,he.W)((0,fe.l)(t,this.decay),(0,fe.l)(s,1-this.decay)),c=(0,pe.y)((0,fe.l)(s,this.learningRate),(0,me.R)((0,Re.j)(e,(0,he.W)((0,ge.E)(r),this.epsilon)))),l=(0,he.W)((0,fe.l)(i,this.momentum),c);o.assign(e),t.assign(r),i.assign(l);const u=(0,Re.j)(a,l);a.assign(u)}else{const e=(0,he.W)((0,fe.l)(o,this.decay),(0,fe.l)((0,ge.E)(s),1-this.decay)),t=(0,he.W)((0,fe.l)(i,this.momentum),(0,pe.y)((0,fe.l)(s,this.learningRate),(0,me.R)((0,he.W)(e,this.epsilon))));o.assign(e),i.assign(t);const n=(0,Re.j)(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,de.AS)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,de.AS)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,de.AS)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Be=[Ce,Ae,Fe,Le,ze,Pe,Me];function We(e){return new Promise((e=>setTimeout(e))).then(e)}class Ue{constructor(e){if(!(0,m._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ue.URL_SCHEME)&&(e=e.slice(Ue.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=S.D.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a=(0,y.zV)(e,t),r=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await We((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await We((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,y.oR)(e)}}}}Ue.URL_SCHEME="downloads://";class Ve{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:r});const s=(0,y.Ej)(a,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,y.P8)(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=(0,y.P8)(e);if(-1!==t.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(t.push(r),-1===n.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function Ge(e){return new Ve(e)}function je(e,t,n,a){!function(e){(0,F.vA)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,F.vA)(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),(0,F.vA)(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),(0,F.vA)(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++r/e.length*(a-n);return t(o),s})),s))))}b.registerSaveRouter((e=>(0,m._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ue.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Ue(e)}(e.slice(Ue.URL_SCHEME.length)):null));var Ze=n(1042);async function Ke(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,m._K)().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await je(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await je(r,t.onProgress,.5,1)}async function He(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return qe((e=>Ke(e,{requestInit:a})))(e,t,n)}function qe(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map((()=>!1)),s={},o=null!=a?a.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,l=Ze.i[c]*F.Ze(e.shape),u=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=a?a.forEach(((t,n)=>{t===e.name&&(u(),o[n]=!0)})):u(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=a.filter(((e,t)=>!o[t]));throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];c.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const u=await e(l),d={};let h=0;return c.forEach((e=>{const n=t[e].paths.length,a=new S.D(u.slice(h,h+n));s[e].forEach((e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,y.CY)(t,[e.manifestEntry]);for(const a in n)d[a]=n[a]})),h+=n})),d}}class Ye{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,F.vA)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,m._K)().platform.fetch,(0,F.vA)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,F.vA)(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a=(0,y.zV)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=S.D.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:(0,y.oR)(e),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(r.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(r){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return(0,y.Ej)(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=(0,y.Xf)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?(0,m._K)().platform.fetch:t.fetchFunc;let r,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;s<e.length;){if(!r){const n=(await a(e[s],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:c}=await r.read();if(!i)return void n.enqueue(c);s++,r=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,s=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(o)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[(0,y.Xf)(e),await Ke(t,this.loadOptions)]}}function Qe(e){return null!=e.match(Ye.URL_SCHEME_REGEX)}Ye.URL_SCHEME_REGEX=/^https?:\/\//;const Xe=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Qe(e))):Qe(e),n)return Je(e,t)}return null};function Je(e,t){return new Ye(e,t)}function $e(e,t){return Je(e,t)}b.registerSaveRouter(Xe),b.registerLoadRouter(Xe);class et{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class tt{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class nt{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function at(e,t,n,a){return new nt(rt(...arguments))}function rt(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new et(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new et({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new et({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function st(e){return new tt(e)}function ot(e){return new tt(e)}var it=n(8805),ct=n(9554),lt=n(843),ut=n(4148),dt=n(7892),ht=n(5395);let pt,ft=!1;function mt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(e.constructor.name));i=!0}if(null!=(0,lt._5)(ct.awo,u.T2.backendName)){const n={pixels:e},a={numChannels:t};return u.T2.runKernel(ct.awo,n,a)}const[c,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let d,h;if(o)d=e.getContext("2d").getImageData(0,0,c,l).data;else if(a||n)d=e.data;else if(s||r||i){if(null==pt)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");pt=new OffscreenCanvas(1,1).getContext("2d")}else pt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});pt.canvas.width=c,pt.canvas.height=l,pt.drawImage(e,0,0,c,l),d=pt.getImageData(0,0,c,l).data}if(4===t)h=new Int32Array(d);else{const e=c*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=d[4*n+e]}const p=[l,c,t];return(0,ht.$)(h,p,"int32")}function gt(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function yt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if((0,m._K)().getBool("WRAP_TO_IMAGEBITMAP")&&gt(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(a){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return mt(n,t)}function bt(e){if(2!==e.rank&&3!==e.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(e.rank,"."));const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(t));if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error("Unsupported type for toPixels: ".concat(e.dtype,".")+" Please use float32 or int32 tensors.")}async function vt(e,t){let n=(0,ut.YT)(e,"img","toPixels");if(!(e instanceof le.qY)){const e=n;n=(0,oe.w)(e,"int32"),e.dispose()}bt(n);const[a,r]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(r*a*4);for(let l=0;l<a*r;++l){const e=[0,0,0,255];for(let a=0;a<s;a++){const t=o[l*s+a];if("float32"===n.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===n.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===s?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[a]=t*i}const t=4*l;c[t+0]=Math.round(e[0]),c[t+1]=Math.round(e[1]),c[t+2]=Math.round(e[2]),c[t+3]=Math.round(e[3])}if(null!=t){if(!ft){null!=(0,lt._5)(ct.XmO,u.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),ft=!0)}t.width=r,t.height=a;const e=t.getContext("2d"),n=new ImageData(c,r,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),c}function xt(e,t,n){let a=(0,ut.YT)(e,"img","draw");if(!(e instanceof le.qY)){const e=a;a=(0,oe.w)(e,"int32"),e.dispose()}bt(a),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error("Alpha value ".concat(t," is suppoed to be in range [0 - 1]."))}(null===n||void 0===n?void 0:n.imageOptions);const r={image:a},s={canvas:t,options:n};u.T2.runKernel(ct.XmO,r,s)}const wt=(0,dt.op)({fromPixels_:mt});var kt=n(4642),St=n(8804),Tt=n(8977);const It="4.17.0";var Nt=n(8075),Ct=n(3007);const Et=class{static sgd(e){return new Me(e)}static momentum(e,t){return new ze(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Pe(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Fe(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Ce(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Le(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Ae(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},At="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function _t(){return new Promise((e=>At((()=>e()))))}var Rt=n(9235);function Ft(e,t){const n=e[0].length;e.forEach(((e,t)=>{F.vA(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),F.vA(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)F.vA(s===t||e[s]===a[s],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function Dt(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var Ot,Lt=n(7538),Mt=n(7905);function zt(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const s=n[r],o=a[a.length-n.length+r],i=a[o];if(s>=0)if(i>=0){if(i!==s)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(r+e,"] = ").concat(s," but shape[").concat(r+e,"] = ").concat(i))}else a[o]=s}return a}function Pt(e){const t={FIRST_DIM_SIZE:Ot.FIRST_DIM_SIZE,VALUE_ROWIDS:Ot.VALUE_ROWIDS,ROW_LENGTHS:Ot.ROW_LENGTHS,ROW_SPLITS:Ot.ROW_SPLITS,ROW_LIMITS:Ot.ROW_LIMITS,ROW_STARTS:Ot.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function Bt(e){return 0===e.length?0:e[0]===Ot.FIRST_DIM_SIZE?e.length-1:e.length}function Wt(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(r-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Ot||(Ot={}));const Ut=30;function Vt(e){return e<=Ut?e:(0,F.lK)(e,Math.floor(Math.sqrt(e)))}function Gt(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function jt(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Zt(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function Kt(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function Ht(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function qt(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}function Yt(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===(0,F.Ze)(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const r=t.shape,s=r[r.length-1];let o=1;for(let d=0;d<r.length-1;++d)o*=r[d];const i=e.shape,c=r.slice();c.pop();let l=1;for(let d=s;d<n;++d)l*=i[d],c.push(i[d]);const u=[...(0,F.Ur)(e.shape).map((e=>e/l)),1].slice(0,s);return[c,o,l,u]}var Qt=n(4083),Xt=n(3765);const Jt=.3275911,$t=.254829592,en=-.284496736,tn=1.421413741,nn=-1.453152027,an=1.061405429;var rn=n(4124);function sn(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function on(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function cn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function ln(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function un(e,t){return{real:e[2*t],imag:e[2*t+1]}}function dn(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function hn(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function pn(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const fn="->",mn=/->/g,gn=",",yn="...";function bn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(mn,"").length)/fn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(fn,'").'));const[a,r]=e.split(fn);(0,F.vA)(-1===a.indexOf(yn),(()=>'The ellipsis notation ("'.concat(yn,'") is not supported yet.')));const s=a.split(gn),o=s.length;if(t!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(t));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<r.length;++d){const e=r[d];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let d=0;d<a.length;++d){const e=a[d];-1===i.indexOf(e)&&e!==gn&&i.push(e)}const c=new Array(s.length);for(let d=0;d<o;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error("Found duplicate axes in input component ".concat(s[d],". ")+"Support for duplicate axes in input is not implemented yet.");c[d]=[];for(let e=0;e<s[d].length;++e)c[d].push(i.indexOf(s[d][e]))}const l=i.length,u=[];for(let d=r.length;d<l;++d)u.push(d);return{allDims:i,summedDims:u,idDims:c}}function vn(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function xn(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:(0,F.vA)(a[t[r][n]]===e[n],(()=>"Expected dimension ".concat(a[t[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function wn(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)a.push([]);const s=[];for(let o=0;o<n.length;++o){const e=Sn(t,n[o]);for(const t of e)-1===s.indexOf(t)&&(a[o].push(t),s.push(t))}return{path:n,steps:a}}function kn(e){return e.every(((e,t)=>e===t))}function Sn(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function Tn(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)(0,F.vA)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,F.vA)(r<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const a=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-a}(0,F.vA)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function In(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function Nn(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function Cn(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function En(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function An(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function _n(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Rn(e,t){const n=(0,F.Ze)(e),a=(0,F.Ze)(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function Fn(e,t){const n=(0,F.Ze)(e),a=(0,F.Ze)(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function Dn(){return"segment ids must be >= 0"}function On(){return"segment ids are not increasing"}function Ln(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function Mn(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function zn(e,t){let n,a=!1;for(e<=Ut?(n=e,a=!0):n=(0,F.lK)(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=(0,F.lK)(e,n+1);return n}function Pn(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function Bn(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>s)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(s,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let d=0;d<a;++d)if(e.shape[d]!==t.shape[d])throw new Error("x.shape[".concat(d,"]: ").concat(e.shape[d]," should be equal to indices.shape[").concat(d,"]: ").concat(t.shape[d],"."));const o=e.shape[n],i=[];let c=1,l=1,u=1;for(let d=0;d<a;++d)i.push(e.shape[d]),c*=e.shape[d];for(let d=a;d<n;d++)i.push(e.shape[d]),l*=e.shape[d];for(let d=a;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<s;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function Wn(e){try{return e.map((e=>(0,Tt.decodeString)(e)))}catch(Zn){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(Zn))}}function Un(e){return e.map((e=>(0,Tt.encodeString)(e)))}var Vn=n(6692),Gn=n(9286),jn=n(6790);!function(){for(const e of Be)Te(e)}()},7131:(e,t,n)=>{"use strict";n.d(t,{D:()=>r});var a=n(8977);class r{static join(e){return new r(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>a.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let s=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],a=e+s-n.start,i=s,c=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(r.set(l,i),s+=l.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,s=t(e[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},285:(e,t,n)=>{"use strict";n.d(t,{AQ:()=>S,CY:()=>h,Ej:()=>C,P8:()=>T,Rl:()=>N,Xf:()=>A,aG:()=>d,jf:()=>k,l3:()=>w,oR:()=>E,s5:()=>y,zV:()=>I});var a=n(6149),r=n(8032),s=n(1426),o=n(1042),i=n(7131),c=n(8046),l=n(5399);const u=4;async function d(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){const o=r[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+u*t.length,a=new Uint8Array(n);let r=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=u,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:b(await Promise.all(a)),specs:n}}function h(e,t){const n=new i.D(e),a={};let r=0;for(const s of t){const e=p(s,((e,t)=>n.slice(r+e,r+t)));a[s.name]=m(s,n.slice(r,r+e)),r+=e}return a}function p(e,t){const n=(0,s.Ze)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=o.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=u+new Uint32Array(t(e,e+u))[0];return e}a=o.i[e.dtype]}return n*a}async function f(e,t){const n=(0,s.Ze)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=o.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=u+new Uint32Array(await t(e,e+u))[0];return e}a=o.i[e.dtype]}return n*a}function m(e,t){const n=e.name,i=e.dtype,c=e.shape,l=(0,s.Ze)(c);let d,h=0;if("quantization"in e){const a=e.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a)||!("scale"in a))throw new Error("Weight ".concat(e.name," with quantization ").concat(a.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==a.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(a.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==i)throw new Error("Weight ".concat(e.name," is quantized with ").concat(a.dtype," ")+"which only supports weights of type float32 not ".concat(i,"."))}const r=o.i[a.dtype],s="uint8"===a.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===i)if("uint8"===a.dtype||"uint16"===a.dtype){d=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=t*a.scale+a.min}}else{if("float16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let o=0;o<a.length;o++){const r=a[o],i=e[n[r>>10]+(1023&r)]+t[r>>10];s[o]=i}return new Float32Array(r)}}();d=e(s)}}else{if("int32"!==i)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i));if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type int32.");d=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=Math.round(t*a.scale+a.min)}}h+=l*r}else if("string"===i){const n=(0,s.Ze)(e.shape);d=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(h,h+u))[0];h+=u;const n=new Uint8Array(t.slice(h,h+e));d.push(n),h+=e}}else{const e=o.i[i];if("float32"===i)d=new Float32Array(t);else if("int32"===i)d=new Int32Array(t);else{if("bool"!==i){if("complex64"===i){d=new Float32Array(t);const e=new Float32Array(d.length/2),n=new Float32Array(d.length/2);for(let t=0;t<e.length;t++)e[t]=d[2*t],n[t]=d[2*t+1];const s=(0,r.O)(e,c,"float32"),o=(0,r.O)(n,c,"float32"),i=(0,a.f)(s,o);return s.dispose(),o.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i))}d=new Uint8Array(t)}h+=l*e}return(0,r.O)(d,c,i)}async function g(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const s=new Uint8Array(a.length+r.byteLength);s.set(a,0),s.set(new Uint8Array(r),a.length),a=s}return a.buffer}async function y(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const o of t){const e=await f(o,(async(e,t)=>(r=await g(a,r,t),r.slice(e,t))));r=await g(a,r,e);const t=r.slice(0,e);r=r.slice(e);const i=m(o,t);if(n[o.name]=i,"webgpu"===(0,c.jz)()){const e=(0,c.Hs)();"uploadToGPU"in e&&(0,s.Ze)(i.shape)>=(0,l._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function b(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const v="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function x(e){return v?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function w(e){if(v)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}function k(e){if(v){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}function S(e){return i.D.join(e)}function T(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function I(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function N(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function C(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),N(e,n,a)}function E(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:x(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:x(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new i.D(e.weightData).byteLength}}function A(e){const t=[];for(const n of e)t.push(...n.weights);return t}},1042:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});const a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},9554:(e,t,n)=>{"use strict";n.d(t,{$dB:()=>F,$jE:()=>Jt,$zE:()=>R,A1h:()=>M,A8B:()=>Pt,BK4:()=>pn,BLA:()=>qe,BRl:()=>se,Blb:()=>Bt,BoJ:()=>Vt,BxF:()=>de,C8s:()=>Ut,CQC:()=>ut,Cg$:()=>_e,CwD:()=>Ce,D7i:()=>kt,Ddj:()=>Kt,Dr:()=>fn,DvZ:()=>jt,E3$:()=>Se,EkD:()=>i,ElG:()=>pe,EwU:()=>on,FAs:()=>nn,FCQ:()=>xt,FSt:()=>l,Fin:()=>Lt,GZp:()=>qt,HNs:()=>T,Ik2:()=>k,J3C:()=>Ft,JiE:()=>_t,Jp_:()=>u,KXH:()=>C,L6G:()=>Gt,LB5:()=>I,LDN:()=>Pe,LG0:()=>Ke,LRy:()=>pt,LWX:()=>nt,LXA:()=>De,M6A:()=>Ht,MRQ:()=>G,Mn0:()=>B,MnK:()=>W,N4F:()=>S,Ncv:()=>it,O4G:()=>ge,OAQ:()=>xe,ODT:()=>st,OMN:()=>o,ORI:()=>Y,PH8:()=>s,P_L:()=>wt,Pah:()=>ne,PbM:()=>$t,Q6t:()=>ht,QDP:()=>E,QKF:()=>h,Qgm:()=>te,R23:()=>gt,RUm:()=>Re,RXX:()=>We,SDM:()=>$e,SQl:()=>ue,T7M:()=>gn,TBb:()=>an,TL8:()=>Ge,TMz:()=>Z,TOR:()=>Tt,ToN:()=>Me,TyE:()=>f,UcO:()=>Yt,VAI:()=>ze,VCH:()=>b,Vvy:()=>r,WT3:()=>Ye,WuN:()=>zt,X$8:()=>H,X0$:()=>Ie,X4r:()=>Nt,XQy:()=>bt,XhZ:()=>ye,XmO:()=>$,YAb:()=>Qt,YVe:()=>Dt,ZgB:()=>he,Zl4:()=>et,_s9:()=>re,aAr:()=>mn,awo:()=>hn,bP9:()=>X,cHb:()=>Ve,cS:()=>v,dFH:()=>Mt,dLy:()=>rn,dXR:()=>cn,dv8:()=>we,e0f:()=>tt,epO:()=>p,fUj:()=>mt,g5A:()=>je,gC7:()=>P,gIW:()=>ke,hVg:()=>St,hgw:()=>vt,ho8:()=>y,hql:()=>Rt,huO:()=>ft,i5R:()=>fe,iGz:()=>z,iPs:()=>Te,iW0:()=>Xt,iuW:()=>tn,jAQ:()=>w,jM4:()=>Le,jOE:()=>yt,jfg:()=>L,jgd:()=>Zt,jj_:()=>U,jxD:()=>Q,kdj:()=>ct,l0G:()=>Xe,l6P:()=>Et,lLS:()=>be,lNG:()=>Ze,ljI:()=>a,lxb:()=>g,lzr:()=>ve,mH5:()=>dt,mIA:()=>Ne,mM$:()=>rt,mnI:()=>Ee,mxL:()=>me,nVu:()=>q,nY8:()=>V,nZd:()=>Fe,oFs:()=>en,oJ2:()=>lt,ox3:()=>oe,p2J:()=>D,pJc:()=>It,pPe:()=>ln,p_m:()=>d,pk0:()=>J,pnw:()=>dn,pr3:()=>_,pyJ:()=>ot,rFG:()=>Wt,rFm:()=>O,rGP:()=>le,rsH:()=>ae,sDr:()=>ee,t3d:()=>Be,tG8:()=>Ae,tGH:()=>K,u$b:()=>At,u8Z:()=>c,uWl:()=>Ct,urI:()=>at,vI1:()=>Ot,vaV:()=>A,vj7:()=>N,wNW:()=>j,wwC:()=>x,wx0:()=>sn,x7F:()=>He,xJ3:()=>un,xu7:()=>Qe,ySp:()=>Ue,ybN:()=>ie,ybj:()=>ce,ylV:()=>Je,zP9:()=>m,zfU:()=>Oe});const a="Abs",r="Acos",s="Acosh",o="Add",i="AddN",c="All",l="Any",u="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",v="AvgPool3D",x="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",S="Bincount",T="BitwiseAnd",I="BroadcastTo",N="BroadcastArgs",C="Cast",E="Ceil",A="ClipByValue",_="Complex",R="ComplexAbs",F="Concat",D="Conv2D",O="Conv2DBackpropFilter",L="Conv2DBackpropInput",M="Conv3D",z="Conv3DBackpropFilterV2",P="Conv3DBackpropInputV2",B="Cos",W="Cosh",U="Cumprod",V="Cumsum",G="CropAndResize",j="DenseBincount",Z="DepthToSpace",K="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",q="DepthwiseConv2dNativeBackpropInput",Y="Diag",Q="Dilation2D",X="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",$="Draw",ee="RealDiv",te="Einsum",ne="Elu",ae="EluGrad",re="Erf",se="Equal",oe="Exp",ie="ExpandDims",ce="Expm1",le="FFT",ue="Fill",de="FlipLeftRight",he="Floor",pe="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",ye="Greater",be="GreaterEqual",ve="Identity",xe="IFFT",we="Imag",ke="IsFinite",Se="IsInf",Te="IsNan",Ie="LeakyRelu",Ne="Less",Ce="LessEqual",Ee="LinSpace",Ae="Log",_e="Log1p",Re="LogicalAnd",Fe="LogicalNot",De="LogicalOr",Oe="LogSoftmax",Le="LRN",Me="LRNGrad",ze="Max",Pe="Maximum",Be="MaxPool",We="MaxPoolGrad",Ue="MaxPool3D",Ve="MaxPool3DGrad",Ge="MaxPoolWithArgmax",je="Mean",Ze="Min",Ke="Minimum",He="MirrorPad",qe="Mod",Ye="Multinomial",Qe="Multiply",Xe="Neg",Je="NotEqual",$e="NonMaxSuppressionV3",et="NonMaxSuppressionV4",tt="NonMaxSuppressionV5",nt="OnesLike",at="OneHot",rt="Pack",st="PadV2",ot="Pow",it="Prelu",ct="Prod",lt="RaggedGather",ut="RaggedRange",dt="RaggedTensorToTensor",ht="Range",pt="Real",ft="Reciprocal",mt="Relu",gt="Reshape",yt="ResizeNearestNeighbor",bt="ResizeNearestNeighborGrad",vt="ResizeBilinear",xt="ResizeBilinearGrad",wt="Relu6",kt="Reverse",St="Round",Tt="Rsqrt",It="ScatterNd",Nt="TensorScatterUpdate",Ct="SearchSorted",Et="Select",At="Selu",_t="Slice",Rt="Sin",Ft="Sinh",Dt="Sign",Ot="Sigmoid",Lt="Softplus",Mt="Sqrt",zt="Sum",Pt="SpaceToBatchND",Bt="SplitV",Wt="Softmax",Ut="SparseFillEmptyRows",Vt="SparseReshape",Gt="SparseSegmentMean",jt="SparseSegmentSum",Zt="SparseToDense",Kt="SquaredDifference",Ht="Square",qt="StaticRegexReplace",Yt="StridedSlice",Qt="StringNGrams",Xt="StringSplit",Jt="StringToHashBucketFast",$t="Sub",en="Tan",tn="Tanh",nn="Tile",an="TopK",rn="Transform",sn="Transpose",on="Unique",cn="Unpack",ln="UnsortedSegmentSum",un="ZerosLike",dn="Step",hn="FromPixels",pn="RotateWithOffset",fn="_FusedMatMul",mn="FusedConv2D",gn="FusedDepthwiseConv2D"},843:(e,t,n)=>{"use strict";n.d(t,{Op:()=>u,_5:()=>c,kr:()=>h,tA:()=>d,vQ:()=>l});var a=n(5399),r=n(7926),s=n(4124);const o=(0,r.m)("kernelRegistry",(()=>new Map)),i=(0,r.m)("gradRegistry",(()=>new Map));function c(e,t){const n=p(e,t);return o.get(n)}function l(e){return i.get(e)}function u(e){const t=o.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===e&&n.push(o)}return n}function d(e){const{kernelName:t,backendName:n}=e,a=p(t,n);o.has(a)&&s.i("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),o.set(a,e)}function h(e){const{kernelName:t}=e;i.has(t)&&(0,a._K)().getBool("DEBUG")&&s.i("Overriding the gradient for '".concat(t,"'")),i.set(t,e)}function p(e,t){return"".concat(t,"_").concat(e)}},4124:(e,t,n)=>{"use strict";n.d(t,{R:()=>s,i:()=>r});var a=n(5399);function r(){(0,a._K)().getBool("IS_TEST")||(0,a._K)().getBool("PROD")||console.warn(...arguments)}function s(){(0,a._K)().getBool("IS_TEST")||(0,a._K)().getBool("PROD")||console.log(...arguments)}},3753:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({abs_:function(e){const t=(0,s.YT)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return a.T2.runKernel(r.$zE,e)}{const e={x:t};return a.T2.runKernel(r.ljI,e)}}})},4759:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({acos_:function(e){const t={x:(0,s.YT)(e,"x","acos")};return a.T2.runKernel(r.Vvy,t)}})},983:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({acosh_:function(e){const t={x:(0,s.YT)(e,"x","acosh")};return a.T2.runKernel(r.PH8,t)}})},7242:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({add_:function(e,t){let n=(0,o.YT)(e,"a","add"),i=(0,o.YT)(t,"b","add");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.OMN,c)}})},1802:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","all","bool")},i={axis:t,keepDims:n};return a.T2.runKernel(r.u8Z,o,i)}})},1819:(e,t,n)=>{"use strict";n.d(t,{b:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","any","bool")},i={axis:t,keepDims:n};return a.T2.runKernel(r.FSt,o,i)}})},3068:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","argMax")},o={axis:t};return a.T2.runKernel(r.Jp_,n,o)}})},8482:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","argMin")},o={axis:t};return a.T2.runKernel(r.p_m,n,o)}})},3010:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({asin_:function(e){const t={x:(0,s.YT)(e,"x","asin")};return a.T2.runKernel(r.QKF,t)}})},6464:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({asinh_:function(e){const t={x:(0,s.YT)(e,"x","asinh")};return a.T2.runKernel(r.epO,t)}})},7803:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({atan_:function(e){const t={x:(0,s.YT)(e,"x","atan")};return a.T2.runKernel(r.TyE,t)}})},6349:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({atan2_:function(e,t){let n=(0,o.YT)(e,"a","atan2"),i=(0,o.YT)(t,"b","atan2");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.lxb,c)}})},8147:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({atanh_:function(e){const t={x:(0,s.YT)(e,"x","atanh")};return a.T2.runKernel(r.zP9,t)}})},8650:(e,t,n)=>{"use strict";n.d(t,{$:()=>d});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7794),c=n(7538),l=n(7892),u=n(5583);const d=(0,l.op)({avgPool_:function(e,t,n,l,d){const h=(0,s.YT)(e,"x","avgPool","float32");o.vA(c.G0(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let p=h,f=!1;3===h.rank&&(f=!0,p=(0,u.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.vA(4===p.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(p.rank,"."))),c.s_("avgPool",l,d);const m={x:p},g={filterSize:t,strides:n,pad:l,dimRoundingMode:d};let y=a.T2.runKernel(r.ho8,m,g);return y=(0,i.w)(y,h.dtype),f?(0,u.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},9235:(e,t,n)=>{"use strict";n.d(t,{Em:()=>l,SM:()=>i,WC:()=>c,WH:()=>r,aF:()=>s,fK:()=>d,gx:()=>u,lb:()=>o});var a=n(1426);function r(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const a=e.length+t.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(e[s++]):r.push(t[o++]);return r}function o(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function i(e,t){return s(e,t.map((e=>1)),t)}function c(e,t,n){a.vA(r(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function l(e,t){if(r(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function u(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}},2557:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({batchToSpaceND_:function(e,t,n){const i=(0,s.YT)(e,"x","batchToSpaceND"),c=t.reduce(((e,t)=>e*t));o.vA(i.rank>=1+t.length,(()=>"input rank is ".concat(i.rank," but should be > than blockShape.length ").concat(t.length))),o.vA(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),o.vA(i.shape[0]%c===0,(()=>"input tensor batch is ".concat(i.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(c)));const l={x:i},u={blockShape:t,crops:n};return a.T2.runKernel(r.Ik2,l,u)}})},7237:(e,t,n)=>{"use strict";n.d(t,{$:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(5583);const c=(0,n(7892).op)({batchNorm_:function(e,t,n,c,l,u){null==u&&(u=.001);const d=(0,s.YT)(e,"x","batchNorm"),h=(0,s.YT)(t,"mean","batchNorm"),p=(0,s.YT)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,s.YT)(l,"scale","batchNorm")),null!=c&&(m=(0,s.YT)(c,"offset","batchNorm")),o.vA(h.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.vA(null==m||h.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.vA(null==f||h.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,i.t)(e,[1,1,1,e.size]):2===e.rank?(0,i.t)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,i.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:h,variance:p},y={varianceEpsilon:u},b=a.T2.runKernel(r.i5R,g,y);return(0,i.t)(b,d.shape)}})},4920:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(9820),c=n(7892),l=n(5583);const u=(0,c.op)({broadcastTo_:function(e,t){let n=(0,s.YT)(e,"broadcastTo","x");const c=n.shape;if((0,o.SA)(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.t)(n,e)}const u=n.shape,d=Array.from(t);for(let a=t.length-1;a>=0;a--)if(u[a]===t[a])d[a]=1;else if(1!==n.shape[a])throw new Error("broadcastTo(): [".concat(c,"] cannot be broadcast to [").concat(t,"]."));if(0===d.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.o)(n);const h={x:n},p={reps:d};return a.T2.runKernel(r.FAs,h,p)}})},8805:(e,t,n)=>{"use strict";function a(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,o=e[s]||1;(t[t.length-1-r]||1)>1&&1===o&&a.unshift(s)}return a}function r(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,o=t[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function s(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let s=e[e.length-r-1];null==s&&(s=1);let o=t[t.length-r-1];if(null==o&&(o=1),1===s)a[n-r-1]=o;else if(1===o)a[n-r-1]=s;else{if(s!==o){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-r-1]=s}}return a}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>s,getBroadcastDims:()=>a,getReductionAxes:()=>r})},259:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var a=n(9494),r=n(1426);function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",r.SA(e),new a.yl(e,t,n)}},7794:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({cast_:function(e,t){const n=(0,s.YT)(e,"x","cast");if(!o.xn(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:t};return a.T2.runKernel(r.KXH,i,c)}})},5396:(e,t,n)=>{"use strict";n.d(t,{m:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({ceil_:function(e){const t={x:(0,s.YT)(e,"x","ceil","float32")};return a.T2.runKernel(r.QDP,t)}})},3829:(e,t,n)=>{"use strict";n.d(t,{z:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(4660);const c=(0,n(7892).op)({clipByValue_:function(e,t,n){const c=(0,s.YT)(e,"x","clipByValue");if(o.vA(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return(0,i.G)(c.shape,t,c.dtype);const l={x:c},u={clipValueMin:t,clipValueMax:n};return a.T2.runKernel(r.vaV,l,u)}})},9820:(e,t,n)=>{"use strict";n.d(t,{o:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({clone_:function(e){const t={x:(0,s.YT)(e,"x","clone","string_or_numeric")};return a.T2.runKernel(r.lzr,t)}})},6149:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({complex_:function(e,t){const n=(0,s.YT)(e,"real","complex"),i=(0,s.YT)(t,"imag","complex");o.O3(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return a.T2.runKernel(r.pr3,c)}})},4429:(e,t,n)=>{"use strict";n.d(t,{x:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(9820);const c=(0,n(7892).op)({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,o.vA)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,s.j1)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return(0,i.o)(n[0]);const c=n,l={axis:t};return a.T2.runKernel(r.$dB,c,l)}})},9870:(e,t,n)=>{"use strict";n.d(t,{k:()=>l});var a=n(4148),r=n(1426),s=n(4969),o=n(7538),i=n(7892),c=n(5583);const l=(0,i.op)({conv1d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0;const h=(0,a.YT)(e,"x","conv1d"),p=(0,a.YT)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=(0,c.t)(h,[1,h.shape[0],h.shape[1]])),r.vA(3===f.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(f.rank,"."))),r.vA(3===p.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(p.rank,"."))),o.s_("conv1d",i,d),r.vA(f.shape[2]===p.shape[1],(()=>"Error in conv1d: depth of input (".concat(f.shape[2],") must match ")+"input depth for filter ".concat(p.shape[1],"."))),r.vA(o.G0(n,u),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(u,"'"))),r.vA(o.qk(u),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),r.vA(o.qk(n),(()=>"Error in conv1D: Stride should be larger than 0.")),r.vA("NWC"===l,(()=>"Error in conv1d: got dataFormat of ".concat(l," but only NWC is currently supported.")));const g=(0,c.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),y=(0,c.t)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],v=[1,u],x=(0,s.X)(y,g,b,i,"NHWC",v,d);return m?(0,c.t)(x,[x.shape[2],x.shape[3]]):(0,c.t)(x,[x.shape[0],x.shape[2],x.shape[3]])}})},4969:(e,t,n)=>{"use strict";n.d(t,{X:()=>u});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7538),c=n(7892),l=n(5583);const u=(0,c.op)({conv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,s.YT)(e,"x","conv2d","float32"),f=(0,s.YT)(t,"filter","conv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.vA(4===m.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(m.rank,"."))),o.vA(4===f.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,"."))),i.s_("conv2d",c,h);const y="NHWC"===u?m.shape[3]:m.shape[1];o.vA(y===f.shape[2],(()=>"Error in conv2d: depth of input (".concat(y,") must match ")+"input depth for filter ".concat(f.shape[2],"."))),o.vA(i.G0(n,d),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'"))),o.vA(i.qk(d),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),o.vA(i.qk(n),(()=>"Error in conv2D: Strides should be larger than 0."));const b={x:m,filter:f},v={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h},x=a.T2.runKernel(r.p2J,b,v);return g?(0,l.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},6927:(e,t,n)=>{"use strict";n.d(t,{H:()=>l});var a=n(2164),r=n(9554),s=n(1426),o=n(7538),i=n(7892),c=n(5583);const l=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0,h=e;3===e.rank&&(h=(0,c.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,c.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.vA(4===h.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(h.shape,"."))),s.vA(4===p.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(p.shape,"."))),s.vA(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const f="NHWC"===u?h.shape[3]:h.shape[1],m="NHWC"===u?p.shape[3]:p.shape[1];s.vA(f===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(f,") must ")+"match input depth in filter (".concat(n[2],"."))),s.vA(m===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(m,") must ")+"match output depth for filter (".concat(n[3],")."))),o.s_("conv2dDerFilter",l,d);const g={x:h,dy:p},y={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,filterShape:n};return a.T2.runKernel(r.rFm,g,y)}})},1565:(e,t,n)=>{"use strict";n.d(t,{v:()=>l});var a=n(2164),r=n(9554),s=n(1426),o=n(7538),i=n(7892),c=n(5583);const l=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0;s.vA(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let h=e,p=t,f=!1;3===t.rank&&(f=!0,p=(0,c.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),s.vA(4===h.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(h.length,"."))),s.vA(4===p.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(p.rank))),s.vA(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const m="NHWC"===u?h[3]:h[1],g="NHWC"===u?p.shape[3]:p.shape[1];s.vA(m===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(m,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),s.vA(g===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(g,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),o.s_("conv2dDerInput",l,d);const y={dy:p,filter:n},b={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,inputShape:h},v=a.T2.runKernel(r.jfg,y,b);return f?(0,c.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1137:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var a=n(4148),r=n(1565);const s=(0,n(7892).op)({conv2dTranspose_:function(e,t,n,s,o,i){const c=(0,a.YT)(e,"x","conv2dTranspose"),l=(0,a.YT)(t,"filter","conv2dTranspose");return(0,r.v)(n,c,l,s,o,"NHWC",i)}})},6410:(e,t,n)=>{"use strict";n.d(t,{c:()=>c});var a=n(2164),r=n(9554),s=n(1426),o=n(7892),i=n(5583);const c=(0,o.op)({conv3DBackpropInput_:function(e,t,n,o,c){s.vA(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let l=e,u=t,d=!1;4===t.rank&&(d=!0,u=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const h=l[4],p=u.shape[4];s.vA(5===l.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(l.length,"."))),s.vA(5===u.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(u.rank))),s.vA(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),s.vA(h===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(h,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),s.vA(p===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(p,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const f={dy:u,filter:n},m={pad:c,strides:o,inputShape:l},g=a.T2.runKernel(r.gC7,f,m);return d?(0,i.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},7538:(e,t,n)=>{"use strict";n.d(t,{$Q:()=>y,Dh:()=>f,E6:()=>s,G0:()=>m,G8:()=>l,YQ:()=>r,l5:()=>o,p$:()=>c,qk:()=>g,s_:()=>b,uf:()=>i});var a=n(1426);function r(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return i(e,[...t,e[3]],n,s,a,null,null,y(r))}function s(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[c,l]=u(t);let d;if("channelsLast"===o)d=[c,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));d=[c,l,e[1],e[1]]}return i(e,d,n,a,r,s,!1,o)}function o(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,l,u]=d(t);let h,p;if("NDHWC"===o)p="channelsLast",h=[i,l,u,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));p="channelsFirst",h=[i,l,u,e[1],e[1]]}return c(e,h,n,a,r,!1,p,s)}function i(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===i)[c,d,f,m]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,m,d,f]=e}const[g,y,,b]=t,[v,x]=u(n),[w,k]=u(a),S=h(g,w),T=h(y,k),{padInfo:I,outHeight:N,outWidth:C}=function(e,t,n,a,r,s,o,i,c){let u,d,h;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=l(e,t,n));const s=e[0],o=e[1],i=p((s-t+2*a)/n+1,r),c=p((o-t+2*a)/n+1,r);return[i,c]}([t,n],s,a,e,i);d=r[0],h=r[1]}else if("same"===e){d=Math.ceil(t/a),h=Math.ceil(n/r);const e=Math.max(0,(d-1)*a+s-t),i=Math.max(0,(h-1)*r+o-n),c=Math.floor(e/2),l=e-c,p=Math.floor(i/2);u={top:c,bottom:l,left:p,right:i-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/a),h=Math.ceil((n-o+1)/r);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const l="channelsLast"===c?e[1][0]:e[2][0],f="channelsLast"===c?e[1][1]:e[2][1],m="channelsLast"===c?e[2][0]:e[3][0],g="channelsLast"===c?e[2][1]:e[3][1];u={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},d=p((t-s+l+f)/a+1,i),h=p((n-o+m+g)/r+1,i)}}return{padInfo:u,outHeight:d,outWidth:h}}(r,d,f,v,x,S,T,s,i),E=o?b*m:b;let A;return"channelsFirst"===i?A=[c,E,N,C]:"channelsLast"===i&&(A=[c,N,C,E]),{batchSize:c,dataFormat:i,inHeight:d,inWidth:f,inChannels:m,outHeight:N,outWidth:C,outChannels:E,padInfo:I,strideHeight:v,strideWidth:x,filterHeight:g,filterWidth:y,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function c(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,u,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,u,f,m,g]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,g,u,f,m]=e}const[y,b,v,,x]=t,[w,k,S]=d(n),[T,I,N]=d(a),C=h(y,T),E=h(b,I),A=h(v,N),{padInfo:_,outDepth:R,outHeight:F,outWidth:D}=function(e,t,n,a,r,s,o,i,c,u,d){let h,f,m,g;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,a,r,s){null==r&&(r=l(e,t[0],a[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*r>=t[i]&&(o[i]=p((e[i]-t[i]+2*r)/a[i]+1,s));return o}([t,n,a,1],[i,c,u],1,[r,s,o],e,d);f=y[0],m=y[1],g=y[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{f=Math.ceil(t/r),m=Math.ceil(n/s),g=Math.ceil(a/o);const e=(f-1)*r+i-t,l=(m-1)*s+c-n,d=(g-1)*o+u-a,p=Math.floor(e/2),y=e-p,b=Math.floor(l/2),v=l-b,x=Math.floor(d/2);h={top:b,bottom:v,left:x,right:d-x,front:p,back:y,type:"SAME"}}}return{padInfo:h,outDepth:f,outHeight:m,outWidth:g}}(r,u,f,m,w,k,S,C,E,A,i),O=s?x*g:x;let L;return"channelsFirst"===o?L=[c,O,R,F,D]:"channelsLast"===o&&(L=[c,R,F,D,O]),{batchSize:c,dataFormat:o,inDepth:u,inHeight:f,inWidth:m,inChannels:g,outDepth:R,outHeight:F,outWidth:D,outChannels:O,padInfo:_,strideDepth:w,strideHeight:k,strideWidth:S,filterDepth:y,filterHeight:b,filterWidth:v,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:T,dilationHeight:I,dilationWidth:N,inShape:e,outShape:L,filterShape:t}}function l(e,t,n){const a=h(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function u(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"===typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function f(e){const[t,n,a]=u(e);return 1===t&&1===n&&1===a}function m(e,t){return f(e)||f(t)}function g(e){return u(e).every((e=>e>0))}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function b(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)a.vA(a.E6(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{a.vA(a.E6(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}},5894:(e,t,n)=>{"use strict";n.d(t,{g:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({cos_:function(e){const t={x:(0,s.YT)(e,"x","cos","float32")};return a.T2.runKernel(r.Mn0,t)}})},1164:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({cosh_:function(e){const t={x:(0,s.YT)(e,"x","cosh","float32")};return a.T2.runKernel(r.MnK,t)}})},3739:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,s.YT)(e,"x","cumprod")},c={axis:t,exclusive:n,reverse:o};return a.T2.runKernel(r.jj_,i,c)}})},7167:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,s.YT)(e,"x","cumsum")},c={axis:t,exclusive:n,reverse:o};return a.T2.runKernel(r.nY8,i,c)}})},1719:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const i=(0,s.YT)(e,"x","depthToSpace","float32"),c="NHWC"===n?i.shape[1]:i.shape[2],l="NHWC"===n?i.shape[2]:i.shape[3],u="NHWC"===n?i.shape[3]:i.shape[1];o.vA(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),o.vA(c*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(c," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(i.shape))),o.vA(l*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(l," and ").concat(t," for depthToSpace with input shape\n        ").concat(i.shape))),o.vA(u%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(u," for depthToSpace with input shape ").concat(i.shape)));const d={x:i},h={blockSize:t,dataFormat:n};return a.T2.runKernel(r.TMz,d,h)}})},9899:(e,t,n)=>{"use strict";n.d(t,{G:()=>u});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7538),c=n(7892),l=n(5583);const u=(0,c.op)({depthwiseConv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,s.YT)(e,"x","depthwiseConv2d","float32"),f=(0,s.YT)(t,"filter","depthwiseConv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.vA(4===m.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,"."))),o.vA(4===f.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")));const y="NHWC"===u?m.shape[3]:m.shape[1];o.vA(y===f.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(y,") must match the inChannels dimension in ")+"filter ".concat(f.shape[2],"."))),i.s_("depthwiseConv2d",c,h);const b={x:m,filter:f},v={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h},x=a.T2.runKernel(r.tGH,b,v);return g?(0,l.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},7399:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var a=n(2164),r=n(9554),s=n(7892),o=n(5583);const i=(0,s.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=e;3===e.rank&&(u=(0,o.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:u,dy:d},p={strides:s,pad:i,dimRoundingMode:l,dilations:c,filterShape:n};return a.T2.runKernel(r.X$8,h,p)}})},261:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var a=n(2164),r=n(9554),s=n(7892),o=n(5583);const i=(0,s.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=t,d=!1;3===t.rank&&(d=!0,u=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:u,filter:n},p={strides:s,pad:i,dimRoundingMode:l,dilations:c,inputShape:e},f=a.T2.runKernel(r.nVu,h,p);return d?(0,o.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3789:(e,t,n)=>{"use strict";n.d(t,{X:()=>l});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({dilation2d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const d=(0,s.YT)(e,"x","dilation2d"),h=(0,s.YT)(t,"filter","dilation2d");o.vA(3===d.rank||4===d.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(d.rank,"."))),o.vA(3===h.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(h.rank,"."))),o.vA("NHWC"===u,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(u)));let p=d,f=!1;3===d.rank&&(p=(0,c.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0),o.vA(p.shape[3]===h.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(p.shape[3]," vs ").concat(h.shape[2])));const m={x:p,filter:h},g={strides:n,pad:i,dilations:l},y=a.T2.runKernel(r.jxD,m,g);return f?(0,c.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},4974:(e,t,n)=>{"use strict";n.d(t,{y:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(3612);const c=(0,n(7892).op)({div_:function(e,t){let n=(0,o.YT)(e,"a","div"),c=(0,o.YT)(t,"b","div");if([n,c]=(0,s.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return(0,i.w)(n,c);const l={a:n,b:c};return a.T2.runKernel(r.sDr,l,{})}})},44:(e,t,n)=>{"use strict";n.d(t,{e:()=>u});var a=n(8804),r=n(4148),s=n(4974),o=n(7457),i=n(7892),c=n(3986),l=n(3290);const u=(0,i.op)({divNoNan_:function(e,t){let n=(0,r.YT)(e,"a","div"),i=(0,r.YT)(t,"b","div");[n,i]=(0,a.makeTypesMatch)(n,i);const u=(0,s.y)(n,i),d=(0,l.P)(u),h=(0,o.L)(i,d);return(0,c._)(h,d,u)}})},6434:(e,t,n)=>{"use strict";n.d(t,{O:()=>c});var a=n(4148),r=n(1426),s=n(5162),o=n(7892),i=n(5583);const c=(0,o.op)({dot_:function(e,t){const n=(0,a.YT)(e,"t1","dot"),o=(0,a.YT)(t,"t2","dot");r.vA((1===n.rank||2===n.rank)&&(1===o.rank||2===o.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(o.rank,".")));const c=1===n.rank?n.size:n.shape[1],l=1===o.rank?o.size:o.shape[0];if(r.vA(c===l,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(c," and ").concat(l,"."))),1===n.rank&&1===o.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(o,[-1,1]),a=(0,s.N)(e,t);return(0,i.t)(a,[])}if(1===n.rank&&2===o.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(o,[o.shape[0],o.shape[1]]),a=(0,s.N)(e,t);return(0,i.t)(a,[a.size])}if(2===n.rank&&1===o.rank){const e=(0,i.t)(o,[-1,1]),t=(0,s.N)(n,e);return(0,i.t)(t,[t.size])}{const e=(0,i.t)(o,[o.shape[0],o.shape[1]]);return(0,s.N)(n,e)}}})},3645:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({elu_:function(e){const t={x:(0,s.YT)(e,"x","elu","float32")};return a.T2.runKernel(r.Pah,t)}})},7457:(e,t,n)=>{"use strict";n.d(t,{L:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({equal_:function(e,t){let n=(0,o.YT)(e,"a","equal","string_or_numeric"),c=(0,o.YT)(t,"b","equal","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.BRl,l)}})},8810:(e,t,n)=>{"use strict";n.d(t,{Y:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7794);const c=(0,n(7892).op)({erf_:function(e){let t=(0,s.YT)(e,"x","erf");o.vA("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,i.w)(t,"float32"));const n={x:t};return a.T2.runKernel(r._s9,n)}})},8826:(e,t,n)=>{"use strict";n.d(t,{p:()=>r});var a=n(2155);const r=(0,n(7892).op)({euclideanNorm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,a.x)(e,"euclidean",t,n)}})},5462:(e,t,n)=>{"use strict";n.d(t,{o:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({exp_:function(e){const t={x:(0,s.YT)(e,"x","exp")};return a.T2.runKernel(r.ox3,t)}})},4023:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","expandDims","string_or_numeric");o.vA(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},c={dim:t};return a.T2.runKernel(r.ybN,i,c)}})},2520:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({expm1_:function(e){const t={x:(0,s.YT)(e,"x","expm1")};return a.T2.runKernel(r.ybj,t)}})},4660:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var a=n(2164),r=n(9554),s=n(1426);function o(e,t,n){(0,s.SA)(e);const o={shape:e,value:t,dtype:n=n||(0,s.X$)(t)};return a.T2.runKernel(r.SQl,{},o)}},8587:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({floor_:function(e){const t={x:(0,s.YT)(e,"x","floor","float32")};return a.T2.runKernel(r.ZgB,t)}})},3612:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({floorDiv_:function(e,t){let n=(0,o.YT)(e,"a","floorDiv"),i=(0,o.YT)(t,"b","floorDiv");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.ElG,c)}})},7905:(e,t,n)=>{"use strict";n.d(t,{Do:()=>m,XB:()=>f,f2:()=>g,zE:()=>y});var a=n(8805),r=n(3645),s=n(8076),o=n(803),i=n(9855),c=n(5251),l=n(9721),u=n(5583),d=n(4213),h=n(319),p=n(7382);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,o.l)(e,(0,h.P)(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function m(e,t){let n=t;const r=a.getReductionAxes(e.shape,t.shape);return r.length>0&&(n=(0,p.c)(n,r)),(0,u.t)(n,e.shape)}function g(e,t,n,a){if("linear"===t)return e;if("relu"===t)return(0,c.V)(e);if("elu"===t)return(0,r.P)(e);if("relu6"===t)return(0,l.j)(e);if("prelu"===t)return(0,i.N)(e,n);if("leakyrelu"===t)return(0,s.H)(e,a);if("sigmoid"===t)return(0,d.r)(e);throw new Error("Unknown fused activation ".concat(t,"."))}const y=(e,t)=>!(e>0)||"linear"===t},6178:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i={x:(0,s.YT)(e,"x","gather"),indices:(0,s.YT)(t,"indices","gather","int32")},c={axis:n,batchDims:o};return a.T2.runKernel(r.mxL,i,c)}})},2759:(e,t,n)=>{"use strict";n.d(t,{r:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({greater_:function(e,t){let n=(0,o.YT)(e,"a","greater","string_or_numeric"),c=(0,o.YT)(t,"b","greater","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.XhZ,l)}})},9996:(e,t,n)=>{"use strict";n.d(t,{D:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({greaterEqual_:function(e,t){let n=(0,o.YT)(e,"a","greaterEqual","string_or_numeric"),c=(0,o.YT)(t,"b","greaterEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.lLS,l)}})},1047:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({imag_:function(e){const t={input:(0,s.YT)(e,"input","imag")};return a.T2.runKernel(r.dv8,t)}})},2214:(e,t,n)=>{"use strict";n.d(t,{v:()=>l});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,s.YT)(e,"images","resizeBilinear");o.vA(3===l.rank||4===l.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),o.vA(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),o.vA(!1===i||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:u},p={alignCorners:n,halfPixelCenters:i,size:t},f=a.T2.runKernel(r.hgw,h,p);return d?(0,c.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},2823:(e,t,n)=>{"use strict";n.d(t,{b:()=>l});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,s.YT)(e,"images","resizeNearestNeighbor");o.vA(3===l.rank||4===l.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),o.vA(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),o.vA("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),o.vA(!1===i||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:u},p={alignCorners:n,halfPixelCenters:i,size:t},f=a.T2.runKernel(r.jOE,h,p);return d?(0,c.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},9027:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({isFinite_:function(e){const t={x:(0,s.YT)(e,"x","isFinite")};return a.T2.runKernel(r.gIW,t)}})},6005:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({isInf_:function(e){const t={x:(0,s.YT)(e,"x","isInf")};return a.T2.runKernel(r.E3$,t)}})},3467:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({isNaN_:function(e){const t={x:(0,s.YT)(e,"x","isNaN")};return a.T2.runKernel(r.iPs,t)}})},8076:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:(0,s.YT)(e,"x","leakyRelu")},o={alpha:t};return a.T2.runKernel(r.X0$,n,o)}})},8320:(e,t,n)=>{"use strict";n.d(t,{M:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({less_:function(e,t){let n=(0,o.YT)(e,"a","less","string_or_numeric"),c=(0,o.YT)(t,"b","less","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.mIA,l)}})},827:(e,t,n)=>{"use strict";n.d(t,{I:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({lessEqual_:function(e,t){let n=(0,o.YT)(e,"a","lessEqual","string_or_numeric"),c=(0,o.YT)(t,"b","lessEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.CwD,l)}})},6584:(e,t,n)=>{"use strict";n.d(t,{K:()=>l});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const u=(0,s.YT)(e,"x","localResponseNormalization");o.vA(4===u.rank||3===u.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(u.rank,"."))),o.vA(o.E6(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let d=u,h=!1;3===u.rank&&(h=!0,d=(0,c.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const p={x:d},f={depthRadius:t,bias:n,alpha:i,beta:l},m=a.T2.runKernel(r.jM4,p,f);return h?(0,c.t)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},5911:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({log_:function(e){const t={x:(0,s.YT)(e,"x","log","float32")};return a.T2.runKernel(r.tG8,t)}})},1386:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({log1p_:function(e){const t={x:(0,s.YT)(e,"x","log1p")};return a.T2.runKernel(r.Cg$,t)}})},4824:(e,t,n)=>{"use strict";n.d(t,{n:()=>u});var a=n(1839),r=n(4148),s=n(803),o=n(1011),i=n(7892),c=n(4213),l=n(9973);const u=(0,i.op)({logSigmoid_:function(e){const t=(0,r.YT)(e,"x","logSigmoid");return(0,a._X)((e=>({value:(0,o.H)((0,l.l)((0,o.H)(e))),gradFunc:t=>(0,s.l)(t,(0,c.r)((0,o.H)(e)))})))(t)}})},1194:(e,t,n)=>{"use strict";n.d(t,{H:()=>p});var a=n(1839),r=n(4148),s=n(7794),o=n(5462),i=n(5911),c=n(891),l=n(803),u=n(7892),d=n(7951),h=n(7382);const p=(0,u.op)({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,r.YT)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));return(0,a._X)(((e,n)=>{const a=(0,c.T)(e,t,!0),r=(0,d.j)(e,a),u=(0,d.j)((0,s.w)(r,"float32"),(0,i.R)((0,h.c)((0,o.o)(r),t,!0)));n([u]);return{value:u,gradFunc:(e,n)=>{const[a]=n,r=(0,o.o)(a);return(0,d.j)(e,(0,l.l)((0,h.c)(e,t,!0),r))}}}))(n)}})},2175:(e,t,n)=>{"use strict";n.d(t,{V:()=>f});var a=n(4148),r=n(1426),s=n(7242),o=n(9235),i=n(5462),c=n(5911),l=n(891),u=n(7892),d=n(5583),h=n(7951),p=n(7382);const f=(0,u.op)({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const u=(0,a.YT)(e,"x","logSumExp"),f=(0,r.Y6)(t,u.shape),m=(0,l.T)(u,f,!0),g=(0,h.j)(u,m),y=(0,i.o)(g),b=(0,p.c)(y,f),v=(0,c.R)(b),x=(0,s.W)((0,d.t)(m,v.shape),v);if(n){const e=(0,o.SM)(x.shape,f);return(0,d.t)(x,e)}return x}})},5692:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(8805);const i=(0,n(7892).op)({logicalAnd_:function(e,t){const n=(0,s.YT)(e,"a","logicalAnd","bool"),i=(0,s.YT)(t,"b","logicalAnd","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.T2.runKernel(r.RUm,c)}})},5344:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({logicalNot_:function(e){const t={x:(0,s.YT)(e,"x","logicalNot","bool")};return a.T2.runKernel(r.nZd,t)}})},7920:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(8805);const i=(0,n(7892).op)({logicalOr_:function(e,t){const n=(0,s.YT)(e,"a","logicalOr","bool"),i=(0,s.YT)(t,"b","logicalOr","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.T2.runKernel(r.LXA,c)}})},3708:(e,t,n)=>{"use strict";n.d(t,{r:()=>c});var a=n(4148),r=n(8805),s=n(5692),o=n(5344),i=n(7920);const c=(0,n(7892).op)({logicalXor_:function(e,t){const n=(0,a.YT)(e,"a","logicalXor","bool"),c=(0,a.YT)(t,"b","logicalXor","bool");return(0,r.assertAndGetBroadcastShape)(n.shape,c.shape),(0,s.n)((0,i.z)(e,t),(0,o.N)((0,s.n)(e,t)))}})},5162:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=(0,o.YT)(e,"a","matMul"),l=(0,o.YT)(t,"b","matMul");[c,l]=(0,s.makeTypesMatch)(c,l);const u={a:c,b:l},d={transposeA:n,transposeB:i};return a.T2.runKernel(r.jAQ,u,d)}})},891:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","max")},i={reductionIndices:t,keepDims:n};return a.T2.runKernel(r.VAI,o,i)}})},6044:(e,t,n)=>{"use strict";n.d(t,{j:()=>u});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7538),c=n(7892),l=n(5583);const u=(0,c.op)({maxPool_:function(e,t,n,c,u){const d=(0,s.YT)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=(0,l.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.vA(4===h.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(h.rank,"."))),o.vA(i.G0(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),i.s_("maxPool",c,u);const f={x:h},m={filterSize:t,strides:n,pad:c,dimRoundingMode:u},g=a.T2.runKernel(r.t3d,f,m);return p?(0,l.t)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},2131:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805),c=n(7794);const l=(0,n(7892).op)({maximum_:function(e,t){let n=(0,o.YT)(e,"a","maximum"),l=(0,o.YT)(t,"b","maximum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.w)(n,"int32"),l=(0,c.w)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.T2.runKernel(r.LDN,u)}})},3015:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","mean")},i={axis:t,keepDims:n};return a.T2.runKernel(r.g5A,o,i)}})},1465:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","min")},i={axis:t,keepDims:n};return a.T2.runKernel(r.lNG,o,i)}})},6561:(e,t,n)=>{"use strict";n.d(t,{B:()=>l});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805),c=n(7794);const l=(0,n(7892).op)({minimum_:function(e,t){let n=(0,o.YT)(e,"a","minimum"),l=(0,o.YT)(t,"b","minimum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.w)(n,"int32"),l=(0,c.w)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.T2.runKernel(r.LG0,u)}})},4252:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({mirrorPad_:function(e,t,n){o.vA("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const i=(0,s.YT)(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.vA(t.length===i.rank,(()=>"Padding doesn't match input. Must be ".concat(i.rank,". ")+"Got ".concat(t.length,".")));const c="reflect"===n?1:0;for(let a=0;a<i.rank;a++)o.vA(2===t[a].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),o.vA(t[a][0]>=0&&t[a][0]<=i.shape[a]-c&&t[a][1]>=0&&t[a][1]<=i.shape[a]-c,(()=>"Padding in dimension ".concat(a," cannot be greater than or equal ")+"to ".concat(i.shape[a]-c," or less than 0 for input of ")+"shape ".concat(i.shape)));const l={paddings:t,mode:n},u={x:i};return a.T2.runKernel(r.x7F,u,l)}})},3617:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({mod_:function(e,t){let n=(0,o.YT)(e,"a","mod"),i=(0,o.YT)(t,"b","mod");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.BLA,c)}})},803:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({mul_:function(e,t){let n=(0,o.YT)(e,"a","mul"),i=(0,o.YT)(t,"b","mul");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.xu7,c)}})},1011:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({neg_:function(e){const t={x:(0,s.YT)(e,"x","neg")};return a.T2.runKernel(r.l0G,t)}})},2155:(e,t,n)=>{"use strict";n.d(t,{x:()=>y});var a=n(4148),r=n(1426),s=n(3753),o=n(9235),i=n(891),c=n(1465),l=n(7892),u=n(7587),d=n(5583),h=n(1997),p=n(191),f=n(7738),m=n(7382);function g(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return(0,s.t)(e);if(1!==e.rank&&null===n)return g((0,d.t)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.c)((0,s.t)(e),n);if(t===1/0)return(0,i.T)((0,s.t)(e),n);if(t===-1/0)return(0,c.j)((0,s.t)(e),n);if("euclidean"===t||2===t)return(0,p.R)((0,m.c)((0,u.n)((0,s.t)(e),(0,h.d)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,i.T)((0,m.c)((0,s.t)(e),n[0]),n[1]-1);if(t===1/0)return(0,i.T)((0,m.c)((0,s.t)(e),n[1]),n[0]);if(t===-1/0)return(0,c.j)((0,m.c)((0,s.t)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,p.R)((0,m.c)((0,f.E)(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const y=(0,l.op)({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=g(e=(0,a.YT)(e,"x","norm"),t,n);let c=i.shape;if(s){const t=(0,r.Y6)(n,e.shape);c=o.SM(i.shape,t)}return(0,d.t)(i,c)}})},135:(e,t,n)=>{"use strict";n.d(t,{E:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({notEqual_:function(e,t){let n=(0,o.YT)(e,"a","notEqual","string_or_numeric"),c=(0,o.YT)(t,"b","notEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.ylV,l)}})},6865:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const c={indices:(0,s.YT)(e,"indices","oneHot","int32")},l={dtype:i,depth:t,onValue:n,offValue:o};return a.T2.runKernel(r.urI,c,l)}})},4616:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var a=n(2164),r=n(1426),s=n(6149),o=n(4218);function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,r.SA)(e),"complex64"===t){const t=i(e,"float32"),n=(0,o.U)(e,"float32");return(0,s.f)(t,n)}const n=(0,r.FZ)((0,r.Ze)(e),t);return a.T2.makeTensor(n,e,t)}},4100:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({onesLike_:function(e){const t={x:(0,s.YT)(e,"x","onesLike")};return a.T2.runKernel(r.LWX,t)}})},7892:(e,t,n)=>{"use strict";n.d(t,{B:()=>s,op:()=>o});var a=n(2164),r=n(1426);const s="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const i=function(){a.T2.startScope(n);try{const e=o(...arguments);return(0,r.yL)(e)&&console.error("Cannot return a Promise inside of tidy."),a.T2.endScope(e),e}catch(e){throw a.T2.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},3007:(e,t,n)=>{"use strict";n.d(t,{BTT:()=>h.B,tnl:()=>r.t,HQu:()=>s.H,FqL:()=>o.F,WQq:()=>i.W,QiD:()=>p,Q7R:()=>f.Q,bzn:()=>m.b,FLi:()=>g.F,XRg:()=>y.X,qRo:()=>b.q,yHs:()=>v.y,rYl:()=>x.r,FPz:()=>w.F,rfv:()=>k.r,$jT:()=>S.$,sub:()=>C,lZX:()=>O,$v7:()=>M.$,BFc:()=>z,kSi:()=>P,T5N:()=>B,GTe:()=>L.G,HbZ:()=>W,vjT:()=>U,ftb:()=>na,ROE:()=>V,hOW:()=>G.h,ra8:()=>j.r,wgE:()=>T.w,mkO:()=>Z.m,zQh:()=>K.z,o8B:()=>H.o,faB:()=>q.f,xWs:()=>E.x,I1m:()=>Y,RPU:()=>Q,O5O:()=>X,P1l:()=>J,kA9:()=>$.k,Xtf:()=>ee.X,wX9:()=>te.w,IPL:()=>ne,jIJ:()=>re,gnS:()=>se.g,yIG:()=>oe.y,_jP:()=>ha,Lp0:()=>ie.L,rCv:()=>ce.r,aOp:()=>le,Rj8:()=>ue.R,Gl3:()=>de.G,smy:()=>he,X7t:()=>pe.X,y4m:()=>fe.y,ek5:()=>me.e,Omf:()=>ge.O,EZY:()=>ua,_3C:()=>ye,Pqc:()=>be.P,FJY:()=>da,QP2:()=>ve,LCg:()=>xe.L,Y12:()=>we.Y,p4S:()=>ke.p,oNF:()=>Se.o,UG6:()=>Te.U,IYd:()=>Ie.I,y5U:()=>Ce,hVP:()=>wn.h,GSj:()=>Ee.G,RIf:()=>Ae.R,wh_:()=>_e.w,cZk:()=>a,kgh:()=>Re.k,SY9:()=>la,rhj:()=>Fe.r,DQN:()=>De.D,KGM:()=>kn.K,ngS:()=>Oe.n,Slp:()=>gr,U4u:()=>pa,ggX:()=>Sn.g,MIs:()=>Le.M,EN4:()=>Me.E,yrW:()=>ze.y,H8d:()=>Pe.H,M7h:()=>Be.M,InN:()=>We.I,mPL:()=>yr,mT8:()=>Ue,Kgs:()=>Ve.K,Rm2:()=>Ge.R,Kko:()=>je.K,nqI:()=>Ze.n,HPB:()=>Ke.H,VZ:()=>He.V,n76:()=>qe.n,NSZ:()=>Ye.N,ztW:()=>Qe.z,rxB:()=>Xe.r,YYh:()=>br,yzS:()=>et,NoW:()=>A.N,T9B:()=>tt.T,jgi:()=>nt.j,NYV:()=>at,RO:()=>rt,PhQ:()=>st.P,i2o:()=>ot.i,OYQ:()=>lt,jkA:()=>ut.j,BpO:()=>dt.B,FFZ:()=>ht.F,ziu:()=>pt.z,Clk:()=>yt,CRk:()=>oa,lKK:()=>_.l,YDF:()=>bt,OjQ:()=>vt,HZy:()=>xt.H,xbf:()=>ra.x,Ec:()=>wt.E,Mw0:()=>kt.M,SaS:()=>it.S,P61:()=>St.P,op:()=>h.op,X4o:()=>Tt,eVF:()=>It.e,BZs:()=>Nt,grY:()=>Ct,XHu:()=>Et,WLX:()=>At,dzn:()=>_t.d,n7C:()=>Rt.n,NsG:()=>Ft.N,yyV:()=>Dt.y,_eU:()=>Ot._,whe:()=>Lt,iyU:()=>Mt,Q0_:()=>zt,_9M:()=>Pt,pR9:()=>Gt,FE$:()=>jt,m0H:()=>Zt,YeY:()=>Kt,HYA:()=>Ht,y17:()=>qt,xav:()=>Yt.x,VOZ:()=>Qt.V,VVh:()=>Xt.V,j__:()=>Jt.j,tQQ:()=>N.t,BEg:()=>$t.B,QD2:()=>en,LMr:()=>tn,I2l:()=>nn,JYU:()=>an,z8$:()=>Tn.z,LIG:()=>rn.L,Z$r:()=>sn.Z,d_2:()=>on.d,NFr:()=>ia,sZg:()=>$e,WfX:()=>cn.W,wdz:()=>ln.w,F12:()=>un,ry7:()=>R.r,_SZ:()=>dn._,vPA:()=>mr,F8e:()=>hn.F,L0l:()=>pn.L,dik:()=>F.d,Q$M:()=>fn,zAd:()=>mn,wck:()=>gn,R0O:()=>yn,Vs9:()=>bn.V,lw0:()=>vn.l,eDJ:()=>xn.e,lMo:()=>vr,Zhr:()=>ca,lOn:()=>fr,lDo:()=>In.l,RZD:()=>Nn.R,EwI:()=>mt.E,Pbu:()=>Cn.P,r2V:()=>En.r,t$z:()=>An.t,PMw:()=>_n.P,Ym9:()=>Rn.Y,YjP:()=>xr,jbE:()=>gt.j,czq:()=>Fn.c,Mlm:()=>Dn.M,ymU:()=>D.y,OEK:()=>On.O,tGX:()=>Mn,KtR:()=>zn,$_$:()=>Pn.$,g9W:()=>Bn,Lpo:()=>Wn,yxw:()=>Un,NNh:()=>Gn,Vsq:()=>Ne.V,rfw:()=>jn.r,mgz:()=>aa.m,efE:()=>Zn,AmM:()=>Kn.A,zAU:()=>Hn.z,K$i:()=>qn.K,rni:()=>Yn,bvq:()=>Qn,_M9:()=>Xn._,YJN:()=>$n,Ul9:()=>ea.U,POl:()=>ta.P});var a={};n.r(a),n.d(a,{conv2d:()=>va,depthwiseConv2d:()=>ka,matMul:()=>Sa});var r=n(3753),s=n(4759),o=n(983),i=n(7242),c=n(2164),l=n(9554),u=n(4148),d=n(1426),h=n(7892);const p=(0,h.op)({addN_:function(e){d.vA(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),d.vA(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length)));const t=e.map(((e,t)=>(0,u.YT)(e,"tensors".concat(t),"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!d.r1(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return c.T2.runKernel(l.EkD,a)}});var f=n(1802),m=n(1819),g=n(3068),y=n(8482),b=n(3010),v=n(6464),x=n(7803),w=n(6349),k=n(8147),S=n(8650),T=n(7794),I=n(7538),N=n(5583);const C=(0,h.op)({avgPool3d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,u.YT)(e,"x","avgPool3d","float32");let i=o,h=!1;4===o.rank&&(h=!0,i=(0,N.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.vA(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),d.vA("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),d.vA("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),(0,I.s_)("avgPool3d",a,r);const p={x:i},f={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let m=c.T2.runKernel(l.cS,p,f);return m=(0,T.w)(m,i.dtype),h?(0,N.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var E=n(4429),A=n(5162),_=n(803),R=n(4213),F=n(463),D=n(6532);const O=(0,h.op)({basicLSTMCell_:function(e,t,n,a,r,s){const o=(0,u.YT)(e,"forgetBias","basicLSTMCell"),c=(0,u.YT)(t,"lstmKernel","basicLSTMCell"),l=(0,u.YT)(n,"lstmBias","basicLSTMCell"),d=(0,u.YT)(a,"data","basicLSTMCell"),h=(0,u.YT)(r,"c","basicLSTMCell"),p=(0,u.YT)(s,"h","basicLSTMCell"),f=(0,E.x)([d,p],1),m=(0,A.N)(f,c),g=(0,i.W)(m,l),y=g.shape[0],b=g.shape[1]/4,v=[y,b],x=(0,F.d)(g,[0,0],v),w=(0,F.d)(g,[0,b],v),k=(0,F.d)(g,[0,2*b],v),S=(0,F.d)(g,[0,3*b],v),T=(0,i.W)((0,_.l)((0,R.r)(x),(0,D.y)(w)),(0,_.l)(h,(0,R.r)((0,i.W)(o,k))));return[T,(0,_.l)((0,D.y)(T),(0,R.r)(S))]}});var L=n(2557),M=n(7237);const z=(0,h.op)({batchNorm2d_:function(e,t,n,a,r,s){const o=(0,u.YT)(e,"x","batchNorm"),i=(0,u.YT)(t,"mean","batchNorm"),c=(0,u.YT)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u.YT)(r,"scale","batchNorm")),null!=a&&(h=(0,u.YT)(a,"offset","batchNorm")),d.vA(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),d.vA(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.vA(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.vA(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=h&&d.vA(2===h.rank||1===h.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(h.rank,"."))),(0,M.$)(o,i,c,h,l,s)}});const P=(0,h.op)({batchNorm3d_:function(e,t,n,a,r,s){const o=(0,u.YT)(e,"x","batchNorm"),i=(0,u.YT)(t,"mean","batchNorm"),c=(0,u.YT)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u.YT)(r,"scale","batchNorm")),null!=a&&(h=(0,u.YT)(a,"offset","batchNorm")),d.vA(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),d.vA(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.vA(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.vA(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=h&&d.vA(3===h.rank||1===h.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(h.rank,"."))),(0,M.$)(o,i,c,h,l,s)}});const B=(0,h.op)({batchNorm4d_:function(e,t,n,a,r,s){const o=(0,u.YT)(e,"x","batchNorm"),i=(0,u.YT)(t,"mean","batchNorm"),c=(0,u.YT)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u.YT)(r,"scale","batchNorm")),null!=a&&(h=(0,u.YT)(a,"offset","batchNorm")),d.vA(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),d.vA(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.vA(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.vA(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=h&&d.vA(4===h.rank||1===h.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(h.rank,"."))),(0,M.$)(o,i,c,h,l,s)}});const W=(0,h.op)({bincount_:function(e,t,n){const a=(0,u.YT)(e,"x","bincount"),r=(0,u.YT)(t,"weights","bincount");d.vA("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),d.vA(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),d.vA(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const s={x:a,weights:r},o={size:n};return c.T2.runKernel(l.N4F,s,o)}});const U=(0,h.op)({bitwiseAnd_:function(e,t){const n=(0,u.YT)(e,"x","bitwiseAnd"),a=(0,u.YT)(t,"y","bitwiseAnd");if(!(0,d.r1)(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const r={a:n,b:a};return c.T2.runKernel(l.HNs,r)}});const V=(0,h.op)({broadcastArgs_:function(e,t){const n=(0,u.YT)(e,"s0","broadcastArgs","int32"),a=(0,u.YT)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const r={s0:n,s1:a};return c.T2.runKernel(l.vj7,r)}});var G=n(4920),j=n(259),Z=n(5396),K=n(3829),H=n(9820),q=n(6149);const Y=(0,h.op)({concat1d_:function(e){return(0,E.x)(e,0)}});const Q=(0,h.op)({concat2d_:function(e,t){return(0,E.x)(e,t)}});const X=(0,h.op)({concat3d_:function(e,t){return(0,E.x)(e,t)}});const J=(0,h.op)({concat4d_:function(e,t){return(0,E.x)(e,t)}});var $=n(9870),ee=n(4969),te=n(1137);const ne=(0,h.op)({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=(0,u.YT)(e,"x","conv3d"),i=(0,u.YT)(t,"filter","conv3d");let h=o,p=!1;4===o.rank&&(p=!0,h=(0,N.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.vA(5===h.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(h.rank,"."))),d.vA(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),d.vA(h.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(h.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),d.vA((0,I.G0)(n,s),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),d.vA("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported."))),d.vA((0,I.qk)(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),d.vA((0,I.qk)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f={x:h,filter:i},m={strides:n,pad:a,dataFormat:r,dilations:s},g=c.T2.runKernel(l.A1h,f,m);return p?(0,N.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var ae=n(6410);const re=(0,h.op)({conv3dTranspose_:function(e,t,n,a,r){const s=(0,u.YT)(e,"x","conv3dTranspose"),o=(0,u.YT)(t,"filter","conv3dTranspose");return(0,ae.c)(n,s,o,a,r)}});var se=n(5894),oe=n(1164),ie=n(3739),ce=n(7167);const le=(0,h.op)({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=(0,u.YT)(e,"x","denseBincount"),s=(0,u.YT)(t,"weights","denseBincount");d.vA("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),d.vA(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),d.vA(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),d.vA(s.size===r.size||0===s.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(s.shape,".")));const o={x:r,weights:s},i={size:n,binaryOutput:a};return c.T2.runKernel(l.wNW,o,i)}});var ue=n(1719),de=n(9899);const he=(0,h.op)({diag_:function(e){const t={x:(0,u.YT)(e,"x","diag")};return c.T2.runKernel(l.ORI,t)}});var pe=n(3789),fe=n(4974),me=n(44),ge=n(6434);const ye=(0,h.op)({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map(((e,t)=>(0,u.YT)(e,"tensors".concat(t),"einsum"))),s={equation:e};return c.T2.runKernel(l.Qgm,r,s)}});var be=n(3645);const ve=(0,h.op)({ensureShape_:function(e,t){const n=(0,u.YT)(e,"x","ensureShape","string_or_numeric");if(!(0,d.e_)(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});var xe=n(7457),we=n(8810),ke=n(8826),Se=n(5462),Te=n(4023),Ie=n(2520),Ne=n(3017);const Ce=(0,h.op)({eye_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const r=(0,j.r)([e,t],a),s=e<=t?e:t;for(let i=0;i<s;++i)r.set(1,i,i);const o=(0,N.t)(r.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return(0,Ne.V)((0,Te.U)(o,0),[n[0],1,1]);if(2===n.length)return(0,Ne.V)((0,Te.U)((0,Te.U)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Ne.V)((0,Te.U)((0,Te.U)((0,Te.U)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});var Ee=n(4660),Ae=n(8587),_e=n(3612),Re=n(6178),Fe=n(2759),De=n(9996),Oe=n(1047),Le=n(9027),Me=n(6005),ze=n(3467),Pe=n(8076),Be=n(8320),We=n(827);function Ue(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return c.T2.runKernel(l.mnI,{},a)}var Ve=n(6584),Ge=n(5911),je=n(1386),Ze=n(4824),Ke=n(1194),He=n(2175),qe=n(5692),Ye=n(5344),Qe=n(7920),Xe=n(3708);const Je=2147483648;const $e=(0,h.op)({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=(0,u.YT)(e,"sortedSequence","searchSorted"),r=(0,u.YT)(t,"values","searchSorted"),s=a.shape[a.shape.length-1],o=r.shape[r.shape.length-1],i=(0,N.t)(a,[-1,s]),h=(0,N.t)(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==h.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,d.Ze)(h.shape)>=Je)throw new Error("values tensor size must less than ".concat(Je));if(i.shape[1]>=Je)throw new Error("trailing dim_size must less than ".concat(Je," for int32 output type, was ").concat(i.shape[1]));const p={sortedSequence:i,values:h},f={side:n};return c.T2.runKernel(l.uWl,p,f)}});function et(e,t){return $e(e,t,"left")}var tt=n(891),nt=n(6044);const at=(0,h.op)({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,u.YT)(e,"x","maxPool3d");let i=o,h=!1;4===o.rank&&(h=!0,i=(0,N.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.vA(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),d.vA("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),(0,I.s_)("maxPool3d",a,r);const p={x:i},f={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},m=c.T2.runKernel(l.ySp,p,f);return h?(0,N.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const rt=(0,h.op)({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:(0,u.YT)(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},i=c.T2.runKernel(l.TL8,s,o);return{result:i[0],indexes:i[1]}}});var st=n(2131),ot=n(3015),it=n(4616),ct=n(9494);function lt(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=(0,u.YT)(e,"x","meshgrid",e instanceof ct.qY?e.dtype:"float32");if(void 0===t)return[a];let r=(0,u.YT)(t,"y","meshgrid",t instanceof ct.qY?t.dtype:"float32");const s=(0,d.Ze)(a.shape),o=(0,d.Ze)(r.shape);return"xy"===n?(a=(0,N.t)(a,[1,-1]),r=(0,N.t)(r,[-1,1]),[(0,A.N)((0,it.S)([o,1],a.dtype),a),(0,A.N)(r,(0,it.S)([1,s],r.dtype))]):(a=(0,N.t)(a,[-1,1]),r=(0,N.t)(r,[1,-1]),[(0,A.N)(a,(0,it.S)([1,o],a.dtype)),(0,A.N)((0,it.S)([s,1],r.dtype),r)])}var ut=n(1465),dt=n(6561),ht=n(4252),pt=n(3617),ft=n(9235),mt=n(7738),gt=n(7951);const yt=(0,h.op)({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e=(0,u.YT)(e,"x","moments");const a=(0,d.Y6)(t,e.shape),r=(0,ot.i)(e,a,n);let s=r.shape;n||(s=(0,ft.SM)(r.shape,a));const o=(0,mt.E)((0,gt.j)((0,T.w)(e,"float32"),(0,N.t)(r,s)));return{mean:r,variance:(0,ot.i)(o,a,n)}}});const bt=(0,h.op)({multiRNNCell_:function(e,t,n,a){const r=(0,u.YT)(t,"data","multiRNNCell"),s=(0,u.j1)(n,"c","multiRNNCell"),o=(0,u.j1)(a,"h","multiRNNCell");let i=r;const c=[];for(let u=0;u<e.length;u++){const t=e[u](i,s[u],o[u]);c.push(t[0]),c.push(t[1]),i=t[1]}const l=[],d=[];for(let u=0;u<c.length;u+=2)l.push(c[u]),d.push(c[u+1]);return[l,d]}});const vt=(0,h.op)({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=(0,u.YT)(e,"logits","multinomial"),s=r.size,o=r.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i={logits:1===o?(0,N.t)(r,[1,-1]):r},d={numSamples:t,seed:n,normalized:a},h=c.T2.runKernel(l.WT3,i,d);return 1===o?(0,N.t)(h,[h.size]):h}});var xt=n(1011),wt=n(135),kt=n(6865),St=n(4100);const Tt=(0,h.op)({outerProduct_:function(e,t){const n=(0,u.YT)(e,"v1","outerProduct"),a=(0,u.YT)(t,"v2","outerProduct");d.vA(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=(0,N.t)(n,[-1,1]),s=(0,N.t)(a,[1,-1]);return(0,A.N)(r,s)}});var It=n(5048);const Nt=(0,h.op)({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,It.e)(e,[t],n)}});const Ct=(0,h.op)({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,It.e)(e,t,n)}});const Et=(0,h.op)({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,It.e)(e,t,n)}});const At=(0,h.op)({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,It.e)(e,t,n)}});var _t=n(7751),Rt=n(7587),Ft=n(9855),Dt=n(6574),Ot=n(9556);const Lt=(0,h.op)({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map(((e,t)=>(0,u.YT)(e,"tensors".concat(t),"raggedGather","int32"))),paramsDenseValues:(0,u.YT)(t,"paramsDenseValues","raggedGather"),indices:(0,u.YT)(n,"indices","raggedGather","int32")},s={outputRaggedRank:a},o=c.T2.runKernel(l.oJ2,r,s);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const Mt=(0,h.op)({raggedRange_:function(e,t,n){const a=(0,u.YT)(e,"starts","raggedRange"),r={starts:a,limits:(0,u.YT)(t,"limits","raggedRange",a.dtype),deltas:(0,u.YT)(n,"deltas","raggedRange",a.dtype)},s=c.T2.runKernel(l.CQC,r);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const zt=(0,h.op)({raggedTensorToTensor_:function(e,t,n,a,r){const s=(0,u.YT)(e,"shape","raggedTensorToTensor","int32"),o=(0,u.YT)(t,"values","raggedTensorToTensor"),i={shape:s,values:o,defaultValue:(0,u.YT)(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:a.map(((e,t)=>(0,u.YT)(e,"tensors".concat(t),"raggedTensorToTensor","int32")))},d={rowPartitionTypes:r};return c.T2.runKernel(l.mH5,i,d)}});const Pt=(0,h.op)({rand_:function(e,t,n){(0,d.SA)(e);const a=(0,d.Ze)(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let s=0;s<a;s++)r[s]=t();return c.T2.makeTensor(r,e,n)}});var Bt=n(4334);class Wt{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=Bt.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*o,t=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Ut{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=Bt.alea(r.toString()),this.randn=new Wt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Vt{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=Bt.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Gt=(0,h.op)({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const s=new Ut(t,n,a,r),o=(0,j.r)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const jt=(0,h.op)({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const s=new Wt(t,n,a,!1,r),o=(0,j.r)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Zt=(0,h.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return jt(e,0,1,t,n)}});const Kt=(0,h.op)({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;(0,d.SA)(e);const s=(0,j.r)(e,a),o=new Vt(t,n,null,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const Ht=(0,h.op)({randomUniformInt_:function(e,t,n,a){return Kt(e,t,n,"int32",a)}});function qt(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return c.T2.runKernel(l.Q6t,{},r)}var Yt=n(9477),Qt=n(6309),Xt=n(5251),Jt=n(9721),$t=n(7419);const en=(0,h.op)({reverse1d_:function(e){const t=(0,u.YT)(e,"x","reverse");return d.vA(1===t.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,"."))),(0,$t.B)(t,0)}});const tn=(0,h.op)({reverse2d_:function(e,t){const n=(0,u.YT)(e,"x","reverse");return d.vA(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),(0,$t.B)(n,t)}});const nn=(0,h.op)({reverse3d_:function(e,t){const n=(0,u.YT)(e,"x","reverse");return d.vA(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),(0,$t.B)(n,t)}});const an=(0,h.op)({reverse4d_:function(e,t){const n=(0,u.YT)(e,"x","reverse");return d.vA(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),(0,$t.B)(n,t)}});var rn=n(6509),sn=n(6777),on=n(1997),cn=n(2022),ln=n(3117);const un=async function(e,t){const n=(0,u.YT)(e,"x","setdiff1d"),a=(0,u.YT)(t,"y","setdiff1d");d.vA(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),d.vA(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),d.vA(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),s=await a.data(),o=new Set(s);let i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;const c=new ct.yl([i],n.dtype),l=new ct.yl([i],"int32");for(let u=0,d=0;u<r.length;u++)o.has(r[u])||(c.values[d]=r[u],l.values[d]=u,d++);return[c.toTensor(),l.toTensor()]};var dn=n(5740),hn=n(9519),pn=n(8143);const fn=(0,h.op)({slice1d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice1d");return d.vA(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.d)(a,[t],[n])}});const mn=(0,h.op)({slice2d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice2d");return d.vA(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.d)(a,t,n)}});const gn=(0,h.op)({slice3d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice3d");return d.vA(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.d)(a,t,n)}});const yn=(0,h.op)({slice4d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice4d");return d.vA(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.d)(a,t,n)}});var bn=n(6719),vn=n(9973),xn=n(3585),wn=n(3062),kn=n(1405),Sn=n(7307),Tn=n(9486),In=n(5181),Nn=n(191),Cn=n(208),En=n(613),An=n(901),_n=n(319),Rn=n(1231),Fn=n(7382),Dn=n(4894),On=n(8032),Ln=n(9914);function Mn(e,t){(0,d.HO)(e);const n=(0,u.MZ)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,Ln.Q)(e,null,n,t)}function zn(e,t,n){if((0,d.HO)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=(0,u.MZ)(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Ln.Q)(e,t,a,n)}var Pn=n(5395);function Bn(e,t,n){if((0,d.HO)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=(0,u.MZ)(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,Ln.Q)(e,t,a,n)}function Wn(e,t,n){if((0,d.HO)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=(0,u.MZ)(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,Ln.Q)(e,t,a,n)}function Un(e,t,n){if((0,d.HO)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=(0,u.MZ)(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||a,(0,Ln.Q)(e,t,a,n)}var Vn=n(4083);const Gn=(0,h.op)({tensorScatterUpdate_:function(e,t,n){const a=(0,u.YT)(e,"tensor","tensorScatterupdate"),r=(0,u.YT)(t,"indices","tensorScatterupdate","int32"),s=(0,u.YT)(n,"updates","tensorScatterupdate");if(Vn.TT(s,r,a.shape),a.dtype!==s.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(s.dtype,"."));const o={tensor:a,indices:r,updates:s};return c.T2.runKernel(l.X4r,o,{})}});var jn=n(2765);const Zn=(0,h.op)({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new Wt(t,n,a,!0,r),o=(0,j.r)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});var Kn=n(9694),Hn=n(5149),qn=n(3984);function Yn(e,t){return $e(e,t,"right")}function Qn(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return c.T2.makeVariable(e,t,n,a)}var Xn=n(3986),Jn=n(9286);const $n=async function(e){const t=(0,u.YT)(e,"condition","whereAsync","bool"),n=await t.data(),a=(0,Jn.Y)(t.shape,n);return e!==t&&t.dispose(),a};var ea=n(4218),ta=n(3290);const na=async function(e,t,n){const a=(0,u.YT)(e,"tensor","boolMask"),r=(0,u.YT)(t,"mask","boolMask","bool"),s=null==n?0:n,o=r.rank,i=a.shape;d.vA(o>0,(()=>"mask cannot be scalar")),d.O3(i.slice(s,s+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let u=s;u<s+o;u++)c*=i[u];const l=i.slice(0,s).concat([c],i.slice(s+o)),h=(0,N.t)(a,l),p=(0,N.t)(r,[-1]),f=await $n(p),m=(0,En.r)(f,[1]),g=(0,Re.k)(h,m,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),m.dispose(),h.dispose(),p.dispose(),f.dispose(),g};var aa=n(2154),ra=n(2155),sa=n(8804);const oa=(0,h.op)({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=(0,u.YT)(e,"v","movingAverage"),o=(0,u.YT)(t,"x","movingAverage"),c=(0,u.YT)(n,"decay","movingAverage");(0,sa.assertTypesMatch)(s,o),d.vA(d.r1(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=(0,on.d)(1),h=(0,gt.j)(l,c);let p=(0,_.l)((0,gt.j)(o,s),h);if(r){d.vA(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=(0,u.YT)(a,"step","movingAverage");p=(0,fe.y)(p,(0,gt.j)(l,(0,Rt.n)(c,e)))}return(0,i.W)(s,p)}});const ia=(0,h.op)({scatterND_:function(e,t,n){(0,d.SA)(n);const a=(0,u.YT)(e,"indices","scatterND","int32"),r=(0,u.YT)(t,"updates","scatterND");Vn.TT(r,a,n);const s={indices:a,updates:r},o={shape:n};return c.T2.runKernel(l.pJc,s,o)}});const ca=(0,h.op)({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;(0,d.SA)(n);const r=(0,u.YT)(e,"sparseIndices","sparseToDense","int32"),s=(0,u.YT)(t,"sparseValues","sparseToDense","string_or_numeric"),o=(0,u.YT)(a,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==r))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(r,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,o);const i={sparseIndices:r,sparseValues:s,defaultValue:o},h={outputShape:n};return c.T2.runKernel(l.jgd,i,h)}});const la=(0,h.op)({gatherND_:function(e,t){const n=(0,u.YT)(t,"indices","gatherND","int32"),a={params:(0,u.YT)(e,"x","gatherND","string_or_numeric"),indices:n};return c.T2.runKernel(l.O4G,a)}});const ua=(0,h.op)({dropout_:function(e,t,n,a){const r=(0,u.YT)(e,"x","dropout");if(d.vA("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),d.vA(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof ct.qY?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(d.r1(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),o=1-t,c=(0,fe.y)((0,Ae.R)((0,i.W)(Kt(s,0,1,"float32",a),o)),o);return(0,_.l)(r,c)}});function da(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ha(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(o)}return Mn(r,"float32")}const pa=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=(0,u.YT)(e,"predictions","inTopK"),r=(0,u.YT)(t,"targets","inTopK");(0,d.vA)(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),(0,d.vA)(a.rank-1===r.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank))),(0,d.O3)(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=a.shape[a.shape.length-1];(0,d.vA)(n>0&&n<=s,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(s,"), but got ").concat(n)));const o=await a.data(),i=await r.data(),[c,l]=[o.length/s,s],h=(0,d.ce)("bool",c);for(let u=0;u<c;u++){const e=u*l,t=o.subarray(e,e+l),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),h[u]=0;for(let r=0;r<n;r++)if(a[r].index===i[u]){h[u]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),(0,On.O)(h,r.shape,"bool")};var fa=n(1839),ma=n(8805),ga=n(6927),ya=n(1565),ba=n(7905);const va=(0,h.op)({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(f=f||"linear",!1===(0,ba.zE)(c.T2.state.gradientDepth,f)){d.vA("NHWC"===s,(()=>"Error in fused conv2d: got dataFormat of ".concat(s," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=(0,ee.X)(t,n,a,r,s,o,h);return null!=p&&(e=(0,i.W)(e,p)),(0,ba.f2)(e,f,m,g)}const y=(0,u.YT)(t,"x","conv2d","float32"),b=(0,u.YT)(n,"filter","conv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,N.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(v.rank,"."))),d.vA(4===b.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(b.rank,"."))),I.s_("fused conv2d",r,h);const w="NHWC"===s?v.shape[3]:v.shape[1];d.vA(b.shape[2]===w,(()=>"Error in conv2d: depth of input (".concat(w,") must match ")+"input depth for filter ".concat(b.shape[2],"."))),d.vA(I.G0(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'")));const k=I.uf(v.shape,b.shape,a,o,r,h);let S,T;if(null!=p&&(S=(0,u.YT)(p,"bias","fused conv2d"),[S]=(0,sa.makeTypesMatch)(S,y),"NHWC"===s?ma.assertAndGetBroadcastShape(k.outShape,S.shape):(d.vA(S.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(S.shape.length,"."))),d.vA(0===S.shape.length||S.shape[0]===k.outChannels||1===S.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(S.shape,") is not ")+"compatible with the number of output channels "+"(".concat(k.outChannels,")"))))),null!=m){const e=m.shape;if(d.vA(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)d.vA(1===e[0]||e[0]===k.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(k.outChannels,").")));else if(3===e.length)try{ma.assertAndGetBroadcastShape(e,k.outShape)}catch(_){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(k.outShape,").");throw Error(t)}T=(0,u.YT)(m,"prelu weights","fused conv2d")}const C=(e,t)=>{d.vA("NHWC"===s,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(s," but only NHWC is currently supported.")));const[n,i,c,l]=t,u=(0,ba.XB)(e,c,f);d.vA(I.Dh(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const h=[(0,ya.v)(i.shape,u,n,a,r),(0,ga.H)(i,u,n.shape,a,r)];if(null!=l){const e=(0,ba.Do)(l,u);h.push(e)}return h},E={x:v,filter:b,bias:S,preluActivationWeights:T},A={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,fa._X)(((e,t,n)=>{let a=c.T2.runKernel(l.aAr,E,A);return n([t,e,a]),x&&(a=(0,N.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:C}}));return e(v,b)}{const e=(0,fa._X)(((e,t,n,a)=>{let r=c.T2.runKernel(l.aAr,E,A);return a([t,e,r,n]),x&&(r=(0,N.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:C}}));return e(v,b,S)}}});var xa=n(7399),wa=n(261);const ka=(0,h.op)({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(!1===(0,ba.zE)(c.T2.state.gradientDepth,f)){let e=(0,de.G)(t,n,a,r,s,o,h);return null!=p&&(e=(0,i.W)(e,p)),(0,ba.f2)(e,f,m,g)}const y=(0,u.YT)(t,"x","depthwiseConv2d","float32"),b=(0,u.YT)(n,"filter","depthwiseConv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,N.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(v.rank,"."))),d.vA(4===b.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(b.rank,"."))),d.vA(v.shape[3]===b.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(v.shape[3],") must match the inChannels dimension in ")+"filter ".concat(b.shape[2],"."))),null==o&&(o=[1,1]),d.vA(I.G0(a,o),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'"))),I.s_("fused depthwiseConv2d",r,h);const w=I.uf(v.shape,b.shape,a,o,r,h,!0);let k,S;null!=p&&(k=(0,u.YT)(p,"bias","fused conv2d"),[k]=(0,sa.makeTypesMatch)(k,y),ma.assertAndGetBroadcastShape(w.outShape,k.shape)),null!=m&&(S=(0,u.YT)(m,"prelu weights","fused depthwiseConv2d"));const T=(e,t)=>{d.vA(I.Dh(o),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'")));const[n,s,i,c]=t,l=(0,ba.XB)(e,i,f),u=(0,wa.l)(s.shape,l,n,a,r,o,h),p=(0,xa.x)(s,l,n.shape,a,r,o,h);if(null!=c){return[u,p,(0,ba.Do)(k,l)]}return[u,p]},C={x:v,filter:b,bias:k,preluActivationWeights:S},E={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,fa._X)(((e,t,n)=>{let a=c.T2.runKernel(l.T7M,C,E);return n([t,e,a]),x&&(a=(0,N.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:T}}));return e(v,b)}{const e=(0,fa._X)(((e,t,n,a)=>{let r=c.T2.runKernel(l.T7M,C,E);return a([t,e,r,n]),x&&(r=(0,N.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:T}}));return e(v,b,k)}}});const Sa=(0,h.op)({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:h,leakyreluAlpha:p=.2}=e;if(!1===(0,ba.zE)(c.T2.state.gradientDepth,o)){let e=(0,A.N)(t,n,a,r);return null!=s&&(e=(0,i.W)(e,s)),(0,ba.f2)(e,o,h,p)}let f=(0,u.YT)(t,"a","fused matMul"),m=(0,u.YT)(n,"b","fused matMul");[f,m]=(0,sa.makeTypesMatch)(f,m);const g=a?f.shape[f.rank-2]:f.shape[f.rank-1],y=r?m.shape[m.rank-1]:m.shape[m.rank-2],b=a?f.shape[f.rank-1]:f.shape[f.rank-2],v=r?m.shape[m.rank-2]:m.shape[m.rank-1],x=f.shape.slice(0,-2),w=m.shape.slice(0,-2),k=d.Ze(x),S=d.Ze(w);d.vA(g===y,(()=>"Error in fused matMul: inner shapes (".concat(g,") and (")+"".concat(y,") of Tensors with shapes ").concat(f.shape," and ")+"".concat(m.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const T=ma.assertAndGetBroadcastShape(f.shape.slice(0,-2),m.shape.slice(0,-2)).concat([b,v]),I=a?(0,N.t)(f,[k,g,b]):(0,N.t)(f,[k,b,g]),C=r?(0,N.t)(m,[S,v,y]):(0,N.t)(m,[S,y,v]);let E,_;null!=s&&(E=(0,u.YT)(s,"bias","fused matMul"),[E]=(0,sa.makeTypesMatch)(E,f),ma.assertAndGetBroadcastShape(T,E.shape)),null!=h&&(_=(0,u.YT)(h,"prelu weights","fused matMul"));const R=(e,t)=>{const[n,i,c,l]=t,u=(0,ba.XB)((0,N.t)(e,c.shape),c,o);let d,h;if(a||r?!a&&r?(d=(0,A.N)(u,i,!1,!1),h=(0,A.N)(u,n,!0,!1)):a&&!r?(d=(0,A.N)(i,u,!1,!0),h=(0,A.N)(n,u,!1,!1)):(d=(0,A.N)(i,u,!0,!0),h=(0,A.N)(u,n,!0,!0)):(d=(0,A.N)(u,i,!1,!0),h=(0,A.N)(n,u,!0,!1)),null!=s){return[d,h,(0,ba.Do)(l,u)]}return[d,h]},F={a:I,b:C,bias:E,preluActivationWeights:_},D={transposeA:a,transposeB:r,activation:o,leakyreluAlpha:p};if(null==s){const e=(0,fa._X)(((e,t,n)=>{const a=c.T2.runKernel(l.Dr,F,D);return n([e,t,a]),{value:(0,N.t)(a,T),gradFunc:R}}));return e(I,C)}{const e=(0,fa._X)(((e,t,n,a)=>{const r=c.T2.runKernel(l.Dr,F,D);return a([e,t,r,n]),{value:(0,N.t)(r,T),gradFunc:R}}));return e(I,C,E)}}});const Ta=(0,h.op)({hammingWindow_:function(e){return ha(e,.54,.46)}});const Ia=(0,h.op)({hannWindow_:function(e){return ha(e,.5,.5)}});const Na=(0,h.op)({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+t<=e.size;)o.push((0,F.d)(e,s,t)),s+=n;if(a)for(;s<e.size;){const a=s+t-e.size,i=(0,E.x)([(0,F.d)(e,s,t-a),(0,Ee.G)([a],r)]);o.push(i),s+=n}return 0===o.length?zn([],[0,t]):(0,N.t)((0,E.x)(o),[o.length,t])}});const Ca=(0,h.op)({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ia;null==a&&(a=da(t));const s=Na(e,t,n),o=(0,_.l)(s,r(t));return(0,Tn.z)(o,a)}});const Ea=(0,h.op)({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u.YT)(e,"image","cropAndResize"),i=(0,u.YT)(t,"boxes","cropAndResize","float32"),h=(0,u.YT)(n,"boxInd","cropAndResize","int32"),p=i.shape[0];d.vA(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),d.vA(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(p,",4] ")+"but had shape ".concat(i.shape,"."))),d.vA(1===h.rank&&h.shape[0]===p,(()=>"Error in cropAndResize: boxInd must be have size [".concat(p,"] ")+"but had shape ".concat(i.shape,"."))),d.vA(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),d.vA(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),d.vA("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const f={image:o,boxes:i,boxInd:h},m={method:r,extrapolationValue:s,cropSize:a};return c.T2.runKernel(l.MRQ,f,m)}});const Aa=(0,h.op)({flipLeftRight_:function(e){const t=(0,u.YT)(e,"image","flipLeftRight","float32");d.vA(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return c.T2.runKernel(l.BxF,n,{})}});const _a=(0,h.op)({grayscaleToRGB_:function(e){const t=(0,u.YT)(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];d.vA(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),d.vA(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,(0,Ne.V)(t,r)}});const Ra=(0,h.op)({rgbToGrayscale_:function(e){const t=(0,u.YT)(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];d.vA(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),d.vA(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const r=t.dtype,s=(0,T.w)(t,"float32"),o=Mn([.2989,.587,.114]);let i;switch(t.rank){case 2:i=ye("ij,j->i",s,o);break;case 3:i=ye("ijk,k->ij",s,o);break;case 4:i=ye("ijkl,l->ijk",s,o);break;case 5:i=ye("ijklm,m->ijkl",s,o);break;case 6:i=ye("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=(0,Te.U)(i,-1),(0,T.w)(i,r)}});const Fa=(0,h.op)({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=(0,u.YT)(e,"image","rotateWithOffset","float32");d.vA(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const s={image:r},o={radians:t,fillValue:n,center:a};return c.T2.runKernel(l.BK4,s,o)}});function Da(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),d.vA(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),d.vA(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),d.vA(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),d.vA(1===t.rank,(()=>"scores must be a 1D tensor")),d.vA(t.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(t.shape[0]))),d.vA(0<=s&&s<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const Oa=(0,h.op)({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,u.YT)(e,"boxes","nonMaxSuppression","float32"),o=(0,u.YT)(t,"scores","nonMaxSuppression","float32"),i=Da(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const d={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return c.T2.runKernel(l.SDM,{boxes:s,scores:o},d)}});var La=n(6692);const Ma=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,u.YT)(e,"boxes","nonMaxSuppressionAsync"),o=(0,u.YT)(t,"scores","nonMaxSuppressionAsync"),i=Da(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:h}=(0,La.c7)(l,d,n,a,r);return s!==e&&s.dispose(),o!==t&&o.dispose(),Mn(h,"int32")};const za=(0,h.op)({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u.YT)(e,"boxes","nonMaxSuppression"),i=(0,u.YT)(t,"scores","nonMaxSuppression"),d=Da(o,i,n,a,r,s);n=d.maxOutputSize,a=d.iouThreshold,r=d.scoreThreshold,s=d.softNmsSigma;const h={boxes:o,scores:i},p={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},f=c.T2.runKernel(l.e0f,h,p);return{selectedIndices:f[0],selectedScores:f[1]}}});const Pa=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,u.YT)(t,"scores","nonMaxSuppressionAsync"),c=Da(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),d=l[0],h=l[1],{selectedIndices:p,selectedScores:f}=(0,La.ut)(d,h,n,a,r,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Mn(p,"int32"),selectedScores:Mn(f)}};const Ba=(0,h.op)({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,u.YT)(e,"boxes","nonMaxSuppression"),i=(0,u.YT)(t,"scores","nonMaxSuppression"),d=Da(o,i,n,a,r,null),h={boxes:o,scores:i},p={maxOutputSize:d.maxOutputSize,iouThreshold:d.iouThreshold,scoreThreshold:d.scoreThreshold,padToMaxOutputSize:s},f=c.T2.runKernel(l.Zl4,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}});const Wa=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,u.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,u.YT)(t,"scores","nonMaxSuppressionAsync"),c=Da(o,i,n,a,r,null),l=c.maxOutputSize,d=c.iouThreshold,h=c.scoreThreshold,[p,f]=await Promise.all([o.data(),i.data()]),{selectedIndices:m,validOutputs:g}=(0,La.ZS)(p,f,l,d,h,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Mn(m,"int32"),validOutputs:(0,on.d)(g,"int32")}};var Ua=n(2214),Va=n(2823);const Ga=(0,h.op)({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=(0,u.YT)(e,"image","threshold"),s=r.shape[0]*r.shape[1];let o,c,l,h,p=(0,_.l)(Mn([a]),255);if(d.vA(3===r.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,"."))),d.vA(3===r.shape[2]||1===r.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],"."))),d.vA("int32"===r.dtype||"float32"===r.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,"."))),d.vA("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===r.shape[2]){[o,c,l]=(0,In.l)(r,[1,1,1],-1);const e=(0,_.l)(o,.2989),t=(0,_.l)(c,.587),n=(0,_.l)(l,.114);h=(0,i.W)((0,i.W)(e,t),n)}else h=e;if("otsu"===t){p=function(e,t){let n,a,r,s,o,c,l=Mn([-1]),u=Mn([0]),d=Mn([0]);for(let h=0;h<e.size-1;h++){n=(0,F.d)(e,0,h+1),a=(0,F.d)(e,h+1),o=(0,fe.y)((0,Fn.c)(n),t),c=(0,fe.y)((0,Fn.c)(a),t);const p=(0,Fn.c)((0,_.l)(n,qt(0,n.size)));r=(0,fe.y)(p,(0,Fn.c)(n));const f=(0,Ee.G)(a.shape,n.size),m=(0,i.W)(qt(0,a.size),f),g=(0,_.l)(a,m);s=(0,fe.y)((0,Fn.c)(g),(0,Fn.c)(a));const y=(0,gt.j)(r,s),b=(0,gt.j)(r,s),v=(0,_.l)(o,c);d=(0,_.l)((0,_.l)(v,y),b);const x=(0,Fe.r)(d,u);u=(0,Xn._)(x,d,u),l=(0,Xn._)(x,Mn([h]),l)}return l}(W((0,T.w)((0,rn.L)(h),"int32"),(0,On.O)([]),256),s)}const f=n?(0,We.I)(h,p):(0,Fe.r)(h,p);return(0,T.w)((0,_.l)(f,255),"int32")}});const ja=(0,h.op)({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=(0,u.YT)(e,"image","transform","float32"),i=(0,u.YT)(t,"transforms","transform","float32");d.vA(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),d.vA(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),d.vA(null==s||2===s.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(s,".")));const h={image:o,transforms:i},p={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return c.T2.runKernel(l.dLy,h,p)}});const Za=(0,h.op)({bandPart_:function(e,t,n){const a=(0,u.YT)(e,"a","bandPart");(0,d.vA)(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[s,o]=a.shape.slice(-2);let i,c;"number"===typeof t?((0,d.vA)(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),(0,d.vA)(t<=s,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(s,")."))),i=(0,u.YT)(t<0?s:t,"numLower","bandPart")):((0,d.vA)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=(0,Xn._)((0,Be.M)(t,0),s,(0,dt.B)(t,s))),"number"===typeof n?((0,d.vA)(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),(0,d.vA)(n<=o,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."))),c=(0,u.YT)(n<0?o:n,"numUpper","bandPart")):((0,d.vA)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=(0,Xn._)((0,Be.M)(n,0),o,(0,dt.B)(n,o)));const l=(0,N.t)(qt(0,s,1,"int32"),[-1,1]),h=qt(0,o,1,"int32"),p=(0,gt.j)(l,h),f=(0,qe.n)((0,We.I)(p,i),(0,De.D)(p,(0,xt.H)(c))),m=(0,ea.U)([s,o],a.dtype);return(0,N.t)((0,An.t)((0,qn.K)((0,N.t)(a,[-1,s,o])).map((e=>(0,Xn._)(f,e,m)))),r)}});const Ka=(0,h.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,d.vA)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,d.vA)(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=(0,In.l)(e,e.shape[0],0).map((e=>(0,En.r)(e,[0])));(0,d.vA)(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(c.T2.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=(0,_.l)((0,Fn.c)((0,_.l)(n[t],e)),n[t]);e=(0,gt.j)(e,a)}return(0,fe.y)(e,(0,ra.x)(e,"euclidean"))})));return t?(0,An.t)(n,0):n}});var Ha=n(8046);function qa(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return c.T2.tidy((()=>{(0,d.vA)(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],a=e.shape[1];let r=Ce(n),s=(0,H.o)(e);const o=zn([[1]],[1,1]);let i=(0,H.o)(o);const l=n>=a?a:n;for(let e=0;e<l;++e){const t=s,l=i,u=r;[i,s,r]=c.T2.tidy((()=>{const t=(0,F.d)(s,[e,e],[n-e,1]),c=(0,ra.x)(t),l=(0,F.d)(s,[e,e],[1,1]),u=(0,Xn._)((0,Fe.r)(l,0),zn([[-1]]),zn([[1]])),d=(0,gt.j)(l,(0,_.l)(u,c)),h=(0,fe.y)(t,d);i=1===h.shape[0]?(0,H.o)(o):(0,E.x)([o,(0,F.d)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=(0,xt.H)((0,fe.y)((0,A.N)(u,d),c)),f=(0,F.d)(s,[e,0],[n-e,a]),m=(0,_.l)(p,i),g=(0,aa.m)(i);if(0===e)s=(0,gt.j)(f,(0,A.N)(m,(0,A.N)(g,f)));else{const t=(0,gt.j)(f,(0,A.N)(m,(0,A.N)(g,f)));s=(0,E.x)([(0,F.d)(s,[0,0],[e,a]),t],0)}const y=(0,aa.m)(m),b=(0,F.d)(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=(0,gt.j)(b,(0,A.N)((0,A.N)(b,i),y));else{const t=(0,gt.j)(b,(0,A.N)((0,A.N)(b,i),y));r=(0,E.x)([(0,F.d)(r,[0,0],[n,e]),t],1)}return[i,s,r]})),(0,Ha.AS)([t,l,u])}return!t&&n>a&&(r=(0,F.d)(r,[0,0],[n,a]),s=(0,F.d)(s,[0,0],[a,a])),[r,s]}))}const Ya=(0,h.op)({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,d.vA)(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return qa(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=(0,qn.K)((0,N.t)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach((e=>{const[n,a]=qa(e,t);r.push(n),s.push(a)}));return[(0,N.t)((0,An.t)(r,0),e.shape),(0,N.t)((0,An.t)(s,0),e.shape)]}}});var Qa;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Qa||(Qa={}));const Xa=(0,h.op)({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Qa.SUM_BY_NONZERO_WEIGHTS;const a=(0,u.YT)(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=(0,u.YT)(t,"weights","computeWeightedLoss"));const s=null==r?a:(0,_.l)(a,r);if(n===Qa.NONE)return s;if(n===Qa.SUM)return(0,Fn.c)(s);if(n===Qa.MEAN){if(null==r)return(0,ot.i)(s);{const e=a.size/r.size,t=(0,fe.y)((0,Fn.c)(s),(0,Fn.c)(r));return e>1?(0,fe.y)(t,(0,on.d)(e)):t}}if(n===Qa.SUM_BY_NONZERO_WEIGHTS){if(null==r)return(0,fe.y)((0,Fn.c)(s),(0,on.d)(a.size));{const e=(0,_.l)(r,(0,it.S)(a.shape)),t=(0,T.w)((0,Fn.c)((0,wt.E)(e,(0,on.d)(0))),"float32");return(0,fe.y)((0,Fn.c)(s),t)}}throw Error("Unknown reduction: ".concat(n))}});const Ja=(0,h.op)({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Qa.SUM_BY_NONZERO_WEIGHTS;const s=(0,u.YT)(e,"labels","absoluteDifference"),o=(0,u.YT)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,u.YT)(n,"weights","absoluteDifference")),(0,d.O3)(s.shape,o.shape,"Error in absoluteDifference: ");const c=(0,r.t)((0,gt.j)(s,o));return Xa(c,i,a)}});const $a=(0,h.op)({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Qa.SUM_BY_NONZERO_WEIGHTS;const s=(0,u.YT)(e,"labels","cosineDistance"),o=(0,u.YT)(t,"predictions","cosineDistance");let i=null;null!=a&&(i=(0,u.YT)(a,"weights","cosineDistance")),(0,d.O3)(s.shape,o.shape,"Error in cosineDistance: ");const c=(0,on.d)(1),l=(0,gt.j)(c,(0,Fn.c)((0,_.l)(s,o),n,!0));return Xa(l,i,r)}});const er=(0,h.op)({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Qa.SUM_BY_NONZERO_WEIGHTS,r=(0,u.YT)(e,"labels","hingeLoss");const s=(0,u.YT)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,u.YT)(n,"weights","hingeLoss")),(0,d.O3)(r.shape,s.shape,"Error in hingeLoss: ");const i=(0,on.d)(1);r=(0,gt.j)((0,_.l)((0,on.d)(2),r),i);const c=(0,Xt.V)((0,gt.j)(i,(0,_.l)(r,s)));return Xa(c,o,a)}});const tr=(0,h.op)({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Qa.SUM_BY_NONZERO_WEIGHTS;const o=(0,u.YT)(e,"labels","huberLoss"),c=(0,u.YT)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,u.YT)(n,"weights","huberLoss")),(0,d.O3)(o.shape,c.shape,"Error in huberLoss: ");const h=(0,on.d)(a),p=(0,r.t)((0,gt.j)(c,o)),f=(0,dt.B)(p,h),m=(0,gt.j)(p,f),g=(0,i.W)((0,_.l)((0,on.d)(.5),(0,mt.E)(f)),(0,_.l)(h,m));return Xa(g,l,s)}});const nr=(0,h.op)({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Qa.SUM_BY_NONZERO_WEIGHTS;const s=(0,u.YT)(e,"labels","logLoss"),o=(0,u.YT)(t,"predictions","logLoss");let c=null;null!=n&&(c=(0,u.YT)(n,"weights","logLoss")),(0,d.O3)(s.shape,o.shape,"Error in logLoss: ");const l=(0,on.d)(1),h=(0,on.d)(a),p=(0,xt.H)((0,_.l)(s,(0,Ge.R)((0,i.W)(o,h)))),f=(0,_.l)((0,gt.j)(l,s),(0,Ge.R)((0,i.W)((0,gt.j)(l,o),h))),m=(0,gt.j)(p,f);return Xa(m,c,r)}});const ar=(0,h.op)({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Qa.SUM_BY_NONZERO_WEIGHTS;const r=(0,u.YT)(e,"labels","meanSquaredError"),s=(0,u.YT)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,u.YT)(n,"weights","meanSquaredError")),(0,d.O3)(r.shape,s.shape,"Error in meanSquaredError: ");const i=(0,Cn.P)(r,s);return Xa(i,o,a)}});const rr=(0,h.op)({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Qa.SUM_BY_NONZERO_WEIGHTS,o=(0,u.YT)(e,"multiClassLabels","sigmoidCrossEntropy");const c=(0,u.YT)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,u.YT)(n,"weights","sigmoidCrossEntropy")),(0,d.O3)(o.shape,c.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,on.d)(a),t=(0,on.d)(1),n=(0,on.d)(.5);o=(0,i.W)((0,_.l)(o,(0,gt.j)(t,e)),(0,_.l)(n,e))}const h=function(e,t){const n=(0,u.YT)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,u.YT)(t,"logits","sigmoidCrossEntropyWithLogits");(0,d.O3)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,Xt.V)(a),o=(0,_.l)(a,n),c=(0,je.K)((0,Se.o)((0,xt.H)((0,r.t)(a))));return(0,i.W)((0,gt.j)(s,o),c)}(o,c);return Xa(h,l,s)}});const sr=(0,h.op)({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Qa.SUM_BY_NONZERO_WEIGHTS,s=(0,u.YT)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,u.YT)(t,"logits","softmaxCrossEntropy");let c=null;if(null!=n&&(c=(0,u.YT)(n,"weights","softmaxCrossEntropy")),(0,d.O3)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const e=(0,on.d)(a),t=(0,on.d)(1),n=(0,on.d)(s.shape[1]);s=(0,i.W)((0,_.l)(s,(0,gt.j)(t,e)),(0,fe.y)(e,n))}const l=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=(0,fa._X)(((e,t,a)=>{const r=(0,He.V)(t,[n],!0),s=(0,gt.j)((0,T.w)(t,"float32"),r);a([e,s]);const o=(0,xt.H)((0,_.l)(s,e));return{value:(0,Fn.c)(o,[n]),gradFunc:(e,t)=>{const[a,r]=t,s=(0,ft.SM)(e.shape,[n]);return[(0,_.l)((0,N.t)(e,s),(0,gt.j)((0,T.w)(a,"float32"),(0,Se.o)(r))),(0,_.l)((0,N.t)(e,s),(0,gt.j)((0,Se.o)(r),(0,T.w)(a,"float32")))]}}}));return a(e,t)}(s,o);return Xa(l,c,r)}});const or=(0,h.op)({sparseFillEmptyRows_:function(e,t,n,a){const r=(0,u.YT)(e,"indices","sparseFillEmptyRows","int32"),s=(0,u.YT)(t,"values","sparseFillEmptyRows"),o=(0,u.YT)(n,"denseShape","sparseFillEmptyRows","int32"),i=(0,u.YT)(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape ".concat(s.shape));if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(o.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const d={indices:r,values:s,denseShape:o,defaultValue:i},h=c.T2.runKernel(l.C8s,d);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}});const ir=(0,h.op)({sparseReshape_:function(e,t,n){const a=(0,u.YT)(e,"inputIndices","sparseReshape","int32"),r=(0,u.YT)(t,"inputShape","sparseReshape","int32"),s=(0,u.YT)(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(s.shape));const o={inputIndices:a,inputShape:r,newShape:s},i=c.T2.runKernel(l.BoJ,o);return{outputIndices:i[0],outputShape:i[1]}}});const cr=(0,h.op)({sparseSegmentMean_:function(e,t,n){const a=(0,u.YT)(e,"data","sparseSegmentMean"),r=(0,u.YT)(t,"indices","sparseSegmentMean","int32"),s=(0,u.YT)(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return c.T2.runKernel(l.L6G,o)}});const lr=(0,h.op)({sparseSegmentSum_:function(e,t,n){const a=(0,u.YT)(e,"data","sparseSegmentSum"),r=(0,u.YT)(t,"indices","sparseSegmentSum","int32"),s=(0,u.YT)(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return c.T2.runKernel(l.DvZ,o)}});const ur=(0,h.op)({stringNGrams_:function(e,t,n,a,r,s,o,i){const d=(0,u.YT)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error("Data must be a vector, saw: ".concat(d.shape));const h=(0,u.YT)(t,"dataSplits","stringNGrams");if("int32"!==h.dtype)throw new Error("Data splits must be of datatype int32");const p={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:o,preserveShortSequences:i},f={data:d,dataSplits:h},m=c.T2.runKernel(l.YAb,f,p);return{nGrams:m[0],nGramsSplits:m[1]}}});const dr=(0,h.op)({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=(0,u.YT)(e,"input","stringSplit","string"),r=(0,u.YT)(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==r.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(r.shape));const s={skipEmpty:n},o={input:a,delimiter:r},i=c.T2.runKernel(l.iW0,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const hr=(0,h.op)({stringToHashBucketFast_:function(e,t){const n=(0,u.YT)(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return c.T2.runKernel(l.$jE,r,a)}});const pr=(0,h.op)({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=(0,u.YT)(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:a};return c.T2.runKernel(l.GZp,{x:r},s)}}),fr={fft:wn.h,ifft:kn.K,rfft:Tn.z,irfft:Sn.g},mr={hammingWindow:Ta,hannWindow:Ia,frame:Na,stft:Ca},gr={flipLeftRight:Aa,grayscaleToRGB:_a,resizeNearestNeighbor:Va.b,resizeBilinear:Ua.v,rgbToGrayscale:Ra,rotateWithOffset:Fa,cropAndResize:Ea,nonMaxSuppression:Oa,nonMaxSuppressionAsync:Ma,nonMaxSuppressionWithScore:za,nonMaxSuppressionWithScoreAsync:Pa,nonMaxSuppressionPadded:Ba,nonMaxSuppressionPaddedAsync:Wa,threshold:Ga,transform:ja},yr={bandPart:Za,gramSchmidt:Ka,qr:Ya},br={absoluteDifference:Ja,computeWeightedLoss:Xa,cosineDistance:$a,hingeLoss:er,huberLoss:tr,logLoss:nr,meanSquaredError:ar,sigmoidCrossEntropy:rr,softmaxCrossEntropy:sr},vr={sparseFillEmptyRows:or,sparseReshape:ir,sparseSegmentMean:cr,sparseSegmentSum:lr},xr={stringNGrams:ur,stringSplit:dr,stringToHashBucketFast:hr,staticRegexReplace:pr}},5048:(e,t,n)=>{"use strict";n.d(t,{e:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o=(0,s.YT)(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},c={x:o};return a.T2.runKernel(r.ODT,c,i)}})},7751:(e,t,n)=>{"use strict";n.d(t,{d:()=>h});var a=n(4148),r=n(1426),s=n(8650),o=n(2557),i=n(7538),c=n(6044),l=n(7892),u=n(5583),d=n(3585);const h=(0,l.op)({pool_:function(e,t,n,l,h,p,f){null==h&&(h=[1,1]),null==p&&(p=1),0===l&&(l="valid");const m=(0,a.YT)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,u.t)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),r.vA(i.G0(p,h),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(p," and dilations '").concat(h,"'")));const b=i.E6(g.shape,t,p,h,l),v=[b.dilationHeight,b.dilationWidth];let x;x="same"===l?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),a=n.map((e=>e-1)),r=a.map((e=>Math.floor(e/2))),s=a.map(((e,t)=>e-r[t]));return a.map(((e,t)=>[r[t],s[t]]))}([b.filterHeight,b.filterWidth],v):[[0,0],[0,0]];const w=1===v[0]&&1===v[1],[k,S]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=r.map(((e,t)=>e+o[t])),c=t.map(((e,t)=>[a[t],i[t]])),l=t.map(((e,t)=>[0,o[t]]));return[c,l]}([b.inHeight,b.inWidth],v,x),T=w?l:"valid",I=w?g:(0,d.e)(g,v,k),N=("avg"===n?()=>(0,s.$)(I,t,p,T,f):()=>(0,c.j)(I,t,p,T,f))(),C=w?N:(0,o.G)(N,v,S);return y?(0,u.t)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},7587:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({pow_:function(e,t){let n=(0,o.YT)(e,"base","pow"),i=(0,o.YT)(t,"exp","pow");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.pyJ,c)}})},9855:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({prelu_:function(e,t){const n={x:(0,s.YT)(e,"x","prelu"),alpha:(0,s.YT)(t,"alpha","prelu")};return a.T2.runKernel(r.Ncv,n)}})},6574:(e,t,n)=>{"use strict";function a(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}n.d(t,{y:()=>a})},9556:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(7794);const i=(0,n(7892).op)({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,s.YT)(e,"x","prod");"bool"===i.dtype&&(i=(0,o.w)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.T2.runKernel(r.kdj,c,l)}})},9477:(e,t,n)=>{"use strict";n.d(t,{x:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({real_:function(e){const t={input:(0,s.YT)(e,"input","real")};return a.T2.runKernel(r.LRy,t)}})},6309:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({reciprocal_:function(e){const t={x:(0,s.YT)(e,"x","reciprocal")};return a.T2.runKernel(r.huO,t)}})},5251:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({relu_:function(e){const t={x:(0,s.YT)(e,"x","relu")};return a.T2.runKernel(r.fUj,t)}})},9721:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({relu6_:function(e){const t={x:(0,s.YT)(e,"x","relu6")};return a.T2.runKernel(r.P_L,t)}})},5583:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({reshape_:function(e,t){const n={x:(0,s.YT)(e,"x","reshape","string_or_numeric")},o={shape:t};return a.T2.runKernel(r.R23,n,o)}})},7419:(e,t,n)=>{"use strict";n.d(t,{B:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({reverse_:function(e,t){const n={x:(0,s.YT)(e,"x","reverse")},o={dims:t};return a.T2.runKernel(r.D7i,n,o)}})},6509:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({round_:function(e){const t={x:(0,s.YT)(e,"x","round")};return a.T2.runKernel(r.hVg,t)}})},6777:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({rsqrt_:function(e){const t={x:(0,s.YT)(e,"x","rsqrt","float32")};return a.T2.runKernel(r.TOR,t)}})},1997:(e,t,n)=>{"use strict";n.d(t,{d:()=>s});var a=n(8977),r=n(9914);function s(e,t){if(((0,a.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,a.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,r.Q)(e,[],[],t)}},4083:(e,t,n)=>{"use strict";n.d(t,{Ly:()=>r,TT:()=>s,l8:()=>o});var a=n(1426);function r(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(e.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != ".concat(r+e.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(t.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(e[o+r],")"))}function s(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}r(n,t,e)}function o(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,o=n.length;let i=1;for(let a=s;a<o;++a)i*=n[a];const c=s<1?1:s;return{sliceRank:s,numUpdates:(0,a.Ze)(t.shape)/c,sliceSize:i,strides:[...(0,a.Ur)(n.slice(0,s)),1],outputSize:(0,a.Ze)(n)}}},2022:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({selu_:function(e){const t={x:(0,s.YT)(e,"x","selu")};return a.T2.runKernel(r.u$b,t)}})},3765:(e,t,n)=>{"use strict";n.d(t,{X:()=>r,j:()=>a});const a=1.7580993408473768,r=1.0507009873554805},3117:(e,t,n)=>{"use strict";n.d(t,{w:()=>l});var a=n(4148),r=n(1426),s=n(4969),o=n(9899),i=n(7892),c=n(5583);const l=(0,i.op)({separableConv2d_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const h=(0,a.YT)(e,"x","separableConv2d"),p=(0,a.YT)(t,"depthwiseFilter","separableConv2d"),f=(0,a.YT)(n,"pointwiseFilter","separableConv2d");let m=h,g=!1;if(3===h.rank&&(g=!0,m=(0,c.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");r.vA(4===m.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,"."))),r.vA(4===p.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),r.vA(4===f.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),r.vA(1===f.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(f.shape[0],"."))),r.vA(1===f.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(f.shape[1],".")));const y=p.shape[2],b=p.shape[3];r.vA(f.shape[2]===y*b,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(y*b,", ")+"but got ".concat(f.shape[2],".")));const v=(0,o.G)(m,p,i,l,d,u),x=(0,s.X)(v,f,1,"valid",d);return g?(0,c.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},4213:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sigmoid_:function(e){const t={x:(0,s.YT)(e,"x","sigmoid","float32")};return a.T2.runKernel(r.vI1,t)}})},5740:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sign_:function(e){const t={x:(0,s.YT)(e,"x","sign")};return a.T2.runKernel(r.YVe,t)}})},9519:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sin_:function(e){const t={x:(0,s.YT)(e,"x","sin","float32")};return a.T2.runKernel(r.hql,t)}})},8143:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sinh_:function(e){const t={x:(0,s.YT)(e,"x","sinh")};return a.T2.runKernel(r.J3C,t)}})},463:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({slice_:function(e,t,n){const o=(0,s.YT)(e,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},c={begin:t,size:n};return a.T2.runKernel(r.JiE,i,c)}})},4642:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>o,computeFlatOffset:()=>v,computeOutShape:()=>c,getNormalizedAxes:()=>h,isSliceContinous:()=>b,maskToAxes:()=>i,parseSliceParams:()=>x,sliceInfo:()=>w,startForAxis:()=>g,startIndicesWithElidedDims:()=>p,stopForAxis:()=>y,stopIndicesWithElidedDims:()=>f,stridesForAxis:()=>m,stridesWithElidedDims:()=>l});var a=n(1426);const r=-2,s=-1;function o(e,t,n){const r=e.shape.length;a.vA(r===t.length,(()=>"Error in slice".concat(r,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(r,")."))),a.vA(r===n.length,(()=>"Error in slice".concat(r,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(r,").")));for(let s=0;s<r;++s)a.vA(t[s]+n[s]<=e.shape[s],(()=>"Error in slice".concat(r,"D: begin[").concat(s,"] + size[").concat(s,"] ")+"(".concat(t[s]+n[s],") would overflow input.shape[").concat(s,"] (").concat(e.shape[s],")")))}function i(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function c(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function l(e,t,n,a){const r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[t]=1:(r.splice(t,0,1),r.pop());return r}function u(e,t,n){return n<=e?n:n-(t-1)}function d(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function h(e,t,n,a,r,s,o,i,c){const u=e.length;let d=new Array(u),h=new Array(u),b=new Array(u);if(t.length&&n>0){const c=t[0],u=n+1;d=p(o,c,u,a,e),h=f(i,c,u,r,e),b=l(s,c,u,e)}else for(let l=0;l<u;l++)d[l]=g(o,a,s,e,l,c),h[l]=y(i,r,s,e,l,c),b[l]=m(s,l,c);return{begin:d,end:h,strides:b}}function p(e,t,n,a,r){const s=[...r],o=d(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const r=u(t,n,i);let o=a[r];e&1<<r&&(o=0),s[i]=o}return s}function f(e,t,n,r,s){const o=[...s],i=d(n,t);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const s=u(t,n,a);let i=r[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),o[a]=i}for(let c=0;c<o.length;c++){const e=s[c];o[c]<0&&(o[c]+=e),o[c]=a.qE(0,o[c],s[c])}return o}function m(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function g(e,t,n,r,s,o){let i=t[s];const c=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=c>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=a.qE(0,i,l-1),i}function y(e,t,n,r,s,o){let i=t[s];const c=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=c>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=c>0?a.qE(0,i,l):a.qE(-1,i,l-1),i}function b(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function v(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function x(e,t,n){let r;const s=e.shape.length;let o;return r="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{a.vA(-1!==e,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map(((t,n)=>t>=0?t:(a.vA(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-r[n]))),[r,o]}function w(e,t,n,a,o,i,c,l,u){let d;if(null==a?(d=new Array(t.length),d.fill(1)):d=a,null!=c&&0!==(c&c-1))throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const p={dims:d.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:d.slice(),beginMask:o,endMask:i,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:u};for(let r=0;r<p.dims;r++)h&&0!==(1<<r&l)&&p.numAddAxisAfterEllipsis++,1<<r&c&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);const f={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(s),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(p,f);let m=!0,g=!0,y=!0;const b=[],v=[];for(let r=0;r<e.length;++r){if(0===f.strides[r])throw Error("strides[".concat(r,"] must be non-zero"));const t=!!(f.shrinkAxisMask&1<<r),n=e[r];if(-1===n){b.push(t?1:-1);continue}const a=[f.beginMask&1<<r,f.endMask&1<<r],s=[f.strides[r]>0?0:-1,f.strides[r]>0?n:n-1];if(t&&f.strides[r]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&1===f.strides[r];const o=!!(f.beginMask&1<<r&&f.endMask&1<<r);if(f.beginValid&&f.endValid){if(t){const e=f.begin[r]<0?n+f.begin[r]:f.begin[r];if(f.begin[r]=e,f.end[r]=f.begin[r]+1,e<0||e>=n)throw Error("slice index ".concat(f.begin[r]," of dimension ").concat(r," out of bounds."))}else f.begin[r]=k(f.begin[r],0,f.strides[r],n,a,s),f.end[r]=k(f.end[r],1,f.strides[r],n,a,s);const e=1===f.strides[r]&&0===f.begin[r]&&f.end[r]===n;m=m&&e,g=g&&(0===r&&1===f.strides[r]||e)}else m=m&&1===f.strides[r]&&o,g=g&&(0===r&&1===f.strides[r]||o);let i,c=!1;if(f.beginValid&&f.endValid?(i=f.end[r]-f.begin[r],c=!0):t?(i=1,c=!0):o&&n>=0&&(i=f.strides[r]<0?-n:n,c=!0),c){let e;e=0===i||i<0!==f.strides[r]<0?0:Math.trunc(i/f.strides[r])+(i%f.strides[r]!==0?1:0),b.push(e)}else b.push(-1)}for(let s=0;s<f.finalShapeGatherIndices.length;++s){const e=f.finalShapeGatherIndices[s];e>=0?v.push(b[e]):e===r&&v.push(1)}return{finalShapeSparse:v.filter(((e,t)=>f.finalShapeGatherIndices[t]!==r)),finalShape:v,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:f.begin,end:f.end,strides:f.strides}}function k(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}},6719:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,s.YT)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const o={logits:n},i={dim:t};return a.T2.runKernel(r.rFG,o,i)}})},9973:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({softplus_:function(e){const t={x:(0,s.YT)(e,"x","softplus")};return a.T2.runKernel(r.Fin,t)}})},3585:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({spaceToBatchND_:function(e,t,n){const i=(0,s.YT)(e,"x","spaceToBatchND");o.vA(i.rank>=1+t.length,(()=>"input rank ".concat(i.rank," should be > than [blockShape] ").concat(t.length))),o.vA(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),o.vA(i.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>"input spatial dimensions ".concat(i.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const c={x:i},l={blockShape:t,paddings:n};return a.T2.runKernel(r.A8B,c,l)}})},3062:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var a=n(2164),r=n(9554),s=n(1426);const o=(0,n(7892).op)({fft_:function(e){(0,s.vA)("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return a.T2.runKernel(r.rGP,t)}})},1405:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var a=n(2164),r=n(9554),s=n(1426);const o=(0,n(7892).op)({ifft_:function(e){(0,s.vA)("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return a.T2.runKernel(r.OAQ,t)}})},7307:(e,t,n)=>{"use strict";n.d(t,{g:()=>f});var a=n(6149),r=n(4429),s=n(1047),o=n(803),i=n(7892),c=n(9477),l=n(5583),u=n(7419),d=n(1997),h=n(463),p=n(1405);const f=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const a=(0,l.t)(e,[n,t]);i=(0,p.K)(a)}else{const f=[n,2*(t-1)],m=(0,l.t)((0,c.x)(e),[n,t]),g=(0,l.t)((0,s.n)(e),[n,t]),y=(0,u.B)((0,h.d)(m,[0,1],[n,t-2]),1),b=(0,o.l)((0,u.B)((0,h.d)(g,[0,1],[n,t-2]),1),(0,d.d)(-1)),v=(0,r.x)([m,y],1),x=(0,r.x)([g,b],1),w=(0,l.t)((0,a.f)(v,x),[f[0],f[1]]);i=(0,p.K)(w)}if(i=(0,c.x)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=(0,l.t)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},9486:(e,t,n)=>{"use strict";n.d(t,{z:()=>m});var a=n(1426),r=n(6149),s=n(4429),o=n(1047),i=n(7892),c=n(9477),l=n(5583),u=n(463),d=n(5181),h=n(4218),p=n(3290),f=n(3062);const m=(0,i.op)({rfft_:function(e,t){(0,a.vA)("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const a=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,m=(0,u.d)(e,a,r),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,m=(0,s.x)([e,(0,h.U)(a)],e.shape.length-1),n=t}else m=e;const g=(0,p.P)(m),y=(0,l.t)((0,r.f)(m,g),[i,n]),b=(0,f.h)(y),v=Math.floor(n/2)+1,x=(0,c.x)(b),w=(0,o.n)(b),k=(0,d.l)(x,[v,n-v],x.shape.length-1),S=(0,d.l)(w,[v,n-v],w.shape.length-1),T=m.shape.slice();return T[m.shape.length-1]=v,(0,l.t)((0,r.f)(k[0],S[0]),T)}})},5181:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o={x:(0,s.YT)(e,"x","split")},i={numOrSizeSplits:t,axis:n};return a.T2.runKernel(r.Blb,o,i)}})},191:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sqrt_:function(e){const t={x:(0,s.YT)(e,"x","sqrt","float32")};return a.T2.runKernel(r.dFH,t)}})},7738:(e,t,n)=>{"use strict";n.d(t,{E:()=>s});var a=n(2164),r=n(4148);const s=(0,n(7892).op)({square_:function(e){const t=(0,r.YT)(e,"x","square");return a.T2.runKernel("Square",{x:t},{})}})},208:(e,t,n)=>{"use strict";n.d(t,{P:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({squaredDifference_:function(e,t){let n=(0,o.YT)(e,"a","squaredDifference"),c=(0,o.YT)(t,"b","squaredDifference");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.Ddj,l,{})}})},613:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var a=n(4148),r=n(1426),s=n(7892),o=n(5583);const i=(0,s.op)({squeeze_:function(e,t){const n=(0,a.YT)(e,"x","squeeze","string_or_numeric");return(0,o.t)(n,(0,r.gx)(n.shape,t).newShape)}})},901:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.j1)(e,"tensors","stack","string_or_numeric");o.vA(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o.vA(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,c={axis:t};return a.T2.runKernel(r.mM$,i,c)}})},319:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","step")},o={alpha:t};return a.T2.runKernel(r.pnw,n,o)}})},1231:(e,t,n)=>{"use strict";n.d(t,{Y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({stridedSlice_:function(e,t,n,o){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const h={x:(0,s.YT)(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:o,beginMask:i,endMask:c,ellipsisMask:l,newAxisMask:u,shrinkAxisMask:d};return a.T2.runKernel(r.UcO,h,p)}})},7951:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({sub_:function(e,t){let n=(0,o.YT)(e,"a","sub"),i=(0,o.YT)(t,"b","sub");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.PbM,c)}})},7382:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(7794);const i=(0,n(7892).op)({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,s.YT)(e,"x","sum");"bool"===i.dtype&&(i=(0,o.w)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.T2.runKernel(r.WuN,c,l)}})},4894:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({tan_:function(e){const t={x:(0,s.YT)(e,"x","tan","float32")};return a.T2.runKernel(r.oFs,t)}})},6532:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({tanh_:function(e){const t={x:(0,s.YT)(e,"x","tanh","float32")};return a.T2.runKernel(r.iuW,t)}})},8032:(e,t,n)=>{"use strict";n.d(t,{O:()=>s});var a=n(4148),r=n(9914);function s(e,t,n){const s=(0,a.MZ)(e,n);return(0,r.Q)(e,t,s,n)}},5395:(e,t,n)=>{"use strict";n.d(t,{$:()=>o});var a=n(4148),r=n(1426),s=n(9914);function o(e,t,n){if((0,r.HO)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const o=(0,a.MZ)(e,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.Q)(e,t,o,n)}},9914:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var a=n(2164),r=n(8075),s=n(1426),o=n(8977);function i(e,t,n,i){if(null==i)i=(0,s.X$)(e);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,r.Nw)(e)||(0,r.Oj)(e)){if("float32"!==i&&"int32"!==i)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(i,"."));return a.T2.backend.createTensorFromGPUData(e,t||n,i)}if(!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.SA)(t);const e=(0,s.Ze)(t),a=(0,s.Ze)(n);(0,s.vA)(e===a,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a)));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==(0,s.Ze)(t.slice(r));(0,s.vA)(n[r]===t[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0),a.T2.makeTensor(e,t,i)}},3017:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({tile_:function(e,t){const n=(0,s.YT)(e,"x","tile","string_or_numeric");o.vA(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const i={x:n},c={reps:t};return a.T2.runKernel(r.FAs,i,c)}})},2765:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const o=(0,s.YT)(e,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>i)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(i,") ")+"but got ".concat(t));const c={x:o},l={k:t,sorted:n},[u,d]=a.T2.runKernel(r.TBb,c,l);return{values:u,indices:d}}})},2154:(e,t,n)=>{"use strict";n.d(t,{m:()=>p});var a=n(2164),r=n(8046),s=n(9554),o=n(4148),i=n(1426),c=n(6149),l=n(1047),u=n(1011),d=n(7892),h=n(9477);const p=(0,d.op)({transpose_:function(e,t,n){const d=(0,o.YT)(e,"x","transpose");if(null==t&&(t=d.shape.map(((e,t)=>t)).reverse()),i.vA(d.rank===t.length,(()=>"Error in transpose: rank of input ".concat(d.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{i.vA(e>=0&&e<d.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(d.rank-1)+" but got ".concat(t)))})),d.rank<=1)return d.clone();const p={x:d},f={perm:t};return"complex64"===d.dtype?(0,r.DZ)((()=>{let e=(0,h.x)(d),t=(0,l.n)(d);return e=a.T2.runKernel(s.wx0,{x:e},f),t=a.T2.runKernel(s.wx0,{x:t},f),n&&(t=(0,u.H)(t)),(0,c.f)(e,t)})):a.T2.runKernel(s.wx0,p,f)}})},9694:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","unique","string_or_numeric");(0,o.vA)(n.rank>0,(()=>"The input tensor must be at least 1D"));const i={x:n},c={axis:t},[l,u]=a.T2.runKernel(r.EwU,i,c);return{values:l,indices:u}}})},5149:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({unsortedSegmentSum_:function(e,t,n){const i=(0,s.YT)(e,"x","unsortedSegmentSum"),c=(0,s.YT)(t,"segmentIds","unsortedSegmentSum","int32");(0,o.vA)((0,o.E6)(n),(()=>"numSegments must be of dtype int"));const l={x:i,segmentIds:c},u={numSegments:n};return a.T2.runKernel(r.pPe,l,u)}})},3984:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","unstack","string_or_numeric");o.vA(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const i={value:n},c={axis:t};return a.T2.runKernel(r.dXR,i,c)}})},3986:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(4920),i=n(8805);const c=(0,n(7892).op)({where_:function(e,t,n){const c=(0,s.YT)(t,"a","where"),l=(0,s.YT)(n,"b","where"),u=(0,s.YT)(e,"condition","where","bool"),d=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(u.shape,c.shape),l.shape),h={condition:(0,o.h)(u,d),t:(0,o.h)(c,d),e:(0,o.h)(l,d)};return a.T2.runKernel(r.l6P,h)}})},4218:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var a=n(2164),r=n(1426),s=n(6149);function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,r.SA)(e),"complex64"===t){const t=o(e,"float32"),n=o(e,"float32");return(0,s.f)(t,n)}const n=(0,r.Ty)((0,r.Ze)(e),t);return a.T2.makeTensor(n,e,t)}},3290:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({zerosLike_:function(e){const t={x:(0,s.YT)(e,"x","zerosLike")};return a.T2.runKernel(r.xJ3,t)}})},5767:(e,t,n)=>{"use strict";function a(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{Y:()=>a})},9494:(e,t,n)=>{"use strict";n.d(t,{qY:()=>w,yl:()=>f,rT:()=>S,tp:()=>k,B4:()=>x,Q5:()=>v,qP:()=>b});var a=n(7926),r=n(1426);const s=20,o=3,i=7;function c(e,t,n,a){const s=(0,r.Ur)(t),o=function(e,t,n,a){const s=(0,r.Ze)(t),o=a[a.length-1],i=new Array(o).fill(0),c=t.length,u="complex64"===n?h(e):e;if(c>1)for(let r=0;r<s/o;r++){const e=r*o;for(let t=0;t<o;t++)i[t]=Math.max(i[t],l(u[e+t],0,n).length)}return i}(e,t,n,s),i=t.length,c=d(e,t,n,s,o),u=["Tensor"];return a&&(u.push("  dtype: ".concat(n)),u.push("  rank: ".concat(i)),u.push("  shape: [".concat(t,"]")),u.push("  values:")),u.push(c.map((e=>"    "+e)).join("\n")),u.join("\n")}function l(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(i))," + ")+"".concat(parseFloat(e[1].toFixed(i)),"j"):(0,r.Kg)(e)?"'".concat(e,"'"):"bool"===n?u(e):parseFloat(e.toFixed(i)).toString(),(0,r.av)(a,t)}function u(e){return 0===e?"false":"true"}function d(e,t,n,a,r){let i=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const c="complex64"===n?2:1,p=t[0],f=t.length;if(0===f){if("complex64"===n){return[l(h(e)[0],0,n)]}return"bool"===n?[u(e[0])]:[e[0].toString()]}if(1===f){if(p>s){const t=o*c;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((p-o)*c,p*c));return"complex64"===n&&(a=h(a),s=h(s)),["["+a.map(((e,t)=>l(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>l(e,r[p-o+t],n))).join(", ")+"]"]}return["["+("complex64"===n?h(e):Array.from(e)).map(((e,t)=>l(e,r[t],n))).join(", ")+"]"]}const m=t.slice(1),g=a.slice(1),y=a[0]*c,b=[];if(p>s){for(let t=0;t<o;t++){const a=t*y,s=a+y;b.push(...d(e.slice(a,s),m,n,g,r,!1))}b.push("...");for(let t=p-o;t<p;t++){const a=t*y,s=a+y;b.push(...d(e.slice(a,s),m,n,g,r,t===p-1))}}else for(let s=0;s<p;s++){const t=s*y,a=t+y;b.push(...d(e.slice(t,a),m,n,g,r,s===p-1))}const v=2===f?",":"";b[0]="["+(p>0?b[0]+v:"");for(let s=1;s<b.length-1;s++)b[s]=" "+b[s]+v;let x=",\n";for(let s=2;s<f;s++)x+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(i?"":x),b}function h(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var p=n(8977);class f{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=r.Ze(e),null!=n){const e=n.length;r.vA(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.Ab(t,this.size),this.strides=(0,r.Ur)(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),r.vA(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const s=this.locToIndex(n);this.values[s]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const s of t){if(s<0||s>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return m().makeTensor(this.values,this.shape,this.dtype)}}let m=null,g=null,y=null;function b(e){m=e}function v(e){g=e}function x(e){y=e}class w{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=r.Ze(e),this.strides=(0,r.Ur)(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return g.buffer(this.shape,this.dtype,e)}bufferSync(){return g.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,r.yw)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,r.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=m().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>p.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),m().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=m().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>p.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await m().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),m().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return g.print(this,e)}clone(){return this.throwIfDisposed(),g.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return c(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),g.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),m().makeVariable(this,e,t,n)}}function k(){return(0,a.m)("Tensor",(()=>w))}Object.defineProperty(w,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),k();class S extends w{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!r.r1(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));m().disposeTensor(this),this.dataId=e.dataId,m().incRef(this,null)}dispose(){m().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(S,Symbol.hasInstance,{value:e=>e instanceof w&&null!=e.assign&&e.assign instanceof Function})},8804:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>i,getTensorsInContainer:()=>l,isTensorInList:()=>c,makeTypesMatch:()=>o});var a=n(9494),r=n(8075),s=n(1426);function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,r.Tu)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,s.vA)(e.dtype===t.dtype,(()=>"The dtypes of the first(".concat(e.dtype,") and")+" second(".concat(t.dtype,") input must match")))}function c(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return u(e,t,new Set),t}function u(e,t,n){if(null==e)return;if(e instanceof a.qY)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!==typeof r)return;var r;const s=e;for(const a in s){const e=s[a];n.has(e)||(n.add(e),u(e,t,n))}}},4148:(e,t,n)=>{"use strict";n.d(t,{MZ:()=>l,YT:()=>h,j1:()=>p});var a=n(2164),r=n(5399),s=n(9494),o=n(8075),i=n(8977),c=n(1426);function l(e,t){let n=e;if((0,i.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,o.Oj)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,o.Nw)(e))return[e.buffer.size/(null==t?4:(0,c.jv)(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||(0,i.isTypedArray)(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&(0,r._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(e,a,[]),a}function u(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.isTypedArray)(e))return void(0,c.vA)(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));(0,c.vA)(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),(0,c.vA)(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const a=t.slice(1);for(let r=0;r<e.length;++r)u(e[r],a,n.concat(r))}function d(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function h(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof(0,s.tp)())return d(r,e.dtype,t,n),e;let o=(0,c.X$)(e);if("string"!==o&&["bool","int32","float32"].indexOf(r)>=0&&(o=r),d(r,o,t,n),null==e||!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const u=l(e,o);(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const h="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0);return a.T2.makeTensor(h,u,o)}function p(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map(((e,r)=>h(e,"".concat(t,"[").concat(r,"]"),n,a)))}},8075:(e,t,n)=>{"use strict";var a,r,s,o,i;n.d(t,{Nw:()=>h,Oj:()=>d,Tu:()=>l,ch:()=>u}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const c={float32:o,int32:r,bool:s,complex64:i};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return c[e][t]}function u(e){return l(e,"int32")}function d(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function h(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},8977:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>s.r1,arraysEqualWithNull:()=>s.e_,assert:()=>s.vA,assertNonNegativeIntegerDimensions:()=>s.SA,assertNonNull:()=>s.HO,assertShapesMatch:()=>s.O3,bytesFromStringArray:()=>s.SL,bytesPerElement:()=>s.jv,checkConversionForErrors:()=>s.nd,clamp:()=>s.qE,computeStrides:()=>s.Ur,convertBackendValuesAndArrayBuffer:()=>s.o2,createScalarValue:()=>x,createShuffledIndices:()=>s.P8,decodeString:()=>I,distSquared:()=>s.oO,encodeString:()=>T,fetch:()=>S,fingerPrint64:()=>v,flatten:()=>C,getArrayFromDType:()=>s.Ab,getTypedArrayFromDType:()=>s.ce,hasEncodingLoss:()=>s.BE,hexToLong:()=>c,indexToLoc:()=>s._k,inferDtype:()=>s.X$,inferFromImplicitShape:()=>s.XT,isBoolean:()=>s.Lm,isFunction:()=>s.Tn,isInt:()=>s.E6,isNumber:()=>s.Et,isPromise:()=>s.yL,isScalarShape:()=>s.Sf,isString:()=>s.Kg,isTypedArray:()=>N,isValidDtype:()=>s.xn,locToIndex:()=>s.sX,makeOnesTypedArray:()=>s.FZ,makeZerosNestedTypedArray:()=>s.c7,makeZerosTypedArray:()=>s.Ty,nearestDivisor:()=>s.lK,nearestLargerEven:()=>s.eV,now:()=>k,parseAxisParam:()=>s.Y6,randUniform:()=>s.so,repeatedTry:()=>s._q,rightPad:()=>s.av,shuffle:()=>s.k4,shuffleCombo:()=>s.a0,sizeFromShape:()=>s.Ze,sizeToSquarishShape:()=>s.gS,squeezeShape:()=>s.gx,sum:()=>s.cz,swap:()=>s.wg,tanh:()=>s.ym,toNestedArray:()=>s.yw,toTypedArray:()=>w});var a=n(5399),r=n(5767),s=n(1426),o=n(7353);const i=n.n(o)()||o;function c(e){return i.fromString(e,!0,16)}const l=c("c3a5c85c97cb3127"),u=c("b492b66fbe98f273"),d=c("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const a=e.slice(t,t+n);return i.fromBytes(Array.from(a),!0,!0)}function f(e,t){return p(e,t,8)}function m(e,t){return p(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function y(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function b(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=g(s.add(r).add(a),21);const o=r;return r=(r=r.add(t)).add(n),s=s.add(g(r,44)),[r.add(a),s.add(o)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,a)}function v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=d.add(2*t),a=f(e,0).add(d),r=f(e,t-8);return y(g(r,37).mul(n).add(a),g(a,25).add(r).mul(n),n)}if(t>=4){const n=d.add(2*t);return y(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return h(d.mul(n).xor(l.mul(a))).mul(d)}return d}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(u),r=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d);return y(g(a.add(r),43).add(g(s,30)).add(o),a.add(g(r.add(d),18)).add(s),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(d),r=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d),i=g(a.add(r),43).add(g(s,30)).add(o),c=y(i,a.add(g(r.add(d),18)).add(s),n),l=f(e,16).mul(n),u=f(e,24),h=i.add(f(e,t-32)).mul(n),p=c.add(f(e,t-24)).mul(n);return y(g(l.add(u),43).add(g(h,30)).add(p),l.add(g(u.add(a),18)).add(h),n)}(e,t);let a=n,r=n.mul(u).add(113),s=h(r.mul(d).add(113)).mul(d),o=[i.UZERO,i.UZERO],c=[i.UZERO,i.UZERO];a=a.mul(d).add(f(e,0));let p=0;const v=64*(t-1>>6),x=v+(t-1&63)-63;do{a=g(a.add(r).add(o[0]).add(f(e,p+8)),37).mul(u),r=g(r.add(o[1]).add(f(e,p+48)),42).mul(u),a=a.xor(c[1]),r=r.add(o[0]).add(f(e,p+40)),s=g(s.add(c[0]),33).mul(u),o=b(e,p,o[1].mul(u),a.add(c[0])),c=b(e,p+32,s.add(c[1]),r.add(f(e,p+16))),[s,a]=[a,s],p+=64}while(p!==v);const w=u.add(s.and(255).shl(1));return p=x,c[0]=c[0].add(t-1&63),o[0]=o[0].add(c[0]),c[0]=c[0].add(o[0]),a=g(a.add(r).add(o[0]).add(f(e,p+8)),37).mul(w),r=g(r.add(o[1]).add(f(e,p+48)),42).mul(w),a=a.xor(c[1].mul(9)),r=r.add(o[0].mul(9).add(f(e,p+40))),s=g(s.add(c[0]),33).mul(w),o=b(e,p,o[1].mul(w),a.add(c[0])),c=b(e,p+32,s.add(c[1]),r.add(f(e,p+16))),[s,a]=[a,s],y(y(o[0],c[0],w).add(h(r).mul(l)).add(s),y(o[1],c[1],w).add(a),w)}function x(e,t){return"string"===t?T(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=C(e)),(0,a._K)().getBool("DEBUG")&&s.nd(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function k(){return(0,a._K)().platform.now()}function S(e,t){return(0,a._K)().platform.fetch(e,t)}function T(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a._K)().platform.encode(e,t)}function I(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a._K)().platform.decode(e,t)}function N(e){return null!=(0,a._K)().platform.isTypedArray?(0,a._K)().platform.isTypedArray(e):(0,r.Y)(e)}function C(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||s.yL(e)||null==e||N(e)&&n)t.push(e);else if(Array.isArray(e)||N(e))for(let a=0;a<e.length;++a)C(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)C(e[r],t,n)}return t}},1426:(e,t,n)=>{"use strict";function a(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function r(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together "+"First array length was ".concat(e.length)+"Second array length was ".concat(t.length));let n=e.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,i(e,n,a),i(t,n,a)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2===0?e:e+1}function i(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function c(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function u(e,t){let n=0;for(let a=0;a<e.length;a++){const r=Number(e[a])-Number(t[a]);n+=r*r}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function h(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";d(y(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function p(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1===0}function v(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return a(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,s)=>{let o=0;const i=()=>{if(e())return void r();o++;const c=t(o);null!=n&&o>=n?s():null!=a?a(i,c):setTimeout(i,c)};i()}))}function T(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(s));a=s}else if(e[s]<0)throw Error("Shapes can not be < 0. Found ".concat(e[s]," at dim ").concat(s));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const r=e.slice();return r[a]=t/n,r}function I(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),d(e.every((e=>b(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function N(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:I(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function C(e,t){return E(e,t)}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function A(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}function _(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function R(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"===typeof e||e instanceof String}function L(e){return"boolean"===typeof e}function M(e){return"number"===typeof e}function z(e){return Array.isArray(e)?z(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":M(e)?"float32":O(e)?"string":L(e)?"bool":"float32"}function P(e){return!!(e&&e.constructor&&e.call&&e.apply)}function B(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function W(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function U(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=U(e+t*i,o,n,a)}return r}function V(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return U(0,e,t,n)}function G(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}function j(e,t){const n=Z(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function Z(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function K(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return V(e,new Float32Array(n));if("int32"===t)return V(e,new Int32Array(n));if("bool"===t)return V(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function H(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function Y(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function Q(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{Ab:()=>E,BE:()=>R,E6:()=>b,Et:()=>M,FZ:()=>j,HO:()=>p,Kg:()=>O,Lm:()=>L,O3:()=>h,P8:()=>w,SA:()=>H,SL:()=>D,Sf:()=>m,Tn:()=>P,Ty:()=>Z,Ur:()=>W,X$:()=>z,XT:()=>T,Y6:()=>I,Ze:()=>f,_k:()=>Y,_q:()=>S,a0:()=>r,av:()=>k,c7:()=>K,ce:()=>C,cz:()=>c,eV:()=>o,e_:()=>g,gS:()=>x,gx:()=>N,jv:()=>F,k4:()=>a,lK:()=>B,nd:()=>A,o2:()=>G,oO:()=>u,qE:()=>s,r1:()=>y,sX:()=>q,so:()=>l,vA:()=>d,wg:()=>i,xn:()=>_,yL:()=>Q,ym:()=>v,yw:()=>V})},7353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(I){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function o(e,t){var n,a,o;return t?(o=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=c(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=c(e,e<0?-1:0,!1),o&&(r[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?i(-e,t).neg():c(e%h|0,e/h|0,t)}function c(e,t,a){return new n(e,t,a)}n.fromInt=o,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(e.substring(1),t,n).neg();for(var r=i(l(n,8)),s=g,o=0;o<e.length;o+=8){var c=Math.min(8,e.length-o),d=parseInt(e.substring(o,o+c),n);if(c<8){var h=i(l(n,c));s=s.mul(h).add(i(d))}else s=(s=s.mul(r)).add(i(d))}return s.unsigned=t,s}function d(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?u(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=u,n.fromValue=d;var h=4294967296,p=h*h,f=p/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var v=o(1,!0);n.UONE=v;var x=o(-1);n.NEG_ONE=x;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=c(0,-2147483648,!1);n.MIN_VALUE=S;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},T.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=i(l(e,6),this.unsigned),s=this,o="";;){var c=s.div(r),u=(s.sub(c.mul(r)).toInt()>>>0).toString(e);if((s=c).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1===(1&this.low)},T.isEven=function(){return 0===(1&this.low)},T.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},T.neg=T.negate,T.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,u=0,h=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,h+=(p+=r+l)>>>16,u+=(h+=n+i)>>>16,u+=t+o,c((p&=65535)<<16|(f&=65535),(u&=65535)<<16|(h&=65535),this.unsigned)},T.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=d(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,l=e.high>>>16,u=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,v=0;return b+=(v+=o*p)>>>16,y+=(b+=s*p)>>>16,b&=65535,y+=(b+=o*h)>>>16,f+=(y+=r*p)>>>16,y&=65535,f+=(y+=s*h)>>>16,y&=65535,f+=(y+=o*u)>>>16,f+=n*p+r*h+s*u+o*l,c((b&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;s=y}else{if(this.eq(S))return e.eq(b)||e.eq(x)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(r=this.sub(e.mul(n)),s=n.add(r.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),u=o<=48?1:l(2,o-48),h=i(n),p=h.mul(e);p.isNegative()||p.gt(r);)p=(h=i(n-=u,this.unsigned)).mul(e);h.isZero()&&(h=b),s=s.add(h),r=r.sub(p)}return s},T.div=T.divide,T.modulo=function(e){return a(e)||(e=d(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return c(~this.low,~this.high,this.unsigned)},T.and=function(e){return a(e)||(e=d(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return a(e)||(e=d(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return a(e)||(e=d(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},2730:(e,t,n)=>{"use strict";var a=n(5043),r=n(8853);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function c(e,t){l(e,t),l(e+"Capture",t)}function l(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,a,r,s,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function v(e,t,n,a){var r=g.hasOwnProperty(t)?g[t]:null;(null!==r?0!==r.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!d.call(f,e)||!d.call(p,e)&&(h.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),T=Symbol.for("react.strict_mode"),I=Symbol.for("react.profiler"),N=Symbol.for("react.provider"),C=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),A=Symbol.for("react.suspense"),_=Symbol.for("react.suspense_list"),R=Symbol.for("react.memo"),F=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function L(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=O&&e[O]||e["@@iterator"])?e:null}var M,z=Object.assign;function P(e){if(void 0===M)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var B=!1;function W(e,t){if(!e||B)return"";B=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var a=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){a=l}e.call(t.prototype)}else{try{throw Error()}catch(l){a=l}e()}}catch(l){if(l&&a&&"string"===typeof l.stack){for(var r=l.stack.split("\n"),s=a.stack.split("\n"),o=r.length-1,i=s.length-1;1<=o&&0<=i&&r[o]!==s[i];)i--;for(;1<=o&&0<=i;o--,i--)if(r[o]!==s[i]){if(1!==o||1!==i)do{if(o--,0>--i||r[o]!==s[i]){var c="\n"+r[o].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=o&&0<=i);break}}}finally{B=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?P(e):""}function U(e){switch(e.tag){case 5:return P(e.type);case 16:return P("Lazy");case 13:return P("Suspense");case 19:return P("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 1:return e=W(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case I:return"Profiler";case T:return"StrictMode";case A:return"Suspense";case _:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case N:return(e._context.displayName||"Context")+".Provider";case E:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case R:return null!==(t=e.displayName||null)?t:V(e.type)||"Memo";case F:t=e._payload,e=e._init;try{return V(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(t);case 8:return t===T?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function j(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function Z(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=Z(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function H(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=Z(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function q(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Y(e,t){var n=t.checked;return z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Q(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=j(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function X(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function J(e,t){X(e,t);var n=j(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,j(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function $(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&q(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+j(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(te(n)){if(1<n.length)throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:j(n)}}function se(e,t){var n=j(t.value),a=j(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ce(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var le,ue,de=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((le=le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function he(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=me(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(s(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xe=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Te=null;function Ie(e){if(e=vr(e)){if("function"!==typeof ke)throw Error(s(280));var t=e.stateNode;t&&(t=wr(t),ke(e.stateNode,e.type,t))}}function Ne(e){Se?Te?Te.push(e):Te=[e]:Se=e}function Ce(){if(Se){var e=Se,t=Te;if(Te=Se=null,Ie(e),t)for(e=0;e<t.length;e++)Ie(t[e])}}function Ee(e,t){return e(t)}function Ae(){}var _e=!1;function Re(e,t,n){if(_e)return e(t,n);_e=!0;try{return Ee(e,t,n)}finally{_e=!1,(null!==Se||null!==Te)&&(Ae(),Ce())}}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var a=wr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(s(231,t,typeof n));return n}var De=!1;if(u)try{var Oe={};Object.defineProperty(Oe,"passive",{get:function(){De=!0}}),window.addEventListener("test",Oe,Oe),window.removeEventListener("test",Oe,Oe)}catch(ue){De=!1}function Le(e,t,n,a,r,s,o,i,c){var l=Array.prototype.slice.call(arguments,3);try{t.apply(n,l)}catch(u){this.onError(u)}}var Me=!1,ze=null,Pe=!1,Be=null,We={onError:function(e){Me=!0,ze=e}};function Ue(e,t,n,a,r,s,o,i,c){Me=!1,ze=null,Le.apply(We,arguments)}function Ve(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function je(e){if(Ve(e)!==e)throw Error(s(188))}function Ze(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ve(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var o=r.alternate;if(null===o){if(null!==(a=r.return)){n=a;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return je(r),e;if(o===a)return je(r),t;o=o.sibling}throw Error(s(188))}if(n.return!==a.return)n=r,a=o;else{for(var i=!1,c=r.child;c;){if(c===n){i=!0,n=r,a=o;break}if(c===a){i=!0,a=r,n=o;break}c=c.sibling}if(!i){for(c=o.child;c;){if(c===n){i=!0,n=o,a=r;break}if(c===a){i=!0,a=o,n=r;break}c=c.sibling}if(!i)throw Error(s(189))}}if(n.alternate!==a)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e))?Ke(e):null}function Ke(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ke(e);if(null!==t)return t;e=e.sibling}return null}var He=r.unstable_scheduleCallback,qe=r.unstable_cancelCallback,Ye=r.unstable_shouldYield,Qe=r.unstable_requestPaint,Xe=r.unstable_now,Je=r.unstable_getCurrentPriorityLevel,$e=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,at=r.unstable_IdlePriority,rt=null,st=null;var ot=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(it(e)/ct|0)|0},it=Math.log,ct=Math.LN2;var lt=64,ut=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ht(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,r=e.suspendedLanes,s=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~r;0!==i?a=dt(i):0!==(s&=o)&&(a=dt(s))}else 0!==(o=n&~r)?a=dt(o):0!==s&&(a=dt(s));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&r)&&((r=a&-a)>=(s=t&-t)||16===r&&0!==(4194240&s)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-ot(t)),a|=e[n],t&=~r;return a}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=lt;return 0===(4194240&(lt<<=1))&&(lt=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-ot(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}var vt=0;function xt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,kt,St,Tt,It,Nt=!1,Ct=[],Et=null,At=null,_t=null,Rt=new Map,Ft=new Map,Dt=[],Ot="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Lt(e,t){switch(e){case"focusin":case"focusout":Et=null;break;case"dragenter":case"dragleave":At=null;break;case"mouseover":case"mouseout":_t=null;break;case"pointerover":case"pointerout":Rt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ft.delete(t.pointerId)}}function Mt(e,t,n,a,r,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:s,targetContainers:[r]},null!==t&&(null!==(t=vr(t))&&kt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function zt(e){var t=br(e.target);if(null!==t){var n=Ve(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void It(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Pt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=vr(n))&&kt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);xe=a,n.target.dispatchEvent(a),xe=null,t.shift()}return!0}function Bt(e,t,n){Pt(e)&&n.delete(t)}function Wt(){Nt=!1,null!==Et&&Pt(Et)&&(Et=null),null!==At&&Pt(At)&&(At=null),null!==_t&&Pt(_t)&&(_t=null),Rt.forEach(Bt),Ft.forEach(Bt)}function Ut(e,t){e.blockedOn===t&&(e.blockedOn=null,Nt||(Nt=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Wt)))}function Vt(e){function t(t){return Ut(t,e)}if(0<Ct.length){Ut(Ct[0],e);for(var n=1;n<Ct.length;n++){var a=Ct[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==Et&&Ut(Et,e),null!==At&&Ut(At,e),null!==_t&&Ut(_t,e),Rt.forEach(t),Ft.forEach(t),n=0;n<Dt.length;n++)(a=Dt[n]).blockedOn===e&&(a.blockedOn=null);for(;0<Dt.length&&null===(n=Dt[0]).blockedOn;)zt(n),null===n.blockedOn&&Dt.shift()}var Gt=x.ReactCurrentBatchConfig,jt=!0;function Zt(e,t,n,a){var r=vt,s=Gt.transition;Gt.transition=null;try{vt=1,Ht(e,t,n,a)}finally{vt=r,Gt.transition=s}}function Kt(e,t,n,a){var r=vt,s=Gt.transition;Gt.transition=null;try{vt=4,Ht(e,t,n,a)}finally{vt=r,Gt.transition=s}}function Ht(e,t,n,a){if(jt){var r=Yt(e,t,n,a);if(null===r)ja(e,t,a,qt,n),Lt(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return Et=Mt(Et,e,t,n,a,r),!0;case"dragenter":return At=Mt(At,e,t,n,a,r),!0;case"mouseover":return _t=Mt(_t,e,t,n,a,r),!0;case"pointerover":var s=r.pointerId;return Rt.set(s,Mt(Rt.get(s)||null,e,t,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,Ft.set(s,Mt(Ft.get(s)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(Lt(e,a),4&t&&-1<Ot.indexOf(e)){for(;null!==r;){var s=vr(r);if(null!==s&&wt(s),null===(s=Yt(e,t,n,a))&&ja(e,t,a,qt,n),s===r)break;r=s}null!==r&&a.stopPropagation()}else ja(e,t,a,null,n)}}var qt=null;function Yt(e,t,n,a){if(qt=null,null!==(e=br(e=we(a))))if(null===(t=Ve(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return qt=e,null}function Qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case $e:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Xt=null,Jt=null,$t=null;function en(){if($t)return $t;var e,t,n=Jt,a=n.length,r="value"in Xt?Xt.value:Xt.textContent,s=r.length;for(e=0;e<a&&n[e]===r[e];e++);var o=a-e;for(t=1;t<=o&&n[a-t]===r[s-t];t++);return $t=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,a,r,s){for(var o in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(r):r[o]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var sn,on,cn,ln={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=rn(ln),dn=z({},ln,{view:0,detail:0}),hn=rn(dn),pn=z({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:In,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(sn=e.screenX-cn.screenX,on=e.screenY-cn.screenY):on=sn=0,cn=e),sn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=rn(pn),mn=rn(z({},pn,{dataTransfer:0})),gn=rn(z({},dn,{relatedTarget:0})),yn=rn(z({},ln,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=z({},ln,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=rn(bn),xn=rn(z({},ln,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Tn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function In(){return Tn}var Nn=z({},dn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:In,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Cn=rn(Nn),En=rn(z({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),An=rn(z({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:In})),_n=rn(z({},ln,{propertyName:0,elapsedTime:0,pseudoElement:0})),Rn=z({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Fn=rn(Rn),Dn=[9,13,27,32],On=u&&"CompositionEvent"in window,Ln=null;u&&"documentMode"in document&&(Ln=document.documentMode);var Mn=u&&"TextEvent"in window&&!Ln,zn=u&&(!On||Ln&&8<Ln&&11>=Ln),Pn=String.fromCharCode(32),Bn=!1;function Wn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Vn=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function jn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function Zn(e,t,n,a){Ne(a),0<(t=Ka(t,"onChange")).length&&(n=new un("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var Kn=null,Hn=null;function qn(e){Pa(e,0)}function Yn(e){if(H(xr(e)))return e}function Qn(e,t){if("change"===e)return t}var Xn=!1;if(u){var Jn;if(u){var $n="oninput"in document;if(!$n){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),$n="function"===typeof ea.oninput}Jn=$n}else Jn=!1;Xn=Jn&&(!document.documentMode||9<document.documentMode)}function ta(){Kn&&(Kn.detachEvent("onpropertychange",na),Hn=Kn=null)}function na(e){if("value"===e.propertyName&&Yn(Hn)){var t=[];Zn(t,Hn,e,we(e)),Re(qn,t)}}function aa(e,t,n){"focusin"===e?(ta(),Hn=n,(Kn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function ra(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn(Hn)}function sa(e,t){if("click"===e)return Yn(t)}function oa(e,t){if("input"===e||"change"===e)return Yn(t)}var ia="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function ca(e,t){if(ia(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!d.call(t,r)||!ia(e[r],t[r]))return!1}return!0}function la(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ua(e,t){var n,a=la(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=la(a)}}function da(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?da(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function ha(){for(var e=window,t=q();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=q((e=t.contentWindow).document)}return t}function pa(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fa(e){var t=ha(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&da(n.ownerDocument.documentElement,n)){if(null!==a&&pa(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,s=Math.min(a.start,r);a=void 0===a.end?s:Math.min(a.end,r),!e.extend&&s>a&&(r=a,a=s,s=r),r=ua(n,s);var o=ua(n,a);r&&o&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),s>a?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ma=u&&"documentMode"in document&&11>=document.documentMode,ga=null,ya=null,ba=null,va=!1;function xa(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;va||null==ga||ga!==q(a)||("selectionStart"in(a=ga)&&pa(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ba&&ca(ba,a)||(ba=a,0<(a=Ka(ya,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function wa(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var ka={animationend:wa("Animation","AnimationEnd"),animationiteration:wa("Animation","AnimationIteration"),animationstart:wa("Animation","AnimationStart"),transitionend:wa("Transition","TransitionEnd")},Sa={},Ta={};function Ia(e){if(Sa[e])return Sa[e];if(!ka[e])return e;var t,n=ka[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ta)return Sa[e]=n[t];return e}u&&(Ta=document.createElement("div").style,"AnimationEvent"in window||(delete ka.animationend.animation,delete ka.animationiteration.animation,delete ka.animationstart.animation),"TransitionEvent"in window||delete ka.transitionend.transition);var Na=Ia("animationend"),Ca=Ia("animationiteration"),Ea=Ia("animationstart"),Aa=Ia("transitionend"),_a=new Map,Ra="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Fa(e,t){_a.set(e,t),c(t,[e])}for(var Da=0;Da<Ra.length;Da++){var Oa=Ra[Da];Fa(Oa.toLowerCase(),"on"+(Oa[0].toUpperCase()+Oa.slice(1)))}Fa(Na,"onAnimationEnd"),Fa(Ca,"onAnimationIteration"),Fa(Ea,"onAnimationStart"),Fa("dblclick","onDoubleClick"),Fa("focusin","onFocus"),Fa("focusout","onBlur"),Fa(Aa,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var La="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ma=new Set("cancel close invalid load scroll toggle".split(" ").concat(La));function za(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,o,i,c,l){if(Ue.apply(this,arguments),Me){if(!Me)throw Error(s(198));var u=ze;Me=!1,ze=null,Pe||(Pe=!0,Be=u)}}(a,t,void 0,e),e.currentTarget=null}function Pa(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var s=void 0;if(t)for(var o=a.length-1;0<=o;o--){var i=a[o],c=i.instance,l=i.currentTarget;if(i=i.listener,c!==s&&r.isPropagationStopped())break e;za(r,i,l),s=c}else for(o=0;o<a.length;o++){if(c=(i=a[o]).instance,l=i.currentTarget,i=i.listener,c!==s&&r.isPropagationStopped())break e;za(r,i,l),s=c}}}if(Pe)throw e=Be,Pe=!1,Be=null,e}function Ba(e,t){var n=t[mr];void 0===n&&(n=t[mr]=new Set);var a=e+"__bubble";n.has(a)||(Ga(t,e,2,!1),n.add(a))}function Wa(e,t,n){var a=0;t&&(a|=4),Ga(n,e,a,t)}var Ua="_reactListening"+Math.random().toString(36).slice(2);function Va(e){if(!e[Ua]){e[Ua]=!0,o.forEach((function(t){"selectionchange"!==t&&(Ma.has(t)||Wa(t,!1,e),Wa(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Ua]||(t[Ua]=!0,Wa("selectionchange",!1,t))}}function Ga(e,t,n,a){switch(Qt(t)){case 1:var r=Zt;break;case 4:r=Kt;break;default:r=Ht}n=r.bind(null,t,n,e),r=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function ja(e,t,n,a,r){var s=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var o=a.tag;if(3===o||4===o){var i=a.stateNode.containerInfo;if(i===r||8===i.nodeType&&i.parentNode===r)break;if(4===o)for(o=a.return;null!==o;){var c=o.tag;if((3===c||4===c)&&((c=o.stateNode.containerInfo)===r||8===c.nodeType&&c.parentNode===r))return;o=o.return}for(;null!==i;){if(null===(o=br(i)))return;if(5===(c=o.tag)||6===c){a=s=o;continue e}i=i.parentNode}}a=a.return}Re((function(){var a=s,r=we(n),o=[];e:{var i=_a.get(e);if(void 0!==i){var c=un,l=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":c=Cn;break;case"focusin":l="focus",c=gn;break;case"focusout":l="blur",c=gn;break;case"beforeblur":case"afterblur":c=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=An;break;case Na:case Ca:case Ea:c=yn;break;case Aa:c=_n;break;case"scroll":c=hn;break;case"wheel":c=Fn;break;case"copy":case"cut":case"paste":c=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=En}var u=0!==(4&t),d=!u&&"scroll"===e,h=u?null!==i?i+"Capture":null:i;u=[];for(var p,f=a;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==h&&(null!=(m=Fe(f,h))&&u.push(Za(f,m,p)))),d)break;f=f.return}0<u.length&&(i=new c(i,l,null,n,r),o.push({event:i,listeners:u}))}}if(0===(7&t)){if(c="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===xe||!(l=n.relatedTarget||n.fromElement)||!br(l)&&!l[fr])&&(c||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,c?(c=a,null!==(l=(l=n.relatedTarget||n.toElement)?br(l):null)&&(l!==(d=Ve(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(c=null,l=a),c!==l)){if(u=fn,m="onMouseLeave",h="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(u=En,m="onPointerLeave",h="onPointerEnter",f="pointer"),d=null==c?i:xr(c),p=null==l?i:xr(l),(i=new u(m,f+"leave",c,n,r)).target=d,i.relatedTarget=p,m=null,br(r)===a&&((u=new u(h,f+"enter",l,n,r)).target=p,u.relatedTarget=d,m=u),d=m,c&&l)e:{for(h=l,f=0,p=u=c;p;p=Ha(p))f++;for(p=0,m=h;m;m=Ha(m))p++;for(;0<f-p;)u=Ha(u),f--;for(;0<p-f;)h=Ha(h),p--;for(;f--;){if(u===h||null!==h&&u===h.alternate)break e;u=Ha(u),h=Ha(h)}u=null}else u=null;null!==c&&qa(o,i,c,u,!1),null!==l&&null!==d&&qa(o,d,l,u,!0)}if("select"===(c=(i=a?xr(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===c&&"file"===i.type)var g=Qn;else if(jn(i))if(Xn)g=oa;else{g=ra;var y=aa}else(c=i.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=sa);switch(g&&(g=g(e,a))?Zn(o,g,n,r):(y&&y(e,i,a),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=a?xr(a):window,e){case"focusin":(jn(y)||"true"===y.contentEditable)&&(ga=y,ya=a,ba=null);break;case"focusout":ba=ya=ga=null;break;case"mousedown":va=!0;break;case"contextmenu":case"mouseup":case"dragend":va=!1,xa(o,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":xa(o,n,r)}var b;if(On)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Vn?Wn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(zn&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==v?"onCompositionEnd"===v&&Vn&&(b=en()):(Jt="value"in(Xt=r)?Xt.value:Xt.textContent,Vn=!0)),0<(y=Ka(a,v)).length&&(v=new xn(v,e,null,n,r),o.push({event:v,listeners:y}),b?v.data=b:null!==(b=Un(n))&&(v.data=b))),(b=Mn?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(Bn=!0,Pn);case"textInput":return(e=t.data)===Pn&&Bn?null:e;default:return null}}(e,n):function(e,t){if(Vn)return"compositionend"===e||!On&&Wn(e,t)?(e=en(),$t=Jt=Xt=null,Vn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return zn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=Ka(a,"onBeforeInput")).length&&(r=new xn("onBeforeInput","beforeinput",null,n,r),o.push({event:r,listeners:a}),r.data=b))}Pa(o,t)}))}function Za(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Ka(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,s=r.stateNode;5===r.tag&&null!==s&&(r=s,null!=(s=Fe(e,n))&&a.unshift(Za(e,s,r)),null!=(s=Fe(e,t))&&a.push(Za(e,s,r))),e=e.return}return a}function Ha(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function qa(e,t,n,a,r){for(var s=t._reactName,o=[];null!==n&&n!==a;){var i=n,c=i.alternate,l=i.stateNode;if(null!==c&&c===a)break;5===i.tag&&null!==l&&(i=l,r?null!=(c=Fe(n,s))&&o.unshift(Za(n,c,i)):r||null!=(c=Fe(n,s))&&o.push(Za(n,c,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Ya=/\r\n?/g,Qa=/\u0000|\uFFFD/g;function Xa(e){return("string"===typeof e?e:""+e).replace(Ya,"\n").replace(Qa,"")}function Ja(e,t,n){if(t=Xa(t),Xa(e)!==t&&n)throw Error(s(425))}function $a(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,sr="function"===typeof Promise?Promise:void 0,or="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof sr?function(e){return sr.resolve(null).then(e).catch(ir)}:ar;function ir(e){setTimeout((function(){throw e}))}function cr(e,t){var n=t,a=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return e.removeChild(r),void Vt(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Vt(t)}function lr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ur(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var dr=Math.random().toString(36).slice(2),hr="__reactFiber$"+dr,pr="__reactProps$"+dr,fr="__reactContainer$"+dr,mr="__reactEvents$"+dr,gr="__reactListeners$"+dr,yr="__reactHandles$"+dr;function br(e){var t=e[hr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fr]||n[hr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ur(e);null!==e;){if(n=e[hr])return n;e=ur(e)}return t}n=(e=n).parentNode}return null}function vr(e){return!(e=e[hr]||e[fr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function xr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function wr(e){return e[pr]||null}var kr=[],Sr=-1;function Tr(e){return{current:e}}function Ir(e){0>Sr||(e.current=kr[Sr],kr[Sr]=null,Sr--)}function Nr(e,t){Sr++,kr[Sr]=e.current,e.current=t}var Cr={},Er=Tr(Cr),Ar=Tr(!1),_r=Cr;function Rr(e,t){var n=e.type.contextTypes;if(!n)return Cr;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,s={};for(r in n)s[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Fr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Dr(){Ir(Ar),Ir(Er)}function Or(e,t,n){if(Er.current!==Cr)throw Error(s(168));Nr(Er,t),Nr(Ar,n)}function Lr(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in t))throw Error(s(108,G(e)||"Unknown",r));return z({},n,a)}function Mr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Cr,_r=Er.current,Nr(Er,e),Nr(Ar,Ar.current),!0}function zr(e,t,n){var a=e.stateNode;if(!a)throw Error(s(169));n?(e=Lr(e,t,_r),a.__reactInternalMemoizedMergedChildContext=e,Ir(Ar),Ir(Er),Nr(Er,e)):Ir(Ar),Nr(Ar,n)}var Pr=null,Br=!1,Wr=!1;function Ur(e){null===Pr?Pr=[e]:Pr.push(e)}function Vr(){if(!Wr&&null!==Pr){Wr=!0;var e=0,t=vt;try{var n=Pr;for(vt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}Pr=null,Br=!1}catch(r){throw null!==Pr&&(Pr=Pr.slice(e+1)),He($e,Vr),r}finally{vt=t,Wr=!1}}return null}var Gr=[],jr=0,Zr=null,Kr=0,Hr=[],qr=0,Yr=null,Qr=1,Xr="";function Jr(e,t){Gr[jr++]=Kr,Gr[jr++]=Zr,Zr=e,Kr=t}function $r(e,t,n){Hr[qr++]=Qr,Hr[qr++]=Xr,Hr[qr++]=Yr,Yr=e;var a=Qr;e=Xr;var r=32-ot(a)-1;a&=~(1<<r),n+=1;var s=32-ot(t)+r;if(30<s){var o=r-r%5;s=(a&(1<<o)-1).toString(32),a>>=o,r-=o,Qr=1<<32-ot(t)+r|n<<r|a,Xr=s+e}else Qr=1<<s|n<<r|a,Xr=e}function es(e){null!==e.return&&(Jr(e,1),$r(e,1,0))}function ts(e){for(;e===Zr;)Zr=Gr[--jr],Gr[jr]=null,Kr=Gr[--jr],Gr[jr]=null;for(;e===Yr;)Yr=Hr[--qr],Hr[qr]=null,Xr=Hr[--qr],Hr[qr]=null,Qr=Hr[--qr],Hr[qr]=null}var ns=null,as=null,rs=!1,ss=null;function os(e,t){var n=Fl(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function is(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ns=e,as=lr(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ns=e,as=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Yr?{id:Qr,overflow:Xr}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Fl(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ns=e,as=null,!0);default:return!1}}function cs(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ls(e){if(rs){var t=as;if(t){var n=t;if(!is(e,t)){if(cs(e))throw Error(s(418));t=lr(n.nextSibling);var a=ns;t&&is(e,t)?os(a,n):(e.flags=-4097&e.flags|2,rs=!1,ns=e)}}else{if(cs(e))throw Error(s(418));e.flags=-4097&e.flags|2,rs=!1,ns=e}}}function us(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ns=e}function ds(e){if(e!==ns)return!1;if(!rs)return us(e),rs=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=as)){if(cs(e))throw hs(),Error(s(418));for(;t;)os(e,t),t=lr(t.nextSibling)}if(us(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){as=lr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}as=null}}else as=ns?lr(e.stateNode.nextSibling):null;return!0}function hs(){for(var e=as;e;)e=lr(e.nextSibling)}function ps(){as=ns=null,rs=!1}function fs(e){null===ss?ss=[e]:ss.push(e)}var ms=x.ReactCurrentBatchConfig;function gs(e,t){if(e&&e.defaultProps){for(var n in t=z({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var ys=Tr(null),bs=null,vs=null,xs=null;function ws(){xs=vs=bs=null}function ks(e){var t=ys.current;Ir(ys),e._currentValue=t}function Ss(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function Ts(e,t){bs=e,xs=vs=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(xi=!0),e.firstContext=null)}function Is(e){var t=e._currentValue;if(xs!==e)if(e={context:e,memoizedValue:t,next:null},null===vs){if(null===bs)throw Error(s(308));vs=e,bs.dependencies={lanes:0,firstContext:e}}else vs=vs.next=e;return t}var Ns=null;function Cs(e){null===Ns?Ns=[e]:Ns.push(e)}function Es(e,t,n,a){var r=t.interleaved;return null===r?(n.next=n,Cs(t)):(n.next=r.next,r.next=n),t.interleaved=n,As(e,a)}function As(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var _s=!1;function Rs(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Fs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ds(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Os(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&Ac)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,As(e,n)}return null===(r=a.interleaved)?(t.next=t,Cs(a)):(t.next=r.next,r.next=t),a.interleaved=t,As(e,n)}function Ls(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Ms(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?r=s=o:s=s.next=o,n=n.next}while(null!==n);null===s?r=s=t:s=s.next=t}else r=s=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:s,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function zs(e,t,n,a){var r=e.updateQueue;_s=!1;var s=r.firstBaseUpdate,o=r.lastBaseUpdate,i=r.shared.pending;if(null!==i){r.shared.pending=null;var c=i,l=c.next;c.next=null,null===o?s=l:o.next=l,o=c;var u=e.alternate;null!==u&&((i=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===i?u.firstBaseUpdate=l:i.next=l,u.lastBaseUpdate=c))}if(null!==s){var d=r.baseState;for(o=0,u=l=c=null,i=s;;){var h=i.lane,p=i.eventTime;if((a&h)===h){null!==u&&(u=u.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(h=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){d=f.call(p,d,h);break e}d=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(h="function"===typeof(f=m.payload)?f.call(p,d,h):f)||void 0===h)break e;d=z({},d,h);break e;case 2:_s=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(h=r.effects)?r.effects=[i]:h.push(i))}else p={eventTime:p,lane:h,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===u?(l=u=p,c=d):u=u.next=p,o|=h;if(null===(i=i.next)){if(null===(i=r.shared.pending))break;i=(h=i).next,h.next=null,r.lastBaseUpdate=h,r.shared.pending=null}}if(null===u&&(c=d),r.baseState=c,r.firstBaseUpdate=l,r.lastBaseUpdate=u,null!==(t=r.shared.interleaved)){r=t;do{o|=r.lane,r=r.next}while(r!==t)}else null===s&&(r.shared.lanes=0);zc|=o,e.lanes=o,e.memoizedState=d}}function Ps(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(s(191,r));r.call(a)}}}var Bs=(new a.Component).refs;function Ws(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:z({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Us={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=tl(),r=nl(e),s=Ds(a,r);s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Os(e,s,r))&&(al(t,e,r,a),Ls(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=tl(),r=nl(e),s=Ds(a,r);s.tag=1,s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Os(e,s,r))&&(al(t,e,r,a),Ls(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=tl(),a=nl(e),r=Ds(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=Os(e,r,a))&&(al(t,e,a,n),Ls(t,e,a))}};function Vs(e,t,n,a,r,s,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,s,o):!t.prototype||!t.prototype.isPureReactComponent||(!ca(n,a)||!ca(r,s))}function Gs(e,t,n){var a=!1,r=Cr,s=t.contextType;return"object"===typeof s&&null!==s?s=Is(s):(r=Fr(t)?_r:Er.current,s=(a=null!==(a=t.contextTypes)&&void 0!==a)?Rr(e,r):Cr),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Us,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=s),t}function js(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&Us.enqueueReplaceState(t,t.state,null)}function Zs(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs=Bs,Rs(e);var s=t.contextType;"object"===typeof s&&null!==s?r.context=Is(s):(s=Fr(t)?_r:Er.current,r.context=Rr(e,s)),r.state=e.memoizedState,"function"===typeof(s=t.getDerivedStateFromProps)&&(Ws(e,t,s,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&Us.enqueueReplaceState(r,r.state,null),zs(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function Ks(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var a=n.stateNode}if(!a)throw Error(s(147,e));var r=a,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;t===Bs&&(t=r.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function Hs(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function qs(e){return(0,e._init)(e._payload)}function Ys(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=Ol(e,t)).index=0,e.sibling=null,e}function o(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function c(e,t,n,a){return null===t||6!==t.tag?((t=Pl(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function l(e,t,n,a){var s=n.type;return s===S?d(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===F&&qs(s)===t.type)?((a=r(t,n.props)).ref=Ks(e,t,n),a.return=e,a):((a=Ll(n.type,n.key,n.props,null,e.mode,a)).ref=Ks(e,t,n),a.return=e,a)}function u(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Bl(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function d(e,t,n,a,s){return null===t||7!==t.tag?((t=Ml(n,e.mode,a,s)).return=e,t):((t=r(t,n)).return=e,t)}function h(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Pl(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Ll(t.type,t.key,t.props,null,e.mode,n)).ref=Ks(e,null,t),n.return=e,n;case k:return(t=Bl(t,e.mode,n)).return=e,t;case F:return h(e,(0,t._init)(t._payload),n)}if(te(t)||L(t))return(t=Ml(t,e.mode,n,null)).return=e,t;Hs(e,t)}return null}function p(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:c(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===r?l(e,t,n,a):null;case k:return n.key===r?u(e,t,n,a):null;case F:return p(e,t,(r=n._init)(n._payload),a)}if(te(n)||L(n))return null!==r?null:d(e,t,n,a,null);Hs(e,n)}return null}function f(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return c(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case w:return l(t,e=e.get(null===a.key?n:a.key)||null,a,r);case k:return u(t,e=e.get(null===a.key?n:a.key)||null,a,r);case F:return f(e,t,n,(0,a._init)(a._payload),r)}if(te(a)||L(a))return d(t,e=e.get(n)||null,a,r,null);Hs(t,a)}return null}function m(r,s,i,c){for(var l=null,u=null,d=s,m=s=0,g=null;null!==d&&m<i.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var y=p(r,d,i[m],c);if(null===y){null===d&&(d=g);break}e&&d&&null===y.alternate&&t(r,d),s=o(y,s,m),null===u?l=y:u.sibling=y,u=y,d=g}if(m===i.length)return n(r,d),rs&&Jr(r,m),l;if(null===d){for(;m<i.length;m++)null!==(d=h(r,i[m],c))&&(s=o(d,s,m),null===u?l=d:u.sibling=d,u=d);return rs&&Jr(r,m),l}for(d=a(r,d);m<i.length;m++)null!==(g=f(d,r,m,i[m],c))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),s=o(g,s,m),null===u?l=g:u.sibling=g,u=g);return e&&d.forEach((function(e){return t(r,e)})),rs&&Jr(r,m),l}function g(r,i,c,l){var u=L(c);if("function"!==typeof u)throw Error(s(150));if(null==(c=u.call(c)))throw Error(s(151));for(var d=u=null,m=i,g=i=0,y=null,b=c.next();null!==m&&!b.done;g++,b=c.next()){m.index>g?(y=m,m=null):y=m.sibling;var v=p(r,m,b.value,l);if(null===v){null===m&&(m=y);break}e&&m&&null===v.alternate&&t(r,m),i=o(v,i,g),null===d?u=v:d.sibling=v,d=v,m=y}if(b.done)return n(r,m),rs&&Jr(r,g),u;if(null===m){for(;!b.done;g++,b=c.next())null!==(b=h(r,b.value,l))&&(i=o(b,i,g),null===d?u=b:d.sibling=b,d=b);return rs&&Jr(r,g),u}for(m=a(r,m);!b.done;g++,b=c.next())null!==(b=f(m,r,g,b.value,l))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=o(b,i,g),null===d?u=b:d.sibling=b,d=b);return e&&m.forEach((function(e){return t(r,e)})),rs&&Jr(r,g),u}return function e(a,s,o,c){if("object"===typeof o&&null!==o&&o.type===S&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case w:e:{for(var l=o.key,u=s;null!==u;){if(u.key===l){if((l=o.type)===S){if(7===u.tag){n(a,u.sibling),(s=r(u,o.props.children)).return=a,a=s;break e}}else if(u.elementType===l||"object"===typeof l&&null!==l&&l.$$typeof===F&&qs(l)===u.type){n(a,u.sibling),(s=r(u,o.props)).ref=Ks(a,u,o),s.return=a,a=s;break e}n(a,u);break}t(a,u),u=u.sibling}o.type===S?((s=Ml(o.props.children,a.mode,c,o.key)).return=a,a=s):((c=Ll(o.type,o.key,o.props,null,a.mode,c)).ref=Ks(a,s,o),c.return=a,a=c)}return i(a);case k:e:{for(u=o.key;null!==s;){if(s.key===u){if(4===s.tag&&s.stateNode.containerInfo===o.containerInfo&&s.stateNode.implementation===o.implementation){n(a,s.sibling),(s=r(s,o.children||[])).return=a,a=s;break e}n(a,s);break}t(a,s),s=s.sibling}(s=Bl(o,a.mode,c)).return=a,a=s}return i(a);case F:return e(a,s,(u=o._init)(o._payload),c)}if(te(o))return m(a,s,o,c);if(L(o))return g(a,s,o,c);Hs(a,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==s&&6===s.tag?(n(a,s.sibling),(s=r(s,o)).return=a,a=s):(n(a,s),(s=Pl(o,a.mode,c)).return=a,a=s),i(a)):n(a,s)}}var Qs=Ys(!0),Xs=Ys(!1),Js={},$s=Tr(Js),eo=Tr(Js),to=Tr(Js);function no(e){if(e===Js)throw Error(s(174));return e}function ao(e,t){switch(Nr(to,t),Nr(eo,e),Nr($s,Js),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ce(null,"");break;default:t=ce(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ir($s),Nr($s,t)}function ro(){Ir($s),Ir(eo),Ir(to)}function so(e){no(to.current);var t=no($s.current),n=ce(t,e.type);t!==n&&(Nr(eo,e),Nr($s,n))}function oo(e){eo.current===e&&(Ir($s),Ir(eo))}var io=Tr(0);function co(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var lo=[];function uo(){for(var e=0;e<lo.length;e++)lo[e]._workInProgressVersionPrimary=null;lo.length=0}var ho=x.ReactCurrentDispatcher,po=x.ReactCurrentBatchConfig,fo=0,mo=null,go=null,yo=null,bo=!1,vo=!1,xo=0,wo=0;function ko(){throw Error(s(321))}function So(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ia(e[n],t[n]))return!1;return!0}function To(e,t,n,a,r,o){if(fo=o,mo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ho.current=null===e||null===e.memoizedState?ii:ci,e=n(a,r),vo){o=0;do{if(vo=!1,xo=0,25<=o)throw Error(s(301));o+=1,yo=go=null,t.updateQueue=null,ho.current=li,e=n(a,r)}while(vo)}if(ho.current=oi,t=null!==go&&null!==go.next,fo=0,yo=go=mo=null,bo=!1,t)throw Error(s(300));return e}function Io(){var e=0!==xo;return xo=0,e}function No(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===yo?mo.memoizedState=yo=e:yo=yo.next=e,yo}function Co(){if(null===go){var e=mo.alternate;e=null!==e?e.memoizedState:null}else e=go.next;var t=null===yo?mo.memoizedState:yo.next;if(null!==t)yo=t,go=e;else{if(null===e)throw Error(s(310));e={memoizedState:(go=e).memoizedState,baseState:go.baseState,baseQueue:go.baseQueue,queue:go.queue,next:null},null===yo?mo.memoizedState=yo=e:yo=yo.next=e}return yo}function Eo(e,t){return"function"===typeof t?t(e):t}function Ao(e){var t=Co(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=go,r=a.baseQueue,o=n.pending;if(null!==o){if(null!==r){var i=r.next;r.next=o.next,o.next=i}a.baseQueue=r=o,n.pending=null}if(null!==r){o=r.next,a=a.baseState;var c=i=null,l=null,u=o;do{var d=u.lane;if((fo&d)===d)null!==l&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),a=u.hasEagerState?u.eagerState:e(a,u.action);else{var h={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===l?(c=l=h,i=a):l=l.next=h,mo.lanes|=d,zc|=d}u=u.next}while(null!==u&&u!==o);null===l?i=a:l.next=c,ia(a,t.memoizedState)||(xi=!0),t.memoizedState=a,t.baseState=i,t.baseQueue=l,n.lastRenderedState=a}if(null!==(e=n.interleaved)){r=e;do{o=r.lane,mo.lanes|=o,zc|=o,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function _o(e){var t=Co(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,o=t.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{o=e(o,i.action),i=i.next}while(i!==r);ia(o,t.memoizedState)||(xi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,a]}function Ro(){}function Fo(e,t){var n=mo,a=Co(),r=t(),o=!ia(a.memoizedState,r);if(o&&(a.memoizedState=r,xi=!0),a=a.queue,jo(Lo.bind(null,n,a,e),[e]),a.getSnapshot!==t||o||null!==yo&&1&yo.memoizedState.tag){if(n.flags|=2048,Bo(9,Oo.bind(null,n,a,r,t),void 0,null),null===_c)throw Error(s(349));0!==(30&fo)||Do(n,t,r)}return r}function Do(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=mo.updateQueue)?(t={lastEffect:null,stores:null},mo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Oo(e,t,n,a){t.value=n,t.getSnapshot=a,Mo(t)&&zo(e)}function Lo(e,t,n){return n((function(){Mo(t)&&zo(e)}))}function Mo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ia(e,n)}catch(a){return!0}}function zo(e){var t=As(e,1);null!==t&&al(t,e,1,-1)}function Po(e){var t=No();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Eo,lastRenderedState:e},t.queue=e,e=e.dispatch=ni.bind(null,mo,e),[t.memoizedState,e]}function Bo(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=mo.updateQueue)?(t={lastEffect:null,stores:null},mo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Wo(){return Co().memoizedState}function Uo(e,t,n,a){var r=No();mo.flags|=e,r.memoizedState=Bo(1|t,n,void 0,void 0===a?null:a)}function Vo(e,t,n,a){var r=Co();a=void 0===a?null:a;var s=void 0;if(null!==go){var o=go.memoizedState;if(s=o.destroy,null!==a&&So(a,o.deps))return void(r.memoizedState=Bo(t,n,s,a))}mo.flags|=e,r.memoizedState=Bo(1|t,n,s,a)}function Go(e,t){return Uo(8390656,8,e,t)}function jo(e,t){return Vo(2048,8,e,t)}function Zo(e,t){return Vo(4,2,e,t)}function Ko(e,t){return Vo(4,4,e,t)}function Ho(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function qo(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Vo(4,4,Ho.bind(null,t,e),n)}function Yo(){}function Qo(e,t){var n=Co();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&So(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Xo(e,t){var n=Co();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&So(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function Jo(e,t,n){return 0===(21&fo)?(e.baseState&&(e.baseState=!1,xi=!0),e.memoizedState=n):(ia(n,t)||(n=mt(),mo.lanes|=n,zc|=n,e.baseState=!0),t)}function $o(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var a=po.transition;po.transition={};try{e(!1),t()}finally{vt=n,po.transition=a}}function ei(){return Co().memoizedState}function ti(e,t,n){var a=nl(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},ai(e))ri(t,n);else if(null!==(n=Es(e,t,n,a))){al(n,e,a,tl()),si(n,t,a)}}function ni(e,t,n){var a=nl(e),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(ai(e))ri(t,r);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=s(o,n);if(r.hasEagerState=!0,r.eagerState=i,ia(i,o)){var c=t.interleaved;return null===c?(r.next=r,Cs(t)):(r.next=c.next,c.next=r),void(t.interleaved=r)}}catch(l){}null!==(n=Es(e,t,r,a))&&(al(n,e,a,r=tl()),si(n,t,a))}}function ai(e){var t=e.alternate;return e===mo||null!==t&&t===mo}function ri(e,t){vo=bo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function si(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}var oi={readContext:Is,useCallback:ko,useContext:ko,useEffect:ko,useImperativeHandle:ko,useInsertionEffect:ko,useLayoutEffect:ko,useMemo:ko,useReducer:ko,useRef:ko,useState:ko,useDebugValue:ko,useDeferredValue:ko,useTransition:ko,useMutableSource:ko,useSyncExternalStore:ko,useId:ko,unstable_isNewReconciler:!1},ii={readContext:Is,useCallback:function(e,t){return No().memoizedState=[e,void 0===t?null:t],e},useContext:Is,useEffect:Go,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Uo(4194308,4,Ho.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Uo(4194308,4,e,t)},useInsertionEffect:function(e,t){return Uo(4,2,e,t)},useMemo:function(e,t){var n=No();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=No();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=ti.bind(null,mo,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},No().memoizedState=e},useState:Po,useDebugValue:Yo,useDeferredValue:function(e){return No().memoizedState=e},useTransition:function(){var e=Po(!1),t=e[0];return e=$o.bind(null,e[1]),No().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=mo,r=No();if(rs){if(void 0===n)throw Error(s(407));n=n()}else{if(n=t(),null===_c)throw Error(s(349));0!==(30&fo)||Do(a,t,n)}r.memoizedState=n;var o={value:n,getSnapshot:t};return r.queue=o,Go(Lo.bind(null,a,o,e),[e]),a.flags|=2048,Bo(9,Oo.bind(null,a,o,n,t),void 0,null),n},useId:function(){var e=No(),t=_c.identifierPrefix;if(rs){var n=Xr;t=":"+t+"R"+(n=(Qr&~(1<<32-ot(Qr)-1)).toString(32)+n),0<(n=xo++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=wo++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ci={readContext:Is,useCallback:Qo,useContext:Is,useEffect:jo,useImperativeHandle:qo,useInsertionEffect:Zo,useLayoutEffect:Ko,useMemo:Xo,useReducer:Ao,useRef:Wo,useState:function(){return Ao(Eo)},useDebugValue:Yo,useDeferredValue:function(e){return Jo(Co(),go.memoizedState,e)},useTransition:function(){return[Ao(Eo)[0],Co().memoizedState]},useMutableSource:Ro,useSyncExternalStore:Fo,useId:ei,unstable_isNewReconciler:!1},li={readContext:Is,useCallback:Qo,useContext:Is,useEffect:jo,useImperativeHandle:qo,useInsertionEffect:Zo,useLayoutEffect:Ko,useMemo:Xo,useReducer:_o,useRef:Wo,useState:function(){return _o(Eo)},useDebugValue:Yo,useDeferredValue:function(e){var t=Co();return null===go?t.memoizedState=e:Jo(t,go.memoizedState,e)},useTransition:function(){return[_o(Eo)[0],Co().memoizedState]},useMutableSource:Ro,useSyncExternalStore:Fo,useId:ei,unstable_isNewReconciler:!1};function ui(e,t){try{var n="",a=t;do{n+=U(a),a=a.return}while(a);var r=n}catch(s){r="\nError generating stack: "+s.message+"\n"+s.stack}return{value:e,source:t,stack:r,digest:null}}function di(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function hi(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var pi="function"===typeof WeakMap?WeakMap:Map;function fi(e,t,n){(n=Ds(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){Zc||(Zc=!0,Kc=a),hi(0,t)},n}function mi(e,t,n){(n=Ds(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return a(r)},n.callback=function(){hi(0,t)}}var s=e.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){hi(0,t),"function"!==typeof a&&(null===Hc?Hc=new Set([this]):Hc.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function gi(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new pi;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(r.add(n),e=Nl.bind(null,e,t,n),t.then(e,e))}function yi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function bi(e,t,n,a,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ds(-1,1)).tag=2,Os(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var vi=x.ReactCurrentOwner,xi=!1;function wi(e,t,n,a){t.child=null===e?Xs(t,null,n,a):Qs(t,e.child,n,a)}function ki(e,t,n,a,r){n=n.render;var s=t.ref;return Ts(t,r),a=To(e,t,n,a,s,r),n=Io(),null===e||xi?(rs&&n&&es(t),t.flags|=1,wi(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Zi(e,t,r))}function Si(e,t,n,a,r){if(null===e){var s=n.type;return"function"!==typeof s||Dl(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ll(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,Ti(e,t,s,a,r))}if(s=e.child,0===(e.lanes&r)){var o=s.memoizedProps;if((n=null!==(n=n.compare)?n:ca)(o,a)&&e.ref===t.ref)return Zi(e,t,r)}return t.flags|=1,(e=Ol(s,a)).ref=t.ref,e.return=t,t.child=e}function Ti(e,t,n,a,r){if(null!==e){var s=e.memoizedProps;if(ca(s,a)&&e.ref===t.ref){if(xi=!1,t.pendingProps=a=s,0===(e.lanes&r))return t.lanes=e.lanes,Zi(e,t,r);0!==(131072&e.flags)&&(xi=!0)}}return Ci(e,t,n,a,r)}function Ii(e,t,n){var a=t.pendingProps,r=a.children,s=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Nr(Oc,Dc),Dc|=n;else{if(0===(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Nr(Oc,Dc),Dc|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==s?s.baseLanes:n,Nr(Oc,Dc),Dc|=a}else null!==s?(a=s.baseLanes|n,t.memoizedState=null):a=n,Nr(Oc,Dc),Dc|=a;return wi(e,t,r,n),t.child}function Ni(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ci(e,t,n,a,r){var s=Fr(n)?_r:Er.current;return s=Rr(t,s),Ts(t,r),n=To(e,t,n,a,s,r),a=Io(),null===e||xi?(rs&&a&&es(t),t.flags|=1,wi(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Zi(e,t,r))}function Ei(e,t,n,a,r){if(Fr(n)){var s=!0;Mr(t)}else s=!1;if(Ts(t,r),null===t.stateNode)ji(e,t),Gs(t,n,a),Zs(t,n,a,r),a=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var c=o.context,l=n.contextType;"object"===typeof l&&null!==l?l=Is(l):l=Rr(t,l=Fr(n)?_r:Er.current);var u=n.getDerivedStateFromProps,d="function"===typeof u||"function"===typeof o.getSnapshotBeforeUpdate;d||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||c!==l)&&js(t,o,a,l),_s=!1;var h=t.memoizedState;o.state=h,zs(t,a,o,r),c=t.memoizedState,i!==a||h!==c||Ar.current||_s?("function"===typeof u&&(Ws(t,n,u,a),c=t.memoizedState),(i=_s||Vs(t,n,i,a,h,c,l))?(d||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=c),o.props=a,o.state=c,o.context=l,a=i):("function"===typeof o.componentDidMount&&(t.flags|=4194308),a=!1)}else{o=t.stateNode,Fs(e,t),i=t.memoizedProps,l=t.type===t.elementType?i:gs(t.type,i),o.props=l,d=t.pendingProps,h=o.context,"object"===typeof(c=n.contextType)&&null!==c?c=Is(c):c=Rr(t,c=Fr(n)?_r:Er.current);var p=n.getDerivedStateFromProps;(u="function"===typeof p||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==d||h!==c)&&js(t,o,a,c),_s=!1,h=t.memoizedState,o.state=h,zs(t,a,o,r);var f=t.memoizedState;i!==d||h!==f||Ar.current||_s?("function"===typeof p&&(Ws(t,n,p,a),f=t.memoizedState),(l=_s||Vs(t,n,l,a,h,f,c)||!1)?(u||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(a,f,c),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,f,c)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=f),o.props=a,o.state=f,o.context=c,a=l):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),a=!1)}return Ai(e,t,n,a,s,r)}function Ai(e,t,n,a,r,s){Ni(e,t);var o=0!==(128&t.flags);if(!a&&!o)return r&&zr(t,n,!1),Zi(e,t,s);a=t.stateNode,vi.current=t;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&o?(t.child=Qs(t,e.child,null,s),t.child=Qs(t,null,i,s)):wi(e,t,i,s),t.memoizedState=a.state,r&&zr(t,n,!0),t.child}function _i(e){var t=e.stateNode;t.pendingContext?Or(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Or(0,t.context,!1),ao(e,t.containerInfo)}function Ri(e,t,n,a,r){return ps(),fs(r),t.flags|=256,wi(e,t,n,a),t.child}var Fi,Di,Oi,Li,Mi={dehydrated:null,treeContext:null,retryLane:0};function zi(e){return{baseLanes:e,cachePool:null,transitions:null}}function Pi(e,t,n){var a,r=t.pendingProps,o=io.current,i=!1,c=0!==(128&t.flags);if((a=c)||(a=(null===e||null!==e.memoizedState)&&0!==(2&o)),a?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Nr(io,1&o),null===e)return ls(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(c=r.children,e=r.fallback,i?(r=t.mode,i=t.child,c={mode:"hidden",children:c},0===(1&r)&&null!==i?(i.childLanes=0,i.pendingProps=c):i=zl(c,r,0,null),e=Ml(e,r,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=zi(n),t.memoizedState=Mi,e):Bi(t,c));if(null!==(o=e.memoizedState)&&null!==(a=o.dehydrated))return function(e,t,n,a,r,o,i){if(n)return 256&t.flags?(t.flags&=-257,Wi(e,t,i,a=di(Error(s(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=a.fallback,r=t.mode,a=zl({mode:"visible",children:a.children},r,0,null),(o=Ml(o,r,i,null)).flags|=2,a.return=t,o.return=t,a.sibling=o,t.child=a,0!==(1&t.mode)&&Qs(t,e.child,null,i),t.child.memoizedState=zi(i),t.memoizedState=Mi,o);if(0===(1&t.mode))return Wi(e,t,i,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var c=a.dgst;return a=c,Wi(e,t,i,a=di(o=Error(s(419)),a,void 0))}if(c=0!==(i&e.childLanes),xi||c){if(null!==(a=_c)){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|i))?0:r)&&r!==o.retryLane&&(o.retryLane=r,As(e,r),al(a,e,r,-1))}return gl(),Wi(e,t,i,a=di(Error(s(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=El.bind(null,e),r._reactRetry=t,null):(e=o.treeContext,as=lr(r.nextSibling),ns=t,rs=!0,ss=null,null!==e&&(Hr[qr++]=Qr,Hr[qr++]=Xr,Hr[qr++]=Yr,Qr=e.id,Xr=e.overflow,Yr=t),t=Bi(t,a.children),t.flags|=4096,t)}(e,t,c,r,a,o,n);if(i){i=r.fallback,c=t.mode,a=(o=e.child).sibling;var l={mode:"hidden",children:r.children};return 0===(1&c)&&t.child!==o?((r=t.child).childLanes=0,r.pendingProps=l,t.deletions=null):(r=Ol(o,l)).subtreeFlags=14680064&o.subtreeFlags,null!==a?i=Ol(a,i):(i=Ml(i,c,n,null)).flags|=2,i.return=t,r.return=t,r.sibling=i,t.child=r,r=i,i=t.child,c=null===(c=e.child.memoizedState)?zi(n):{baseLanes:c.baseLanes|n,cachePool:null,transitions:c.transitions},i.memoizedState=c,i.childLanes=e.childLanes&~n,t.memoizedState=Mi,r}return e=(i=e.child).sibling,r=Ol(i,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Bi(e,t){return(t=zl({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Wi(e,t,n,a){return null!==a&&fs(a),Qs(t,e.child,null,n),(e=Bi(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Ui(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Ss(e.return,t,n)}function Vi(e,t,n,a,r){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=a,s.tail=n,s.tailMode=r)}function Gi(e,t,n){var a=t.pendingProps,r=a.revealOrder,s=a.tail;if(wi(e,t,a.children,n),0!==(2&(a=io.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ui(e,n,t);else if(19===e.tag)Ui(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Nr(io,a),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===co(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Vi(t,!1,r,n,s);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===co(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Vi(t,!0,n,null,s);break;case"together":Vi(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function ji(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Zi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),zc|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=Ol(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ol(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ki(e,t){if(!rs)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function Hi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function qi(e,t,n){var a=t.pendingProps;switch(ts(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Hi(t),null;case 1:case 17:return Fr(t.type)&&Dr(),Hi(t),null;case 3:return a=t.stateNode,ro(),Ir(Ar),Ir(Er),uo(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(ds(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ss&&(il(ss),ss=null))),Di(e,t),Hi(t),null;case 5:oo(t);var r=no(to.current);if(n=t.type,null!==e&&null!=t.stateNode)Oi(e,t,n,a,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(s(166));return Hi(t),null}if(e=no($s.current),ds(t)){a=t.stateNode,n=t.type;var o=t.memoizedProps;switch(a[hr]=t,a[pr]=o,e=0!==(1&t.mode),n){case"dialog":Ba("cancel",a),Ba("close",a);break;case"iframe":case"object":case"embed":Ba("load",a);break;case"video":case"audio":for(r=0;r<La.length;r++)Ba(La[r],a);break;case"source":Ba("error",a);break;case"img":case"image":case"link":Ba("error",a),Ba("load",a);break;case"details":Ba("toggle",a);break;case"input":Q(a,o),Ba("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!o.multiple},Ba("invalid",a);break;case"textarea":re(a,o),Ba("invalid",a)}for(var c in be(n,o),r=null,o)if(o.hasOwnProperty(c)){var l=o[c];"children"===c?"string"===typeof l?a.textContent!==l&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",l]):"number"===typeof l&&a.textContent!==""+l&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",""+l]):i.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&Ba("scroll",a)}switch(n){case"input":K(a),$(a,o,!0);break;case"textarea":K(a),oe(a);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(a.onclick=$a)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{c=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=c.createElement(n,{is:a.is}):(e=c.createElement(n),"select"===n&&(c=e,a.multiple?c.multiple=!0:a.size&&(c.size=a.size))):e=c.createElementNS(e,n),e[hr]=t,e[pr]=a,Fi(e,t,!1,!1),t.stateNode=e;e:{switch(c=ve(n,a),n){case"dialog":Ba("cancel",e),Ba("close",e),r=a;break;case"iframe":case"object":case"embed":Ba("load",e),r=a;break;case"video":case"audio":for(r=0;r<La.length;r++)Ba(La[r],e);r=a;break;case"source":Ba("error",e),r=a;break;case"img":case"image":case"link":Ba("error",e),Ba("load",e),r=a;break;case"details":Ba("toggle",e),r=a;break;case"input":Q(e,a),r=Y(e,a),Ba("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=z({},a,{value:void 0}),Ba("invalid",e);break;case"textarea":re(e,a),r=ae(e,a),Ba("invalid",e)}for(o in be(n,r),l=r)if(l.hasOwnProperty(o)){var u=l[o];"style"===o?ge(e,u):"dangerouslySetInnerHTML"===o?null!=(u=u?u.__html:void 0)&&de(e,u):"children"===o?"string"===typeof u?("textarea"!==n||""!==u)&&he(e,u):"number"===typeof u&&he(e,""+u):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=u&&"onScroll"===o&&Ba("scroll",e):null!=u&&v(e,o,u,c))}switch(n){case"input":K(e),$(e,a,!1);break;case"textarea":K(e),oe(e);break;case"option":null!=a.value&&e.setAttribute("value",""+j(a.value));break;case"select":e.multiple=!!a.multiple,null!=(o=a.value)?ne(e,!!a.multiple,o,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=$a)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Hi(t),null;case 6:if(e&&null!=t.stateNode)Li(e,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(s(166));if(n=no(to.current),no($s.current),ds(t)){if(a=t.stateNode,n=t.memoizedProps,a[hr]=t,(o=a.nodeValue!==n)&&null!==(e=ns))switch(e.tag){case 3:Ja(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Ja(a.nodeValue,n,0!==(1&e.mode))}o&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[hr]=t,t.stateNode=a}return Hi(t),null;case 13:if(Ir(io),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(rs&&null!==as&&0!==(1&t.mode)&&0===(128&t.flags))hs(),ps(),t.flags|=98560,o=!1;else if(o=ds(t),null!==a&&null!==a.dehydrated){if(null===e){if(!o)throw Error(s(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(s(317));o[hr]=t}else ps(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Hi(t),o=!1}else null!==ss&&(il(ss),ss=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&io.current)?0===Lc&&(Lc=3):gl())),null!==t.updateQueue&&(t.flags|=4),Hi(t),null);case 4:return ro(),Di(e,t),null===e&&Va(t.stateNode.containerInfo),Hi(t),null;case 10:return ks(t.type._context),Hi(t),null;case 19:if(Ir(io),null===(o=t.memoizedState))return Hi(t),null;if(a=0!==(128&t.flags),null===(c=o.rendering))if(a)Ki(o,!1);else{if(0!==Lc||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(c=co(e))){for(t.flags|=128,Ki(o,!1),null!==(a=c.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(o=n).flags&=14680066,null===(c=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=c.childLanes,o.lanes=c.lanes,o.child=c.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=c.memoizedProps,o.memoizedState=c.memoizedState,o.updateQueue=c.updateQueue,o.type=c.type,e=c.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Nr(io,1&io.current|2),t.child}e=e.sibling}null!==o.tail&&Xe()>Gc&&(t.flags|=128,a=!0,Ki(o,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=co(c))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Ki(o,!0),null===o.tail&&"hidden"===o.tailMode&&!c.alternate&&!rs)return Hi(t),null}else 2*Xe()-o.renderingStartTime>Gc&&1073741824!==n&&(t.flags|=128,a=!0,Ki(o,!1),t.lanes=4194304);o.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=o.last)?n.sibling=c:t.child=c,o.last=c)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Xe(),t.sibling=null,n=io.current,Nr(io,a?1&n|2:1&n),t):(Hi(t),null);case 22:case 23:return hl(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&Dc)&&(Hi(t),6&t.subtreeFlags&&(t.flags|=8192)):Hi(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function Yi(e,t){switch(ts(t),t.tag){case 1:return Fr(t.type)&&Dr(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ro(),Ir(Ar),Ir(Er),uo(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return oo(t),null;case 13:if(Ir(io),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));ps()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Ir(io),null;case 4:return ro(),null;case 10:return ks(t.type._context),null;case 22:case 23:return hl(),null;default:return null}}Fi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Di=function(){},Oi=function(e,t,n,a){var r=e.memoizedProps;if(r!==a){e=t.stateNode,no($s.current);var s,o=null;switch(n){case"input":r=Y(e,r),a=Y(e,a),o=[];break;case"select":r=z({},r,{value:void 0}),a=z({},a,{value:void 0}),o=[];break;case"textarea":r=ae(e,r),a=ae(e,a),o=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(e.onclick=$a)}for(u in be(n,a),n=null,r)if(!a.hasOwnProperty(u)&&r.hasOwnProperty(u)&&null!=r[u])if("style"===u){var c=r[u];for(s in c)c.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(i.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in a){var l=a[u];if(c=null!=r?r[u]:void 0,a.hasOwnProperty(u)&&l!==c&&(null!=l||null!=c))if("style"===u)if(c){for(s in c)!c.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in l)l.hasOwnProperty(s)&&c[s]!==l[s]&&(n||(n={}),n[s]=l[s])}else n||(o||(o=[]),o.push(u,n)),n=l;else"dangerouslySetInnerHTML"===u?(l=l?l.__html:void 0,c=c?c.__html:void 0,null!=l&&c!==l&&(o=o||[]).push(u,l)):"children"===u?"string"!==typeof l&&"number"!==typeof l||(o=o||[]).push(u,""+l):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(i.hasOwnProperty(u)?(null!=l&&"onScroll"===u&&Ba("scroll",e),o||c===l||(o=[])):(o=o||[]).push(u,l))}n&&(o=o||[]).push("style",n);var u=o;(t.updateQueue=u)&&(t.flags|=4)}},Li=function(e,t,n,a){n!==a&&(t.flags|=4)};var Qi=!1,Xi=!1,Ji="function"===typeof WeakSet?WeakSet:Set,$i=null;function ec(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Il(e,t,a)}else n.current=null}function tc(e,t,n){try{n()}catch(a){Il(e,t,a)}}var nc=!1;function ac(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&e)===e){var s=r.destroy;r.destroy=void 0,void 0!==s&&tc(t,n,s)}r=r.next}while(r!==a)}}function rc(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function sc(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function oc(e){var t=e.alternate;null!==t&&(e.alternate=null,oc(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[hr],delete t[pr],delete t[mr],delete t[gr],delete t[yr])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ic(e){return 5===e.tag||3===e.tag||4===e.tag}function cc(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ic(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function lc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=$a));else if(4!==a&&null!==(e=e.child))for(lc(e,t,n),e=e.sibling;null!==e;)lc(e,t,n),e=e.sibling}function uc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(uc(e,t,n),e=e.sibling;null!==e;)uc(e,t,n),e=e.sibling}var dc=null,hc=!1;function pc(e,t,n){for(n=n.child;null!==n;)fc(e,t,n),n=n.sibling}function fc(e,t,n){if(st&&"function"===typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(rt,n)}catch(i){}switch(n.tag){case 5:Xi||ec(n,t);case 6:var a=dc,r=hc;dc=null,pc(e,t,n),hc=r,null!==(dc=a)&&(hc?(e=dc,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):dc.removeChild(n.stateNode));break;case 18:null!==dc&&(hc?(e=dc,n=n.stateNode,8===e.nodeType?cr(e.parentNode,n):1===e.nodeType&&cr(e,n),Vt(e)):cr(dc,n.stateNode));break;case 4:a=dc,r=hc,dc=n.stateNode.containerInfo,hc=!0,pc(e,t,n),dc=a,hc=r;break;case 0:case 11:case 14:case 15:if(!Xi&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var s=r,o=s.destroy;s=s.tag,void 0!==o&&(0!==(2&s)||0!==(4&s))&&tc(n,t,o),r=r.next}while(r!==a)}pc(e,t,n);break;case 1:if(!Xi&&(ec(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(i){Il(n,t,i)}pc(e,t,n);break;case 21:pc(e,t,n);break;case 22:1&n.mode?(Xi=(a=Xi)||null!==n.memoizedState,pc(e,t,n),Xi=a):pc(e,t,n);break;default:pc(e,t,n)}}function mc(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Ji),t.forEach((function(t){var a=Al.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function gc(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var o=e,i=t,c=i;e:for(;null!==c;){switch(c.tag){case 5:dc=c.stateNode,hc=!1;break e;case 3:case 4:dc=c.stateNode.containerInfo,hc=!0;break e}c=c.return}if(null===dc)throw Error(s(160));fc(o,i,r),dc=null,hc=!1;var l=r.alternate;null!==l&&(l.return=null),r.return=null}catch(u){Il(r,t,u)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)yc(t,e),t=t.sibling}function yc(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(gc(t,e),bc(e),4&a){try{ac(3,e,e.return),rc(3,e)}catch(g){Il(e,e.return,g)}try{ac(5,e,e.return)}catch(g){Il(e,e.return,g)}}break;case 1:gc(t,e),bc(e),512&a&&null!==n&&ec(n,n.return);break;case 5:if(gc(t,e),bc(e),512&a&&null!==n&&ec(n,n.return),32&e.flags){var r=e.stateNode;try{he(r,"")}catch(g){Il(e,e.return,g)}}if(4&a&&null!=(r=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,c=e.type,l=e.updateQueue;if(e.updateQueue=null,null!==l)try{"input"===c&&"radio"===o.type&&null!=o.name&&X(r,o),ve(c,i);var u=ve(c,o);for(i=0;i<l.length;i+=2){var d=l[i],h=l[i+1];"style"===d?ge(r,h):"dangerouslySetInnerHTML"===d?de(r,h):"children"===d?he(r,h):v(r,d,h,u)}switch(c){case"input":J(r,o);break;case"textarea":se(r,o);break;case"select":var p=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!o.multiple;var f=o.value;null!=f?ne(r,!!o.multiple,f,!1):p!==!!o.multiple&&(null!=o.defaultValue?ne(r,!!o.multiple,o.defaultValue,!0):ne(r,!!o.multiple,o.multiple?[]:"",!1))}r[pr]=o}catch(g){Il(e,e.return,g)}}break;case 6:if(gc(t,e),bc(e),4&a){if(null===e.stateNode)throw Error(s(162));r=e.stateNode,o=e.memoizedProps;try{r.nodeValue=o}catch(g){Il(e,e.return,g)}}break;case 3:if(gc(t,e),bc(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Vt(t.containerInfo)}catch(g){Il(e,e.return,g)}break;case 4:default:gc(t,e),bc(e);break;case 13:gc(t,e),bc(e),8192&(r=e.child).flags&&(o=null!==r.memoizedState,r.stateNode.isHidden=o,!o||null!==r.alternate&&null!==r.alternate.memoizedState||(Vc=Xe())),4&a&&mc(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Xi=(u=Xi)||d,gc(t,e),Xi=u):gc(t,e),bc(e),8192&a){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!d&&0!==(1&e.mode))for($i=e,d=e.child;null!==d;){for(h=$i=d;null!==$i;){switch(f=(p=$i).child,p.tag){case 0:case 11:case 14:case 15:ac(4,p,p.return);break;case 1:ec(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){a=p,n=p.return;try{t=a,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Il(a,n,g)}}break;case 5:ec(p,p.return);break;case 22:if(null!==p.memoizedState){kc(h);continue}}null!==f?(f.return=p,$i=f):kc(h)}d=d.sibling}e:for(d=null,h=e;;){if(5===h.tag){if(null===d){d=h;try{r=h.stateNode,u?"function"===typeof(o=r.style).setProperty?o.setProperty("display","none","important"):o.display="none":(c=h.stateNode,i=void 0!==(l=h.memoizedProps.style)&&null!==l&&l.hasOwnProperty("display")?l.display:null,c.style.display=me("display",i))}catch(g){Il(e,e.return,g)}}}else if(6===h.tag){if(null===d)try{h.stateNode.nodeValue=u?"":h.memoizedProps}catch(g){Il(e,e.return,g)}}else if((22!==h.tag&&23!==h.tag||null===h.memoizedState||h===e)&&null!==h.child){h.child.return=h,h=h.child;continue}if(h===e)break e;for(;null===h.sibling;){if(null===h.return||h.return===e)break e;d===h&&(d=null),h=h.return}d===h&&(d=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:gc(t,e),bc(e),4&a&&mc(e);case 21:}}function bc(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(ic(n)){var a=n;break e}n=n.return}throw Error(s(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(he(r,""),a.flags&=-33),uc(e,cc(e),r);break;case 3:case 4:var o=a.stateNode.containerInfo;lc(e,cc(e),o);break;default:throw Error(s(161))}}catch(i){Il(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function vc(e,t,n){$i=e,xc(e,t,n)}function xc(e,t,n){for(var a=0!==(1&e.mode);null!==$i;){var r=$i,s=r.child;if(22===r.tag&&a){var o=null!==r.memoizedState||Qi;if(!o){var i=r.alternate,c=null!==i&&null!==i.memoizedState||Xi;i=Qi;var l=Xi;if(Qi=o,(Xi=c)&&!l)for($i=r;null!==$i;)c=(o=$i).child,22===o.tag&&null!==o.memoizedState?Sc(r):null!==c?(c.return=o,$i=c):Sc(r);for(;null!==s;)$i=s,xc(s,t,n),s=s.sibling;$i=r,Qi=i,Xi=l}wc(e)}else 0!==(8772&r.subtreeFlags)&&null!==s?(s.return=r,$i=s):wc(e)}}function wc(e){for(;null!==$i;){var t=$i;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Xi||rc(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Xi)if(null===n)a.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:gs(t.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Ps(t,o,a);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Ps(t,i,n)}break;case 5:var c=t.stateNode;if(null===n&&4&t.flags){n=c;var l=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var h=d.dehydrated;null!==h&&Vt(h)}}}break;default:throw Error(s(163))}Xi||512&t.flags&&sc(t)}catch(p){Il(t,t.return,p)}}if(t===e){$i=null;break}if(null!==(n=t.sibling)){n.return=t.return,$i=n;break}$i=t.return}}function kc(e){for(;null!==$i;){var t=$i;if(t===e){$i=null;break}var n=t.sibling;if(null!==n){n.return=t.return,$i=n;break}$i=t.return}}function Sc(e){for(;null!==$i;){var t=$i;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{rc(4,t)}catch(c){Il(t,n,c)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var r=t.return;try{a.componentDidMount()}catch(c){Il(t,r,c)}}var s=t.return;try{sc(t)}catch(c){Il(t,s,c)}break;case 5:var o=t.return;try{sc(t)}catch(c){Il(t,o,c)}}}catch(c){Il(t,t.return,c)}if(t===e){$i=null;break}var i=t.sibling;if(null!==i){i.return=t.return,$i=i;break}$i=t.return}}var Tc,Ic=Math.ceil,Nc=x.ReactCurrentDispatcher,Cc=x.ReactCurrentOwner,Ec=x.ReactCurrentBatchConfig,Ac=0,_c=null,Rc=null,Fc=0,Dc=0,Oc=Tr(0),Lc=0,Mc=null,zc=0,Pc=0,Bc=0,Wc=null,Uc=null,Vc=0,Gc=1/0,jc=null,Zc=!1,Kc=null,Hc=null,qc=!1,Yc=null,Qc=0,Xc=0,Jc=null,$c=-1,el=0;function tl(){return 0!==(6&Ac)?Xe():-1!==$c?$c:$c=Xe()}function nl(e){return 0===(1&e.mode)?1:0!==(2&Ac)&&0!==Fc?Fc&-Fc:null!==ms.transition?(0===el&&(el=mt()),el):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Qt(e.type)}function al(e,t,n,a){if(50<Xc)throw Xc=0,Jc=null,Error(s(185));yt(e,n,a),0!==(2&Ac)&&e===_c||(e===_c&&(0===(2&Ac)&&(Pc|=n),4===Lc&&cl(e,Fc)),rl(e,a),1===n&&0===Ac&&0===(1&t.mode)&&(Gc=Xe()+500,Br&&Vr()))}function rl(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,s=e.pendingLanes;0<s;){var o=31-ot(s),i=1<<o,c=r[o];-1===c?0!==(i&n)&&0===(i&a)||(r[o]=pt(i,t)):c<=t&&(e.expiredLanes|=i),s&=~i}}(e,t);var a=ht(e,e===_c?Fc:0);if(0===a)null!==n&&qe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&qe(n),1===t)0===e.tag?function(e){Br=!0,Ur(e)}(ll.bind(null,e)):Ur(ll.bind(null,e)),or((function(){0===(6&Ac)&&Vr()})),n=null;else{switch(xt(a)){case 1:n=$e;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=_l(n,sl.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function sl(e,t){if($c=-1,el=0,0!==(6&Ac))throw Error(s(327));var n=e.callbackNode;if(Sl()&&e.callbackNode!==n)return null;var a=ht(e,e===_c?Fc:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=yl(e,a);else{t=a;var r=Ac;Ac|=2;var o=ml();for(_c===e&&Fc===t||(jc=null,Gc=Xe()+500,pl(e,t));;)try{vl();break}catch(c){fl(e,c)}ws(),Nc.current=o,Ac=r,null!==Rc?t=0:(_c=null,Fc=0,t=Lc)}if(0!==t){if(2===t&&(0!==(r=ft(e))&&(a=r,t=ol(e,r))),1===t)throw n=Mc,pl(e,0),cl(e,a),rl(e,Xe()),n;if(6===t)cl(e,a);else{if(r=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],s=r.getSnapshot;r=r.value;try{if(!ia(s(),r))return!1}catch(i){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=yl(e,a))&&(0!==(o=ft(e))&&(a=o,t=ol(e,o))),1===t))throw n=Mc,pl(e,0),cl(e,a),rl(e,Xe()),n;switch(e.finishedWork=r,e.finishedLanes=a,t){case 0:case 1:throw Error(s(345));case 2:case 5:kl(e,Uc,jc);break;case 3:if(cl(e,a),(130023424&a)===a&&10<(t=Vc+500-Xe())){if(0!==ht(e,0))break;if(((r=e.suspendedLanes)&a)!==a){tl(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ar(kl.bind(null,e,Uc,jc),t);break}kl(e,Uc,jc);break;case 4:if(cl(e,a),(4194240&a)===a)break;for(t=e.eventTimes,r=-1;0<a;){var i=31-ot(a);o=1<<i,(i=t[i])>r&&(r=i),a&=~o}if(a=r,10<(a=(120>(a=Xe()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Ic(a/1960))-a)){e.timeoutHandle=ar(kl.bind(null,e,Uc,jc),a);break}kl(e,Uc,jc);break;default:throw Error(s(329))}}}return rl(e,Xe()),e.callbackNode===n?sl.bind(null,e):null}function ol(e,t){var n=Wc;return e.current.memoizedState.isDehydrated&&(pl(e,t).flags|=256),2!==(e=yl(e,t))&&(t=Uc,Uc=n,null!==t&&il(t)),e}function il(e){null===Uc?Uc=e:Uc.push.apply(Uc,e)}function cl(e,t){for(t&=~Bc,t&=~Pc,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),a=1<<n;e[n]=-1,t&=~a}}function ll(e){if(0!==(6&Ac))throw Error(s(327));Sl();var t=ht(e,0);if(0===(1&t))return rl(e,Xe()),null;var n=yl(e,t);if(0!==e.tag&&2===n){var a=ft(e);0!==a&&(t=a,n=ol(e,a))}if(1===n)throw n=Mc,pl(e,0),cl(e,t),rl(e,Xe()),n;if(6===n)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,kl(e,Uc,jc),rl(e,Xe()),null}function ul(e,t){var n=Ac;Ac|=1;try{return e(t)}finally{0===(Ac=n)&&(Gc=Xe()+500,Br&&Vr())}}function dl(e){null!==Yc&&0===Yc.tag&&0===(6&Ac)&&Sl();var t=Ac;Ac|=1;var n=Ec.transition,a=vt;try{if(Ec.transition=null,vt=1,e)return e()}finally{vt=a,Ec.transition=n,0===(6&(Ac=t))&&Vr()}}function hl(){Dc=Oc.current,Ir(Oc)}function pl(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Rc)for(n=Rc.return;null!==n;){var a=n;switch(ts(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&Dr();break;case 3:ro(),Ir(Ar),Ir(Er),uo();break;case 5:oo(a);break;case 4:ro();break;case 13:case 19:Ir(io);break;case 10:ks(a.type._context);break;case 22:case 23:hl()}n=n.return}if(_c=e,Rc=e=Ol(e.current,null),Fc=Dc=t,Lc=0,Mc=null,Bc=Pc=zc=0,Uc=Wc=null,null!==Ns){for(t=0;t<Ns.length;t++)if(null!==(a=(n=Ns[t]).interleaved)){n.interleaved=null;var r=a.next,s=n.pending;if(null!==s){var o=s.next;s.next=r,a.next=o}n.pending=a}Ns=null}return e}function fl(e,t){for(;;){var n=Rc;try{if(ws(),ho.current=oi,bo){for(var a=mo.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}bo=!1}if(fo=0,yo=go=mo=null,vo=!1,xo=0,Cc.current=null,null===n||null===n.return){Lc=1,Mc=t,Rc=null;break}e:{var o=e,i=n.return,c=n,l=t;if(t=Fc,c.flags|=32768,null!==l&&"object"===typeof l&&"function"===typeof l.then){var u=l,d=c,h=d.tag;if(0===(1&d.mode)&&(0===h||11===h||15===h)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var f=yi(i);if(null!==f){f.flags&=-257,bi(f,i,c,0,t),1&f.mode&&gi(o,u,t),l=u;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(l),t.updateQueue=g}else m.add(l);break e}if(0===(1&t)){gi(o,u,t),gl();break e}l=Error(s(426))}else if(rs&&1&c.mode){var y=yi(i);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),bi(y,i,c,0,t),fs(ui(l,c));break e}}o=l=ui(l,c),4!==Lc&&(Lc=2),null===Wc?Wc=[o]:Wc.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Ms(o,fi(0,l,t));break e;case 1:c=l;var b=o.type,v=o.stateNode;if(0===(128&o.flags)&&("function"===typeof b.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===Hc||!Hc.has(v)))){o.flags|=65536,t&=-t,o.lanes|=t,Ms(o,mi(o,c,t));break e}}o=o.return}while(null!==o)}wl(n)}catch(x){t=x,Rc===n&&null!==n&&(Rc=n=n.return);continue}break}}function ml(){var e=Nc.current;return Nc.current=oi,null===e?oi:e}function gl(){0!==Lc&&3!==Lc&&2!==Lc||(Lc=4),null===_c||0===(268435455&zc)&&0===(268435455&Pc)||cl(_c,Fc)}function yl(e,t){var n=Ac;Ac|=2;var a=ml();for(_c===e&&Fc===t||(jc=null,pl(e,t));;)try{bl();break}catch(r){fl(e,r)}if(ws(),Ac=n,Nc.current=a,null!==Rc)throw Error(s(261));return _c=null,Fc=0,Lc}function bl(){for(;null!==Rc;)xl(Rc)}function vl(){for(;null!==Rc&&!Ye();)xl(Rc)}function xl(e){var t=Tc(e.alternate,e,Dc);e.memoizedProps=e.pendingProps,null===t?wl(e):Rc=t,Cc.current=null}function wl(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=qi(n,t,Dc)))return void(Rc=n)}else{if(null!==(n=Yi(n,t)))return n.flags&=32767,void(Rc=n);if(null===e)return Lc=6,void(Rc=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Rc=t);Rc=t=e}while(null!==t);0===Lc&&(Lc=5)}function kl(e,t,n){var a=vt,r=Ec.transition;try{Ec.transition=null,vt=1,function(e,t,n,a){do{Sl()}while(null!==Yc);if(0!==(6&Ac))throw Error(s(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-ot(n),s=1<<r;t[r]=0,a[r]=-1,e[r]=-1,n&=~s}}(e,o),e===_c&&(Rc=_c=null,Fc=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||qc||(qc=!0,_l(tt,(function(){return Sl(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=Ec.transition,Ec.transition=null;var i=vt;vt=1;var c=Ac;Ac|=4,Cc.current=null,function(e,t){if(er=jt,pa(e=ha())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,o=a.focusNode;a=a.focusOffset;try{n.nodeType,o.nodeType}catch(w){n=null;break e}var i=0,c=-1,l=-1,u=0,d=0,h=e,p=null;t:for(;;){for(var f;h!==n||0!==r&&3!==h.nodeType||(c=i+r),h!==o||0!==a&&3!==h.nodeType||(l=i+a),3===h.nodeType&&(i+=h.nodeValue.length),null!==(f=h.firstChild);)p=h,h=f;for(;;){if(h===e)break t;if(p===n&&++u===r&&(c=i),p===o&&++d===a&&(l=i),null!==(f=h.nextSibling))break;p=(h=p).parentNode}h=f}n=-1===c||-1===l?null:{start:c,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},jt=!1,$i=t;null!==$i;)if(e=(t=$i).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,$i=e;else for(;null!==$i;){t=$i;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,v=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:gs(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var x=t.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;default:throw Error(s(163))}}catch(w){Il(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,$i=e;break}$i=t.return}m=nc,nc=!1}(e,n),yc(n,e),fa(tr),jt=!!er,tr=er=null,e.current=n,vc(n,e,r),Qe(),Ac=c,vt=i,Ec.transition=o}else e.current=n;if(qc&&(qc=!1,Yc=e,Qc=r),o=e.pendingLanes,0===o&&(Hc=null),function(e){if(st&&"function"===typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),rl(e,Xe()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)r=t[n],a(r.value,{componentStack:r.stack,digest:r.digest});if(Zc)throw Zc=!1,e=Kc,Kc=null,e;0!==(1&Qc)&&0!==e.tag&&Sl(),o=e.pendingLanes,0!==(1&o)?e===Jc?Xc++:(Xc=0,Jc=e):Xc=0,Vr()}(e,t,n,a)}finally{Ec.transition=r,vt=a}return null}function Sl(){if(null!==Yc){var e=xt(Qc),t=Ec.transition,n=vt;try{if(Ec.transition=null,vt=16>e?16:e,null===Yc)var a=!1;else{if(e=Yc,Yc=null,Qc=0,0!==(6&Ac))throw Error(s(331));var r=Ac;for(Ac|=4,$i=e.current;null!==$i;){var o=$i,i=o.child;if(0!==(16&$i.flags)){var c=o.deletions;if(null!==c){for(var l=0;l<c.length;l++){var u=c[l];for($i=u;null!==$i;){var d=$i;switch(d.tag){case 0:case 11:case 15:ac(8,d,o)}var h=d.child;if(null!==h)h.return=d,$i=h;else for(;null!==$i;){var p=(d=$i).sibling,f=d.return;if(oc(d),d===u){$i=null;break}if(null!==p){p.return=f,$i=p;break}$i=f}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}$i=o}}if(0!==(2064&o.subtreeFlags)&&null!==i)i.return=o,$i=i;else e:for(;null!==$i;){if(0!==(2048&(o=$i).flags))switch(o.tag){case 0:case 11:case 15:ac(9,o,o.return)}var b=o.sibling;if(null!==b){b.return=o.return,$i=b;break e}$i=o.return}}var v=e.current;for($i=v;null!==$i;){var x=(i=$i).child;if(0!==(2064&i.subtreeFlags)&&null!==x)x.return=i,$i=x;else e:for(i=v;null!==$i;){if(0!==(2048&(c=$i).flags))try{switch(c.tag){case 0:case 11:case 15:rc(9,c)}}catch(k){Il(c,c.return,k)}if(c===i){$i=null;break e}var w=c.sibling;if(null!==w){w.return=c.return,$i=w;break e}$i=c.return}}if(Ac=r,Vr(),st&&"function"===typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(rt,e)}catch(k){}a=!0}return a}finally{vt=n,Ec.transition=t}}return!1}function Tl(e,t,n){e=Os(e,t=fi(0,t=ui(n,t),1),1),t=tl(),null!==e&&(yt(e,1,t),rl(e,t))}function Il(e,t,n){if(3===e.tag)Tl(e,e,n);else for(;null!==t;){if(3===t.tag){Tl(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===Hc||!Hc.has(a))){t=Os(t,e=mi(t,e=ui(n,e),1),1),e=tl(),null!==t&&(yt(t,1,e),rl(t,e));break}}t=t.return}}function Nl(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=tl(),e.pingedLanes|=e.suspendedLanes&n,_c===e&&(Fc&n)===n&&(4===Lc||3===Lc&&(130023424&Fc)===Fc&&500>Xe()-Vc?pl(e,0):Bc|=n),rl(e,t)}function Cl(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ut,0===(130023424&(ut<<=1))&&(ut=4194304)));var n=tl();null!==(e=As(e,t))&&(yt(e,t,n),rl(e,n))}function El(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Cl(e,n)}function Al(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(s(314))}null!==a&&a.delete(t),Cl(e,n)}function _l(e,t){return He(e,t)}function Rl(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Fl(e,t,n,a){return new Rl(e,t,n,a)}function Dl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ol(e,t){var n=e.alternate;return null===n?((n=Fl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ll(e,t,n,a,r,o){var i=2;if(a=e,"function"===typeof e)Dl(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case S:return Ml(n.children,r,o,t);case T:i=8,r|=8;break;case I:return(e=Fl(12,n,t,2|r)).elementType=I,e.lanes=o,e;case A:return(e=Fl(13,n,t,r)).elementType=A,e.lanes=o,e;case _:return(e=Fl(19,n,t,r)).elementType=_,e.lanes=o,e;case D:return zl(n,r,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case N:i=10;break e;case C:i=9;break e;case E:i=11;break e;case R:i=14;break e;case F:i=16,a=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=Fl(i,n,t,r)).elementType=e,t.type=a,t.lanes=o,t}function Ml(e,t,n,a){return(e=Fl(7,e,a,t)).lanes=n,e}function zl(e,t,n,a){return(e=Fl(22,e,a,t)).elementType=D,e.lanes=n,e.stateNode={isHidden:!1},e}function Pl(e,t,n){return(e=Fl(6,e,null,t)).lanes=n,e}function Bl(e,t,n){return(t=Fl(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Wl(e,t,n,a,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Ul(e,t,n,a,r,s,o,i,c){return e=new Wl(e,t,n,i,c),1===t?(t=1,!0===s&&(t|=8)):t=0,s=Fl(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Rs(s),e}function Vl(e){if(!e)return Cr;e:{if(Ve(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Fr(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var n=e.type;if(Fr(n))return Lr(e,n,t)}return t}function Gl(e,t,n,a,r,s,o,i,c){return(e=Ul(n,a,!0,e,0,s,0,i,c)).context=Vl(null),n=e.current,(s=Ds(a=tl(),r=nl(n))).callback=void 0!==t&&null!==t?t:null,Os(n,s,r),e.current.lanes=r,yt(e,r,a),rl(e,a),e}function jl(e,t,n,a){var r=t.current,s=tl(),o=nl(r);return n=Vl(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ds(s,o)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Os(r,t,o))&&(al(e,r,o,s),Ls(e,r,o)),o}function Zl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Kl(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Hl(e,t){Kl(e,t),(e=e.alternate)&&Kl(e,t)}Tc=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ar.current)xi=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return xi=!1,function(e,t,n){switch(t.tag){case 3:_i(t),ps();break;case 5:so(t);break;case 1:Fr(t.type)&&Mr(t);break;case 4:ao(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,r=t.memoizedProps.value;Nr(ys,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Nr(io,1&io.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Pi(e,t,n):(Nr(io,1&io.current),null!==(e=Zi(e,t,n))?e.sibling:null);Nr(io,1&io.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return Gi(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Nr(io,io.current),a)break;return null;case 22:case 23:return t.lanes=0,Ii(e,t,n)}return Zi(e,t,n)}(e,t,n);xi=0!==(131072&e.flags)}else xi=!1,rs&&0!==(1048576&t.flags)&&$r(t,Kr,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;ji(e,t),e=t.pendingProps;var r=Rr(t,Er.current);Ts(t,n),r=To(null,t,a,e,r,n);var o=Io();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Fr(a)?(o=!0,Mr(t)):o=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,Rs(t),r.updater=Us,t.stateNode=r,r._reactInternals=t,Zs(t,a,e,n),t=Ai(null,t,a,!0,o,n)):(t.tag=0,rs&&o&&es(t),wi(null,t,r,n),t=t.child),t;case 16:a=t.elementType;e:{switch(ji(e,t),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"===typeof e)return Dl(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===E)return 11;if(e===R)return 14}return 2}(a),e=gs(a,e),r){case 0:t=Ci(null,t,a,e,n);break e;case 1:t=Ei(null,t,a,e,n);break e;case 11:t=ki(null,t,a,e,n);break e;case 14:t=Si(null,t,a,gs(a.type,e),n);break e}throw Error(s(306,a,""))}return t;case 0:return a=t.type,r=t.pendingProps,Ci(e,t,a,r=t.elementType===a?r:gs(a,r),n);case 1:return a=t.type,r=t.pendingProps,Ei(e,t,a,r=t.elementType===a?r:gs(a,r),n);case 3:e:{if(_i(t),null===e)throw Error(s(387));a=t.pendingProps,r=(o=t.memoizedState).element,Fs(e,t),zs(t,a,null,n);var i=t.memoizedState;if(a=i.element,o.isDehydrated){if(o={element:a,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Ri(e,t,a,n,r=ui(Error(s(423)),t));break e}if(a!==r){t=Ri(e,t,a,n,r=ui(Error(s(424)),t));break e}for(as=lr(t.stateNode.containerInfo.firstChild),ns=t,rs=!0,ss=null,n=Xs(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ps(),a===r){t=Zi(e,t,n);break e}wi(e,t,a,n)}t=t.child}return t;case 5:return so(t),null===e&&ls(t),a=t.type,r=t.pendingProps,o=null!==e?e.memoizedProps:null,i=r.children,nr(a,r)?i=null:null!==o&&nr(a,o)&&(t.flags|=32),Ni(e,t),wi(e,t,i,n),t.child;case 6:return null===e&&ls(t),null;case 13:return Pi(e,t,n);case 4:return ao(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=Qs(t,null,a,n):wi(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,ki(e,t,a,r=t.elementType===a?r:gs(a,r),n);case 7:return wi(e,t,t.pendingProps,n),t.child;case 8:case 12:return wi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,r=t.pendingProps,o=t.memoizedProps,i=r.value,Nr(ys,a._currentValue),a._currentValue=i,null!==o)if(ia(o.value,i)){if(o.children===r.children&&!Ar.current){t=Zi(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var c=o.dependencies;if(null!==c){i=o.child;for(var l=c.firstContext;null!==l;){if(l.context===a){if(1===o.tag){(l=Ds(-1,n&-n)).tag=2;var u=o.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?l.next=l:(l.next=d.next,d.next=l),u.pending=l}}o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Ss(o.return,n,t),c.lanes|=n;break}l=l.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(s(341));i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Ss(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}wi(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=t.pendingProps.children,Ts(t,n),a=a(r=Is(r)),t.flags|=1,wi(e,t,a,n),t.child;case 14:return r=gs(a=t.type,t.pendingProps),Si(e,t,a,r=gs(a.type,r),n);case 15:return Ti(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:gs(a,r),ji(e,t),t.tag=1,Fr(a)?(e=!0,Mr(t)):e=!1,Ts(t,n),Gs(t,a,r),Zs(t,a,r,n),Ai(null,t,a,!0,e,n);case 19:return Gi(e,t,n);case 22:return Ii(e,t,n)}throw Error(s(156,t.tag))};var ql="function"===typeof reportError?reportError:function(e){console.error(e)};function Yl(e){this._internalRoot=e}function Ql(e){this._internalRoot=e}function Xl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Jl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function $l(){}function eu(e,t,n,a,r){var s=n._reactRootContainer;if(s){var o=s;if("function"===typeof r){var i=r;r=function(){var e=Zl(o);i.call(e)}}jl(t,o,e,r)}else o=function(e,t,n,a,r){if(r){if("function"===typeof a){var s=a;a=function(){var e=Zl(o);s.call(e)}}var o=Gl(t,a,e,0,null,!1,0,"",$l);return e._reactRootContainer=o,e[fr]=o.current,Va(8===e.nodeType?e.parentNode:e),dl(),o}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof a){var i=a;a=function(){var e=Zl(c);i.call(e)}}var c=Ul(e,0,!1,null,0,!1,0,"",$l);return e._reactRootContainer=c,e[fr]=c.current,Va(8===e.nodeType?e.parentNode:e),dl((function(){jl(t,c,n,a)})),c}(n,t,e,r,a);return Zl(o)}Ql.prototype.render=Yl.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));jl(e,t,null,null)},Ql.prototype.unmount=Yl.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;dl((function(){jl(null,e,null,null)})),t[fr]=null}},Ql.prototype.unstable_scheduleHydration=function(e){if(e){var t=Tt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Dt.length&&0!==t&&t<Dt[n].priority;n++);Dt.splice(n,0,e),0===n&&zt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(bt(t,1|n),rl(t,Xe()),0===(6&Ac)&&(Gc=Xe()+500,Vr()))}break;case 13:dl((function(){var t=As(e,1);if(null!==t){var n=tl();al(t,e,1,n)}})),Hl(e,1)}},kt=function(e){if(13===e.tag){var t=As(e,134217728);if(null!==t)al(t,e,134217728,tl());Hl(e,134217728)}},St=function(e){if(13===e.tag){var t=nl(e),n=As(e,t);if(null!==n)al(n,e,t,tl());Hl(e,t)}},Tt=function(){return vt},It=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},ke=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=wr(a);if(!r)throw Error(s(90));H(a),J(a,r)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ee=ul,Ae=dl;var tu={usingClientEntryPoint:!1,Events:[vr,xr,wr,Ne,Ce,ul]},nu={findFiberByHostInstance:br,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},au={bundleType:nu.bundleType,version:nu.version,rendererPackageName:nu.rendererPackageName,rendererConfig:nu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:nu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ru=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ru.isDisabled&&ru.supportsFiber)try{rt=ru.inject(au),st=ru}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tu,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Xl(t))throw Error(s(200));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Xl(e))throw Error(s(299));var n=!1,a="",r=ql;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=Ul(e,1,!1,null,0,n,0,a,r),e[fr]=t.current,Va(8===e.nodeType?e.parentNode:e),new Yl(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return e=null===(e=Ze(t))?null:e.stateNode},t.flushSync=function(e){return dl(e)},t.hydrate=function(e,t,n){if(!Jl(t))throw Error(s(200));return eu(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Xl(e))throw Error(s(405));var a=null!=n&&n.hydratedSources||null,r=!1,o="",i=ql;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Gl(t,null,e,1,null!=n?n:null,r,0,o,i),e[fr]=t.current,Va(e),a)for(e=0;e<a.length;e++)r=(r=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Ql(t)},t.render=function(e,t,n){if(!Jl(t))throw Error(s(200));return eu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Jl(e))throw Error(s(40));return!!e._reactRootContainer&&(dl((function(){eu(null,null,e,!1,(function(){e._reactRootContainer=null,e[fr]=null}))})),!0)},t.unstable_batchedUpdates=ul,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Jl(n))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return eu(e,t,n,!1,a)},t.version="18.2.0-next-9e3b772b8-20220608"},4391:(e,t,n)=>{"use strict";var a=n(7950);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},7950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(2730)},7029:function(e,t,n){var a;a=function(e){return function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(e,t,n){"use strict";n.r(t);var a=n("react"),r=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},e(t,n)};return function(t,n){function a(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(a.prototype=n.prototype,new a)}}(),s=function(){return s=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},s.apply(this,arguments)},o=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};function i(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}"undefined"!==typeof window&&(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(e){var t=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return t?new Promise((function(n,a){t.call(navigator,e,n,a)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}));var c=function(e){function t(t){var n=e.call(this,t)||this;return n.canvas=null,n.ctx=null,n.requestUserMediaId=0,n.unmounted=!1,n.state={hasUserMedia:!1},n}return r(t,e),t.prototype.componentDidMount=function(){var e=this.state,t=this.props;this.unmounted=!1,i()?(e.hasUserMedia||this.requestUserMedia(),t.children&&"function"!=typeof t.children&&console.warn("children must be a function")):t.onUserMediaError("getUserMedia not supported")},t.prototype.componentDidUpdate=function(e){var t=this.props;if(i()){var n=JSON.stringify(e.audioConstraints)!==JSON.stringify(t.audioConstraints),a=JSON.stringify(e.videoConstraints)!==JSON.stringify(t.videoConstraints),r=e.minScreenshotWidth!==t.minScreenshotWidth,s=e.minScreenshotHeight!==t.minScreenshotHeight;(a||r||s)&&(this.canvas=null,this.ctx=null),(n||a)&&(this.stopAndCleanup(),this.requestUserMedia())}else t.onUserMediaError("getUserMedia not supported")},t.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},t.stopMediaStream=function(e){e&&(e.getVideoTracks&&e.getAudioTracks?(e.getVideoTracks().map((function(t){e.removeTrack(t),t.stop()})),e.getAudioTracks().map((function(t){e.removeTrack(t),t.stop()}))):e.stop())},t.prototype.stopAndCleanup=function(){var e=this.state;e.hasUserMedia&&(t.stopMediaStream(this.stream),e.src&&window.URL.revokeObjectURL(e.src))},t.prototype.getScreenshot=function(e){var t=this.state,n=this.props;if(!t.hasUserMedia)return null;var a=this.getCanvas(e);return a&&a.toDataURL(n.screenshotFormat,n.screenshotQuality)},t.prototype.getCanvas=function(e){var t=this.state,n=this.props;if(!this.video)return null;if(!t.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var a=this.video.videoWidth,r=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var s=a/r;r=(a=n.minScreenshotWidth||this.video.clientWidth)/s,n.minScreenshotHeight&&r<n.minScreenshotHeight&&(a=(r=n.minScreenshotHeight)*s)}this.canvas=document.createElement("canvas"),this.canvas.width=(null===e||void 0===e?void 0:e.width)||a,this.canvas.height=(null===e||void 0===e?void 0:e.height)||r,this.ctx=this.canvas.getContext("2d")}var o=this.ctx,i=this.canvas;return o&&i&&(i.width=(null===e||void 0===e?void 0:e.width)||i.width,i.height=(null===e||void 0===e?void 0:e.height)||i.height,n.mirrored&&(o.translate(i.width,0),o.scale(-1,1)),o.imageSmoothingEnabled=n.imageSmoothing,o.drawImage(this.video,0,0,(null===e||void 0===e?void 0:e.width)||i.width,(null===e||void 0===e?void 0:e.height)||i.height),n.mirrored&&(o.scale(-1,1),o.translate(-i.width,0))),i},t.prototype.requestUserMedia=function(){var e=this,n=this.props,a=function(a,r){var s={video:"undefined"===typeof r||r};n.audio&&(s.audio="undefined"===typeof a||a),e.requestUserMediaId++;var o=e.requestUserMediaId;navigator.mediaDevices.getUserMedia(s).then((function(n){e.unmounted||o!==e.requestUserMediaId?t.stopMediaStream(n):e.handleUserMedia(null,n)})).catch((function(t){e.handleUserMedia(t)}))};if("mediaDevices"in navigator)a(n.audioConstraints,n.videoConstraints);else{var r=function(e){return{optional:[{sourceId:e}]}},s=function(e){var t=e.deviceId;return"string"===typeof t?t:Array.isArray(t)&&t.length>0?t[0]:"object"===typeof t&&t.ideal?t.ideal:null};MediaStreamTrack.getSources((function(e){var t=null,o=null;e.forEach((function(e){"audio"===e.kind?t=e.id:"video"===e.kind&&(o=e.id)}));var i=s(n.audioConstraints);i&&(t=i);var c=s(n.videoConstraints);c&&(o=c),a(r(t),r(o))}))}},t.prototype.handleUserMedia=function(e,t){var n=this.props;if(e||!t)return this.setState({hasUserMedia:!1}),void n.onUserMediaError(e);this.stream=t;try{this.video&&(this.video.srcObject=t),this.setState({hasUserMedia:!0})}catch(a){this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(t)})}n.onUserMedia(t)},t.prototype.render=function(){var e=this,t=this.state,n=this.props,r=n.audio,i=(n.forceScreenshotSourceSize,n.disablePictureInPicture),c=(n.onUserMedia,n.onUserMediaError,n.screenshotFormat,n.screenshotQuality,n.minScreenshotWidth,n.minScreenshotHeight,n.audioConstraints,n.videoConstraints,n.imageSmoothing,n.mirrored),l=n.style,u=void 0===l?{}:l,d=n.children,h=o(n,["audio","forceScreenshotSourceSize","disablePictureInPicture","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style","children"]),p=c?s(s({},u),{transform:(u.transform||"")+" scaleX(-1)"}):u,f={getScreenshot:this.getScreenshot.bind(this)};return a.createElement(a.Fragment,null,a.createElement("video",s({autoPlay:!0,disablePictureInPicture:i,src:t.src,muted:!r,playsInline:!0,ref:function(t){e.video=t},style:p},h)),d&&d(f))},t.defaultProps={audio:!1,disablePictureInPicture:!1,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},t}(a.Component);t.default=c},react:function(t,n){t.exports=e}}).default},e.exports=a(n(5043))},1153:(e,t,n)=>{"use strict";var a=n(5043),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,i=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var a,s={},l=null,u=null;for(a in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)o.call(t,a)&&!c.hasOwnProperty(a)&&(s[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===s[a]&&(s[a]=t[a]);return{$$typeof:r,type:e,key:l,ref:u,props:s,_owner:i.current}}t.jsx=l,t.jsxs=l},4202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),c=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var x=v.prototype=new b;x.constructor=v,m(x,y.prototype),x.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},T={key:!0,ref:!0,__self:!0,__source:!0};function I(e,t,a){var r,s={},o=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)k.call(t,r)&&!T.hasOwnProperty(r)&&(s[r]=t[r]);var c=arguments.length-2;if(1===c)s.children=a;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];s.children=l}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===s[r]&&(s[r]=c[r]);return{$$typeof:n,type:e,key:o,ref:i,props:s,_owner:S.current}}function N(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var C=/\/+/g;function E(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function A(e,t,r,s,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case n:case a:c=!0}}if(c)return o=o(c=e),e=""===s?"."+E(c,0):s,w(o)?(r="",null!=e&&(r=e.replace(C,"$&/")+"/"),A(o,t,r,"",(function(e){return e}))):null!=o&&(N(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,r+(!o.key||c&&c.key===o.key?"":(""+o.key).replace(C,"$&/")+"/")+e)),t.push(o)),1;if(c=0,s=""===s?".":s+":",w(e))for(var l=0;l<e.length;l++){var u=s+E(i=e[l],l);c+=A(i,t,r,u,o)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),l=0;!(i=e.next()).done;)c+=A(i=i.value,t,r,u=s+E(i,l++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return c}function _(e,t,n){if(null==e)return e;var a=[],r=0;return A(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function R(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var F={current:null},D={transition:null},O={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:D,ReactCurrentOwner:S};t.Children={map:_,forEach:function(e,t,n){_(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return _(e,(function(){t++})),t},toArray:function(e){return _(e,(function(e){return e}))||[]},only:function(e){if(!N(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=r,t.Profiler=o,t.PureComponent=v,t.StrictMode=s,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),s=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=S.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(l in t)k.call(t,l)&&!T.hasOwnProperty(l)&&(r[l]=void 0===t[l]&&void 0!==c?c[l]:t[l])}var l=arguments.length-2;if(1===l)r.children=a;else if(1<l){c=Array(l);for(var u=0;u<l;u++)c[u]=arguments[u+2];r.children=c}return{$$typeof:n,type:e.type,key:s,ref:o,props:r,_owner:i}},t.createContext=function(e){return(e={$$typeof:c,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=I,t.createFactory=function(e){var t=I.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=N,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:R}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return F.current.useCallback(e,t)},t.useContext=function(e){return F.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return F.current.useDeferredValue(e)},t.useEffect=function(e,t){return F.current.useEffect(e,t)},t.useId=function(){return F.current.useId()},t.useImperativeHandle=function(e,t,n){return F.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return F.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return F.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return F.current.useMemo(e,t)},t.useReducer=function(e,t,n){return F.current.useReducer(e,t,n)},t.useRef=function(e){return F.current.useRef(e)},t.useState=function(e){return F.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return F.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return F.current.useTransition()},t.version="18.2.0"},5043:(e,t,n)=>{"use strict";e.exports=n(4202)},579:(e,t,n)=>{"use strict";e.exports=n(1153)},7234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<s(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,o=r>>>1;a<o;){var i=2*(a+1)-1,c=e[i],l=i+1,u=e[l];if(0>s(c,n))l<r&&0>s(u,c)?(e[a]=u,e[l]=n,a=l):(e[a]=c,e[i]=n,a=i);else{if(!(l<r&&0>s(u,n)))break e;e[a]=u,e[l]=n,a=l}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,c=i.now();t.unstable_now=function(){return i.now()-c}}var l=[],u=[],d=1,h=null,p=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function x(e){for(var t=a(u);null!==t;){if(null===t.callback)r(u);else{if(!(t.startTime<=e))break;r(u),t.sortIndex=t.expirationTime,n(l,t)}t=a(u)}}function w(e){if(g=!1,x(e),!m)if(null!==a(l))m=!0,D(k);else{var t=a(u);null!==t&&O(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(N),N=-1),f=!0;var s=p;try{for(x(n),h=a(l);null!==h&&(!(h.expirationTime>n)||e&&!A());){var o=h.callback;if("function"===typeof o){h.callback=null,p=h.priorityLevel;var i=o(h.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?h.callback=i:h===a(l)&&r(l),x(n)}else r(l);h=a(l)}if(null!==h)var c=!0;else{var d=a(u);null!==d&&O(w,d.startTime-n),c=!1}return c}finally{h=null,p=s,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,T=!1,I=null,N=-1,C=5,E=-1;function A(){return!(t.unstable_now()-E<C)}function _(){if(null!==I){var e=t.unstable_now();E=e;var n=!0;try{n=I(!0,e)}finally{n?S():(T=!1,I=null)}}else T=!1}if("function"===typeof v)S=function(){v(_)};else if("undefined"!==typeof MessageChannel){var R=new MessageChannel,F=R.port2;R.port1.onmessage=_,S=function(){F.postMessage(null)}}else S=function(){y(_,0)};function D(e){I=e,T||(T=!0,S())}function O(e,n){N=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,D(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return a(l)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,r,s){var o=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?o+s:o:s=o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:d++,callback:r,priorityLevel:e,startTime:s,expirationTime:i=s+i,sortIndex:-1},s>o?(e.sortIndex=s,n(u,e),null===a(l)&&e===a(u)&&(g?(b(N),N=-1):g=!0,O(w,s-o))):(e.sortIndex=i,n(l,e),m||f||(m=!0,D(k))),e},t.unstable_shouldYield=A,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},8853:(e,t,n)=>{"use strict";e.exports=n(7234)},4334:(e,t,n)=>{var a=n(7359),r=n(7066),s=n(9016),o=n(9538),i=n(6288),c=n(5262),l=n(2430);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=c,e.exports=l},7359:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function c(e,t){var n=new o(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.alea=c}(0,e=n.nmd(e),n.amdD)},5262:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.tychei=c}(0,e=n.nmd(e),n.amdD)},7066:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor128=c}(0,e=n.nmd(e),n.amdD)},6288:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,o,i=[],c=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,c=Math.max(c,t.length)),r=0,s=-32;s<c;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;e.w=o,e.X=i,e.i=r}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor4096=c}(0,e=n.nmd(e),n.amdD)},9538:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorshift7=c}(0,e=n.nmd(e),n.amdD)},9016:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorwow=c}(0,e=n.nmd(e),n.amdD)},2430:function(e,t,n){var a;!function(r,s,o){var i,c=256,l=o.pow(c,6),u=o.pow(2,52),d=2*u,h=c-1;function p(e,t,n){var a=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(c):(e=new Uint8Array(c),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(s)]}}():e,3),a),p=new f(a),v=function(){for(var e=p.g(6),t=l,n=0;e<u;)e=(e+n)*c,t*=c,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,y(b(p.S),s),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,p),e.state=function(){return m(p,{})}),n?(o.random=e,t):e})(v,h,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<c;)o[r]=r++;for(r=0;r<c;r++)o[r]=o[s=h&s+e[r%n]+(t=o[r])],o[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,o=a.S;e--;)t=o[r=h&r+1],n=n*c+o[h&(o[r]=o[s=h&s+t])+(o[s]=t)];return a.i=r,a.j=s,n})(c)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(s){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[h&r]=h&(n^=19*t[h&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),s),e.exports){e.exports=p;try{i=n(1234)}catch(v){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},5817:()=>{},8590:()=>{},4530:()=>{},8108:()=>{},551:()=>{},1234:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,a)=>(n.f[a](e,t),t)),[])),n.u=e=>"static/js/"+e+".f3299420.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="abr:";n.l=(a,r,s,o)=>{if(e[a])e[a].push(r);else{var i,c;if(void 0!==s)for(var l=document.getElementsByTagName("script"),u=0;u<l.length;u++){var d=l[u];if(d.getAttribute("src")==a||d.getAttribute("data-webpack")==t+s){i=d;break}}i||(c=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,n.nc&&i.setAttribute("nonce",n.nc),i.setAttribute("data-webpack",t+s),i.src=a),e[a]=[r];var h=(t,n)=>{i.onerror=i.onload=null,clearTimeout(p);var r=e[a];if(delete e[a],i.parentNode&&i.parentNode.removeChild(i),r&&r.forEach((e=>e(n))),t)return t(n)},p=setTimeout(h.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=h.bind(null,i.onerror),i.onload=h.bind(null,i.onload),c&&document.head.appendChild(i)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/",(()=>{var e={792:0};n.f.j=(t,a)=>{var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)a.push(r[2]);else{var s=new Promise(((n,a)=>r=e[t]=[n,a]));a.push(r[2]=s);var o=n.p+n.u(t),i=new Error;n.l(o,(a=>{if(n.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=a&&("load"===a.type?"missing":a.type),o=a&&a.target&&a.target.src;i.message="Loading chunk "+t+" failed.\n("+s+": "+o+")",i.name="ChunkLoadError",i.type=s,i.request=o,r[1](i)}}),"chunk-"+t,t)}};var t=(t,a)=>{var r,s,o=a[0],i=a[1],c=a[2],l=0;if(o.some((t=>0!==e[t]))){for(r in i)n.o(i,r)&&(n.m[r]=i[r]);if(c)c(n)}for(t&&t(a);l<o.length;l++)s=o[l],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0},a=self.webpackChunkabr=self.webpackChunkabr||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{addImpl:()=>td,bincountImpl:()=>Hd,bincountReduceImpl:()=>qd,bitwiseAndImpl:()=>Qd,castImpl:()=>Qu,ceilImpl:()=>eh,concatImpl:()=>oh,equalImpl:()=>jh,expImpl:()=>tp,expm1Impl:()=>op,floorImpl:()=>Sp,gatherNdImpl:()=>Rp,gatherV2Impl:()=>Dp,greaterEqualImpl:()=>Pp,greaterImpl:()=>Lp,lessEqualImpl:()=>Xp,lessImpl:()=>qp,linSpaceImpl:()=>ef,logImpl:()=>nf,maxImpl:()=>bf,maximumImpl:()=>wf,minimumImpl:()=>Rf,multiplyImpl:()=>Mh,negImpl:()=>Uf,notEqualImpl:()=>Yf,prodImpl:()=>cm,raggedGatherImpl:()=>pm,raggedRangeImpl:()=>gm,raggedTensorToTensorImpl:()=>km,rangeImpl:()=>Tm,rsqrtImpl:()=>Mm,scatterImpl:()=>Bm,sigmoidImpl:()=>Uu,simpleAbsImpl:()=>ud,sliceImpl:()=>Gd,sparseFillEmptyRowsImpl:()=>sg,sparseReshapeImpl:()=>ig,sparseSegmentReductionImpl:()=>lg,sqrtImpl:()=>fg,staticRegexReplaceImpl:()=>wg,stridedSliceImpl:()=>Ng,stringNGramsImpl:()=>Ag,stringSplitImpl:()=>Fg,stringToHashBucketFastImpl:()=>Og,subImpl:()=>hp,tileImpl:()=>Ug,topKImpl:()=>Zg,transposeImpl:()=>yd,uniqueImpl:()=>Jg});var t={};n.r(t),n.d(t,{hasBrowserEnv:()=>QC,hasStandardBrowserEnv:()=>XC,hasStandardBrowserWebWorkerEnv:()=>$C});var a=n(5043),r=n(4391),s=n(7029),o=n.n(s),i=n(263),c=n(9554),l=n(7794),u=n(803),d=n(319);const h={kernelName:c.ljI,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.l)(e,(0,d.P)((0,l.w)(n,"float32"),-1))}}};var p=n(4974),f=n(1011),m=n(1997),g=n(191),y=n(7738),b=n(7951);const v={kernelName:c.Vvy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,y.E)((0,l.w)(n,"float32")),a=(0,g.R)((0,b.j)((0,m.d)(1),t));return(0,f.H)((0,p.y)(e,a))}}}},x={kernelName:c.PH8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,g.R)((0,b.j)((0,y.E)((0,l.w)(n,"float32")),1));return(0,p.y)(e,t)}}}};var w=n(8805),k=n(5583),S=n(7382);const T={kernelName:c.OMN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=w.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let t=e;const a=w.getReductionAxes(n.shape,r);return a.length>0&&(t=(0,S.c)(t,a)),(0,k.t)(t,n.shape)},b:()=>{let t=e;const n=w.getReductionAxes(a.shape,r);return n.length>0&&(t=(0,S.c)(t,n)),(0,k.t)(t,a.shape)}}}},I={kernelName:c.EkD,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}};var N=n(3290);const C={kernelName:c.Jp_,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,N.P)(n)}}},E={kernelName:c.p_m,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,N.P)(n)}}},A={kernelName:c.QKF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.y)(e,(0,g.R)((0,b.j)((0,m.d)(1),(0,y.E)((0,l.w)(n,"float32")))))}}};var _=n(7242);const R={kernelName:c.epO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,g.R)((0,_.W)((0,m.d)(1),(0,y.E)((0,l.w)(n,"float32"))));return(0,p.y)(e,t)}}}},F={kernelName:c.lxb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,w.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,_.W)((0,y.E)(n),(0,y.E)(a));let s=(0,u.l)(e,(0,p.y)(a,t));const o=(0,w.getReductionAxes)(n.shape,r);return o.length>0&&(s=(0,S.c)(s,o)),(0,k.t)(s,n.shape)},b:()=>{const t=(0,_.W)((0,y.E)(n),(0,y.E)(a));let s=(0,f.H)((0,u.l)(e,(0,p.y)(n,t)));const o=(0,w.getReductionAxes)(a.shape,r);return o.length>0&&(s=(0,S.c)(s,o)),(0,k.t)(s,a.shape)}}}},D={kernelName:c.TyE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.y)(e,(0,_.W)((0,y.E)((0,l.w)(n,"float32")),1))}}},O={kernelName:c.zP9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.y)(e,(0,b.j)((0,m.d)(1),(0,y.E)((0,l.w)(n,"float32"))))}}};var L=n(2164),M=n(4148),z=n(1426),P=n(7538),B=n(7892);const W=(0,B.op)({avgPool3dGrad_:function(e,t,n,a,r,s){const o=(0,M.YT)(e,"dy","avgPool3dGrad"),i=(0,M.YT)(t,"input","avgPool3dGrad");let l=o,u=i,d=!1;4===i.rank&&(d=!0,l=(0,k.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=(0,k.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),z.vA(5===l.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(l.rank,"."))),z.vA(5===u.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(u.rank,"."))),(0,P.s_)("avgPool3dGrad",r,s);const h={dy:l,input:u},p={filterSize:n,strides:a,pad:r,dimRoundingMode:s},f=L.T2.runKernel(c.wwC,h,p);return d?(0,k.t)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),U={kernelName:c.cS,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>W(e,a,r,s,o,i)}}};const V=(0,B.op)({avgPoolGrad_:function(e,t,n,a,r){const s=(0,M.YT)(e,"dy","avgPoolGrad"),o=(0,M.YT)(t,"input","avgPoolGrad");z.vA(o.rank===s.rank,(()=>"Rank of input (".concat(o.rank,") does not match rank of dy (").concat(s.rank,")")));let i=o,l=s,u=!1;3===o.rank&&(u=!0,i=(0,k.t)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=(0,k.t)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),z.vA(4===l.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(l.rank,"."))),z.vA(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const d={dy:l,input:i},h={filterSize:n,strides:a,pad:r},p=L.T2.runKernel(c.VCH,d,h);return u?(0,k.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),G={kernelName:c.ho8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o}=n;return{x:()=>V(e,a,r,s,o)}}};var j=n(5162);const Z={kernelName:c.jAQ,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>(0,j.N)(e,r,!1,!1),b:()=>(0,j.N)(e,a,!0,!1)}:s&&!o?{a:()=>(0,j.N)(r,e,!1,!0),b:()=>(0,j.N)(a,e,!1,!1)}:{a:()=>(0,j.N)(r,e,!0,!0),b:()=>(0,j.N)(e,a,!0,!0)}:{a:()=>(0,j.N)(e,r,!1,!0),b:()=>(0,j.N)(a,e,!0,!1)}}};var K=n(3585);const H={kernelName:c.Ik2,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>(0,K.e)(e,a,r)}}},q={kernelName:c.LB5,gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let c=r.length-1;c>=0;c--)if(r[c]===s[c])o[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>(0,S.c)(e,i,!0)}}},Y={kernelName:c.KXH,gradFunc:e=>({x:()=>e.clone()})},Q={kernelName:c.QDP,gradFunc:e=>({x:()=>(0,N.P)(e)})};var X=n(9996),J=n(827),$=n(5692),ee=n(3986);const te={kernelName:c.vaV,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>(0,ee._)((0,$.n)((0,X.D)(a,r),(0,J.I)(a,s)),e,(0,N.P)(e))}}},ne={kernelName:c.$zE,inputsToSave:["x"],gradFunc:h.gradFunc};var ae=n(5181);const re={kernelName:c.$dB,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,s=(0,z.Y6)(r,t[0].shape)[0],o=a.map((e=>e[s]));return(0,ae.l)(e,o,s).map((e=>()=>e))}};var se=n(6927),oe=n(1565);const ie={kernelName:c.p2J,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:o,pad:i,dataFormat:c}=n;return z.vA(P.Dh(s),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"))),{x:()=>(0,oe.v)(a.shape,e,r,o,i,c),filter:()=>(0,se.H)(a,e,r.shape,o,i,c)}}};var ce=n(4969);const le={kernelName:c.jfg,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>(0,ce.X)(e,r,s,o,i,1,c),filter:()=>(0,se.H)(e,a,r.shape,s,o,i,c)}}};const ue=(0,B.op)({conv3DBackpropFilter_:function(e,t,n,a,r){let s=e;4===e.rank&&(s=(0,k.t)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=(0,k.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),z.vA(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(s.shape,"."))),z.vA(5===o.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(o.shape,"."))),z.vA(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),z.vA(s.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(s.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),z.vA(o.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(o.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:s,dy:o},l={strides:a,pad:r,filterShape:n};return L.T2.runKernel(c.iGz,i,l)}});var de=n(6410);const he={kernelName:c.A1h,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;z.vA((0,P.Dh)(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=t;return{x:()=>(0,de.c)(o.shape,e,i,r,s),filter:()=>ue(o,e,i.shape,r,s)}}};var pe=n(9519);const fe={kernelName:c.Mn0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.l)((0,f.H)((0,pe.F)((0,l.w)(n,"float32"))),e)}}};var me=n(8143);const ge={kernelName:c.MnK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.l)((0,me.L)((0,l.w)(n,"float32")),e)}}};var ye=n(9235),be=n(7167),ve=n(2154);const xe={kernelName:c.nY8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const t=(0,ye.Em)([r],a.rank);let n=(0,be.r)(e,r,s,!o);return null!=t&&(n=(0,ve.m)(n,t)),n}}}};var we=n(7399),ke=n(261);const Se={kernelName:c.tGH,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;z.vA(P.Dh(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=t;return z.vA(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),z.vA(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),z.vA(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),z.vA(P.G0(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),P.s_("depthwiseConv2d",s,o),{x:()=>(0,ke.l)(c.shape,e,l,r,s,i,o),filter:()=>(0,we.x)(c,e,l.shape,r,s,i,o)}}},Te={kernelName:c.jxD,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,s={x:a,filter:r,dy:e},o={x:a,filter:r,dy:e};return{x:()=>L.T2.runKernel(c.bP9,s,n),filter:()=>L.T2.runKernel(c.pk0,o,n)}}},Ie={kernelName:c.Pah,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>L.T2.runKernel(c.rsH,a)}}};var Ne=n(5462);const Ce={kernelName:c._s9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=(0,u.l)((0,Ne.o)((0,f.H)((0,y.E)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,u.l)(e,a)}}},Ee={kernelName:c.ox3,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.l)(e,n)}}},Ae={kernelName:c.ybN,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,k.t)(e,n.shape)}}},_e={kernelName:c.ybj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.l)(e,(0,Ne.o)(n))}}},Re={kernelName:c.ZgB,gradFunc:e=>({x:()=>(0,N.P)(e)})},Fe={kernelName:c.ElG,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,w.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,p.y)(e,(0,l.w)(a,"float32")),s=(0,w.getReductionAxes)(n.shape,r);return s.length>0?(0,k.t)((0,S.c)(t,s),n.shape):t},b:()=>{let t=(0,u.l)(e,(0,l.w)(n,"float32"));const s=(0,w.getReductionAxes)(a.shape,r);s.length>0&&(t=(0,k.t)((0,S.c)(t,s),a.shape));const o=(0,y.E)(a);return(0,f.H)((0,p.y)(t,(0,l.w)(o,"float32")))}}}};var De=n(6777),Oe=n(3017);const Le={kernelName:c.i5R,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,o,i]=t,c=null==i?(0,m.d)(1):i,l=(0,w.getReductionAxes)(s.shape,r.shape),d=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)d.push(r.shape[e]);d.push(1)}const h=(0,b.j)(r,s),p=(0,u.l)(e,c),f=(0,De.Z)((0,_.W)(o,(0,m.d)(a))),g=(0,u.l)((0,u.l)((0,u.l)(f,f),f),(0,m.d)(-.5));return{x:()=>1===s.rank?(0,k.t)((0,u.l)((0,u.l)(e,(0,Oe.V)((0,k.t)(f,[1,1,1,s.shape[0]]),d)),c),r.shape):(0,k.t)((0,u.l)((0,u.l)(e,f),c),r.shape),mean:()=>{let e=(0,u.l)((0,u.l)(f,(0,m.d)(-1)),p);return 1===s.rank&&(e=(0,S.c)(e,l)),(0,k.t)(e,s.shape)},variance:()=>{let e=(0,u.l)((0,u.l)(g,h),p);return 1===s.rank&&(e=(0,S.c)(e,l)),(0,k.t)(e,s.shape)},scale:()=>{const t=(0,u.l)(h,f);let n=(0,u.l)(e,t);return 1===s.rank&&(n=(0,S.c)(n,l)),(0,k.t)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=(0,S.c)(t,l)),(0,k.t)(t,s.shape)}}}};var Me=n(901),ze=n(5149);const Pe={kernelName:c.mxL,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s,batchDims:o}=n,i=(0,z.Y6)(s,a.shape)[0],c=(e,t,n)=>()=>{const a=e.shape,r=t.size,o=a.slice(0,i),c=o.length,l=a.slice(s,a.length).slice(1),u=l.length,d=Be(0,c),h=Be(c+1,c+1+u),p=We([o,[r],l]),f=(0,k.t)(n,p),m=(0,k.t)(t,[r]),g=We([[c],d,h]),y=(0,ve.m)(f,g);let b=(0,ze.z)(y,m,e.shape[i]);const v=(0,ye.gx)(g);return b=(0,ve.m)(b,v),b};if(1===o){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=(0,Me.t)(n.map(((t,n)=>c(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>r}}return{x:c(a,r,e),indices:()=>r}}};function Be(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function We(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const Ue={kernelName:c.lLS,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,N.P)(n),b:()=>(0,N.P)(a)}}},Ve={kernelName:c.lzr,gradFunc:e=>({x:()=>(0,l.w)(e,"float32")})},Ge={kernelName:c.gIW,gradFunc:e=>({x:()=>(0,N.P)(e)})},je={kernelName:c.E3$,gradFunc:e=>({x:()=>(0,N.P)(e)})},Ze={kernelName:c.iPs,gradFunc:e=>({x:()=>(0,N.P)(e)})};var Ke=n(2759);const He={kernelName:c.X0$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=(0,Ke.r)(a,0);return{x:()=>(0,ee._)(s,e,(0,u.l)(e,r))}}},qe={kernelName:c.Cg$,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.y)(e,(0,_.W)(n,1))}}},Ye={kernelName:c.tG8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.y)(e,(0,l.w)(n,"float32"))}}},Qe={kernelName:c.zfU,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=(0,Ne.o)(a);return(0,b.j)(e,(0,u.l)((0,S.c)(e,r,!0),t))}}}};const Xe=(0,B.op)({localResponseNormalizationBackprop_:function(e,t,n){const a={x:e,y:t,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return L.T2.runKernel(c.ToN,a,r)}}),Je={kernelName:c.jM4,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:o,alpha:i,beta:c}=n;return{x:()=>Xe(a,r,e,s,o,i,c)}}};var $e=n(7457);function et(e,t,n,a){return t.rank<n.rank&&(t=(0,k.t)(t,ye.SM(t.shape,a))),e.rank<n.rank&&(e=(0,k.t)(e,ye.SM(e.shape,a))),{x:()=>(0,u.l)(e,(0,l.w)((0,$e.L)(n,t),e.dtype))}}const tt={kernelName:c.VAI,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],o=et(e,t[1],s,z.Y6(r,s.shape));return{x:()=>o.x()}}};var nt=n(8320);const at={kernelName:c.LDN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,u.l)(e,(0,l.w)((0,X.D)(n,a),"float32")),b:()=>(0,u.l)(e,(0,l.w)((0,nt.M)(n,a),"float32"))}}};const rt=(0,B.op)({maxPool3dGrad_:function(e,t,n,a,r,s,o){const i=(0,M.YT)(e,"dy","maxPool3dGrad"),l=(0,M.YT)(t,"input","maxPool3dGrad"),u=(0,M.YT)(n,"output","maxPool3dGrad");let d=i,h=l,p=u,f=!1;4===l.rank&&(f=!0,d=(0,k.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=(0,k.t)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=(0,k.t)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),z.vA(5===d.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(d.rank,"."))),z.vA(5===h.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,"."))),z.vA(5===p.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(p.rank,"."))),(0,P.s_)("maxPool3dGrad",s,o);const m={dy:d,input:h,output:p},g={filterSize:a,strides:r,pad:s,dimRoundingMode:o},y=L.T2.runKernel(c.cHb,m,g);return f?(0,k.t)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),st={kernelName:c.ySp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>rt(e,a,r,s,o,i,c)}}};const ot=(0,B.op)({maxPoolGrad_:function(e,t,n,a,r,s,o){const i=(0,M.YT)(e,"dy","maxPoolGrad"),l=(0,M.YT)(t,"input","maxPoolGrad"),u=(0,M.YT)(n,"output","maxPoolGrad");z.vA(l.rank===i.rank,(()=>"Rank of input (".concat(l.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),z.vA(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),z.vA(4===l.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(l.rank,"."))),P.s_("maxPoolGrad",s,o);const d={dy:i,input:l,output:u},h={filterSize:a,strides:r,pad:s,dimRoundingMode:o};return L.T2.runKernel(c.RXX,d,h)}}),it={kernelName:c.t3d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>ot(e,a,r,s,o,i)}}};var ct=n(4616);const lt={kernelName:c.g5A,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=z.Y6(r,a.shape),o=(0,ye.lb)(a.shape,s)[1],i=z.Ze(o);return{x:()=>{const t=a.shape.slice();s.forEach((e=>{t[e]=1}));const n=(0,k.t)(e,t);return(0,p.y)((0,u.l)(n,(0,ct.S)(a.shape,"float32")),i)}}}},ut={kernelName:c.lNG,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,o]=t,i=et(e,o,s,z.Y6(r,s.shape));return{x:()=>i.x()}}},dt={kernelName:c.LG0,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,u.l)(e,(0,l.w)((0,J.I)(n,a),"float32")),b:()=>(0,u.l)(e,(0,l.w)((0,Ke.r)(n,a),"float32"))}}};var ht=n(463);const pt={kernelName:c.x7F,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>(0,ht.d)(e,s,a.shape)}}};var ft=n(8587);const mt={kernelName:c.BLA,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,w.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,w.getReductionAxes)(n.shape,r);return t.length>0?(0,k.t)((0,S.c)(e,t),n.shape):e},b:()=>{const t=(0,u.l)(e,(0,f.H)((0,ft.R)((0,p.y)(n,a)))),s=(0,w.getReductionAxes)(a.shape,r);return s.length>0?(0,k.t)((0,S.c)(t,s),a.shape):t}}}},gt={kernelName:c.xu7,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,w.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,u.l)(e,(0,l.w)(a,"float32")),s=(0,w.getReductionAxes)(n.shape,r);return s.length>0?(0,k.t)((0,S.c)(t,s),n.shape):t},b:()=>{const t=(0,u.l)(e,(0,l.w)(n,"float32")),s=(0,w.getReductionAxes)(a.shape,r);return s.length>0?(0,k.t)((0,S.c)(t,s),a.shape):t}}}},yt={kernelName:c.l0G,gradFunc:e=>({x:()=>(0,f.H)(e)})};var bt=n(4218);const vt={kernelName:c.urI,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,bt.U)(n.shape,"float32")}}},xt={kernelName:c.LWX,gradFunc:e=>({x:()=>(0,N.P)(e)})};var wt=n(3984);const kt={kernelName:c.mM$,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return(0,wt.K)(e,a).map((e=>()=>e))}},St={kernelName:c.ODT,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>(0,ht.d)(e,s,a.shape)}}};var Tt=n(5911),It=n(7587);const Nt={kernelName:c.pyJ,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,o=a,i=w.assertAndGetBroadcastShape(s.shape,o.shape);return{a:()=>{const t=(0,l.w)(o,"float32");let n=(0,u.l)(e,(0,u.l)(t,(0,It.n)(s,(0,b.j)(t,(0,m.d)(1)))));const a=w.getReductionAxes(s.shape,i);return a.length>0&&(n=(0,S.c)(n,a)),(0,k.t)(n,s.shape)},b:()=>{const t=(0,Ke.r)(s,0),n=(0,ee._)(t,(0,Tt.R)(s),(0,N.P)(s));let a=(0,u.l)(e,(0,u.l)(r,n));const c=w.getReductionAxes(o.shape,i);return c.length>0&&(a=(0,S.c)(a,c)),(0,k.t)(a,o.shape)}}}},Ct={kernelName:c.Ncv,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,Ke.r)(n,0);return{x:()=>(0,ee._)(r,e,(0,u.l)(e,a)),alpha:()=>{let t=(0,ee._)(r,(0,N.P)(e),(0,u.l)(e,n));const s=(0,w.getReductionAxes)(a.shape,e.shape);return s.length>0&&(t=(0,S.c)(t,s)),(0,k.t)(t,a.shape)}}}};var Et=n(3739);function At(e,t,n){const a=e.shape.length,r=a-n.length,s=ye.Em(n,a);let o=e;null!=s&&(o=(0,ve.m)(e,s));const i=o.shape.slice(),c=i.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(c);let l=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=(0,k.t)(t,a),s=(0,Et.L)(e,n,!0,!1),o=(0,Et.L)(e,n,!0,!0),i=(0,u.l)(s,o);return(0,u.l)(r,i)}(o.reshape(i),t,r);if(l=l.reshape(o.shape),null!=s){const e=ye.gx(s);l=(0,ve.m)(l,e)}return l}const _t={kernelName:c.kdj,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let s=[];return s=void 0===r||null===r?a.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>At(a,e,s)}}},Rt={kernelName:c.sDr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=w.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{const t=(0,p.y)(e,(0,l.w)(a,"float32")),s=w.getReductionAxes(n.shape,r);return s.length>0?(0,k.t)((0,S.c)(t,s),n.shape):t},b:()=>{let t=(0,u.l)(e,(0,l.w)(n,"float32"));const s=w.getReductionAxes(a.shape,r);s.length>0&&(t=(0,k.t)((0,S.c)(t,s),a.shape));const o=(0,y.E)(a);return(0,f.H)((0,p.y)(t,(0,l.w)(o,"float32")))}}}},Ft={kernelName:c.huO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.y)(e,(0,f.H)((0,y.E)(n)))}}},Dt={kernelName:c.P_L,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=(0,u.l)((0,J.I)(n,6),(0,d.P)(n));return{x:()=>(0,u.l)(e,(0,l.w)(a,"float32"))}}},Ot={kernelName:c.fUj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.l)(e,(0,l.w)((0,d.P)(n),"float32"))}}},Lt={kernelName:c.R23,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,k.t)(e,n.shape)}}},Mt={kernelName:c.hgw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>L.T2.runKernel(c.FCQ,r,n)}}},zt={kernelName:c.jOE,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>L.T2.runKernel(c.XQy,r,n)}}};var Pt=n(7419);const Bt={kernelName:c.D7i,gradFunc:(e,t,n)=>{const{dims:a}=n,r=(0,z.Y6)(a,e.shape);return{x:()=>(0,Pt.B)(e,r)}}},Wt={kernelName:c.hVg,gradFunc:e=>({x:()=>(0,N.P)(e)})},Ut={kernelName:c.TOR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,f.H)((0,p.y)(e,(0,u.l)((0,It.n)(n,1.5),2)))}}};var Vt=n(5344);const Gt={kernelName:c.l6P,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,l.w)((0,N.P)(n),"float32"),t:()=>(0,u.l)(e,(0,l.w)(n,e.dtype)),e:()=>(0,u.l)(e,(0,l.w)((0,Vt.N)(n),e.dtype))}}};var jt=n(3765);const Zt={kernelName:c.u$b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,Ke.r)(n,(0,m.d)(0)),a=(0,m.d)(jt.j),r=(0,m.d)(jt.X),s=(0,u.l)(e,r),o=(0,u.l)((0,u.l)(e,a),(0,Ne.o)((0,l.w)(n,"float32")));return(0,ee._)(t,s,o)}}}},Kt={kernelName:c.vI1,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.l)(e,(0,u.l)(n,(0,b.j)((0,m.d)(1),n)))}}},Ht={kernelName:c.YVe,gradFunc:e=>({x:()=>(0,N.P)(e)})};var qt=n(5894);const Yt={kernelName:c.hql,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.l)((0,qt.g)((0,l.w)(n,"float32")),e)}}};var Qt=n(1164);const Xt={kernelName:c.J3C,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.l)((0,Qt.y)((0,l.w)(n,"float32")),e)}}};var Jt=n(5048),$t=n(4642);const en={kernelName:c.JiE,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,o=a.shape,[i,c]=(0,$t.parseSliceParams)(a,r,s),l=[];for(let u=0;u<e.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>(0,Jt.e)(e,l)}}},tn={kernelName:c.rFG,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=(0,u.l)(e,a);return{logits:()=>(0,b.j)(s,(0,u.l)((0,S.c)(s,[r],true),a))}}};var nn=n(4213);const an={kernelName:c.Fin,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.l)(e,(0,nn.r)(n))}}};var rn=n(2557);const sn={kernelName:c.A8B,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>(0,rn.G)(e,a,r)}}};var on=n(4429);const cn={kernelName:c.Blb,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>(0,on.x)(e,a)}}},ln={kernelName:c.dFH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.y)(e,(0,u.l)((0,g.R)((0,l.w)(n,"float32")),2))}}},un={kernelName:c.M6A,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.l)(e,(0,u.l)((0,l.w)(n,"float32"),2))}}},dn={kernelName:c.Ddj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,m.d)(2);return{a:()=>(0,u.l)(e,(0,u.l)(r,(0,b.j)(n,a))),b:()=>(0,u.l)(e,(0,u.l)(r,(0,b.j)(a,n)))}}},hn={kernelName:c.pnw,gradFunc:e=>({x:()=>(0,N.P)(e)})},pn={kernelName:c.PbM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=w.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let t=e;const a=w.getReductionAxes(n.shape,r);return a.length>0&&(t=(0,S.c)(t,a)),(0,k.t)(t,n.shape)},b:()=>{let t=e;const n=w.getReductionAxes(a.shape,r);return n.length>0&&(t=(0,S.c)(t,n)),(0,k.t)((0,f.H)(t),a.shape)}}}},fn={kernelName:c.WuN,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;(0,z.Y6)(s,a.shape).forEach((e=>{r[e]=1}));const o=(0,k.t)(e,r),i=(0,u.l)(o,(0,ct.S)(a.shape,"float32"));return{x:()=>i}}},mn={kernelName:c.oFs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.y)(e,(0,y.E)((0,qt.g)(n)))}}},gn={kernelName:c.iuW,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.l)((0,b.j)((0,m.d)(1),(0,y.E)(n)),e)}}},yn={kernelName:c.FAs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=(0,N.P)(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=(0,_.W)(t,(0,ht.d)(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=(0,_.W)(t,(0,ht.d)(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)t=(0,_.W)(t,(0,ht.d)(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)t=(0,_.W)(t,(0,ht.d)(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},bn={kernelName:c.wx0,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=ye.gx(r);return{x:()=>(0,ve.m)(e,s)}}},vn={kernelName:c.dXR,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>(0,Me.t)(e,r)}}};var xn=n(4023),wn=n(6178),kn=n(2131);const Sn={kernelName:c.pPe,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,kn.P)(t,(0,N.P)(t)),a=(0,wn.k)(e,n);let r=(0,X.D)(t,(0,m.d)(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=(0,xn.U)(r,i+1);r=(0,$.n)(r,(0,ct.S)(a.shape,"bool"));const o=(0,N.P)(a);return(0,ee._)(r,a,o)}(e,n)}}};const Tn={kernelName:c.xJ3,gradFunc:e=>({x:()=>(0,N.P)(e)})};var In=n(843);const Nn=[h,v,x,T,I,C,E,A,R,F,D,O,U,G,Z,H,q,Y,Q,te,ne,re,le,ie,he,fe,ge,xe,Se,Te,Rt,Ie,Ce,Ee,Ae,_e,Fe,Re,Le,Pe,Ue,Ve,Ge,je,Ze,He,qe,Ye,Qe,Je,tt,tt,at,st,it,lt,ut,dt,pt,mt,gt,yt,vt,xt,kt,St,St,Nt,Ct,_t,Ft,Dt,Ot,Lt,Mt,zt,Bt,Wt,Ut,Gt,Zt,Kt,Ht,Yt,Xt,en,tn,an,sn,sn,cn,cn,ln,dn,un,hn,pn,fn,mn,gn,yn,bn,vn,Sn,Tn];for(const n of Nn)(0,In.kr)(n);var Cn=n(3753),En=n(9494);(0,En.tp)().prototype.abs=function(){return this.throwIfDisposed(),(0,Cn.t)(this)};var An=n(4759);(0,En.tp)().prototype.acos=function(){return this.throwIfDisposed(),(0,An.H)(this)};var _n=n(983);(0,En.tp)().prototype.acosh=function(){return this.throwIfDisposed(),(0,_n.F)(this)},(0,En.tp)().prototype.add=function(e){return this.throwIfDisposed(),(0,_.W)(this,e)};var Rn=n(1802);(0,En.tp)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,Rn.Q)(this,e,t)};var Fn=n(1819);(0,En.tp)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,Fn.b)(this,e,t)};var Dn=n(3068);(0,En.tp)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,Dn.F)(this,e)};var On=n(8482);(0,En.tp)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,On.X)(this,e)},(0,En.tp)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,z.vA)(1===this.size,(()=>"The array must have only 1 element.")),(0,k.t)(this,[])},(0,En.tp)().prototype.asType=function(e){return this.throwIfDisposed(),(0,l.w)(this,e)},(0,En.tp)().prototype.as1D=function(){return this.throwIfDisposed(),(0,k.t)(this,[this.size])},(0,En.tp)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,k.t)(this,[e,t])},(0,En.tp)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,k.t)(this,[e,t,n])},(0,En.tp)().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),(0,k.t)(this,[e,t,n,a])},(0,En.tp)().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),(0,k.t)(this,[e,t,n,a,r])};var Ln=n(3010);(0,En.tp)().prototype.asin=function(){return this.throwIfDisposed(),(0,Ln.q)(this)};var Mn=n(6464);(0,En.tp)().prototype.asinh=function(){return this.throwIfDisposed(),(0,Mn.y)(this)};var zn=n(7803);(0,En.tp)().prototype.atan=function(){return this.throwIfDisposed(),(0,zn.r)(this)};var Pn=n(6349);(0,En.tp)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,Pn.F)(this,e)};var Bn=n(8147);(0,En.tp)().prototype.atanh=function(){return this.throwIfDisposed(),(0,Bn.r)(this)};var Wn=n(8650);(0,En.tp)().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),(0,Wn.$)(this,e,t,n,a)},(0,En.tp)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,rn.G)(this,e,t)};var Un=n(7237);(0,En.tp)().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),(0,Un.$)(this,e,t,n,a,r)};var Vn=n(4920);(0,En.tp)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Vn.h)(this,e)},(0,En.tp)().prototype.cast=function(e){return this.throwIfDisposed(),(0,l.w)(this,e)};var Gn=n(5396);(0,En.tp)().prototype.ceil=function(){return this.throwIfDisposed(),(0,Gn.m)(this)};var jn=n(3829);(0,En.tp)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,jn.z)(this,e,t)},(0,En.tp)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof En.qY&&(e=[e]),(0,on.x)([this,...e],t)};var Zn=n(9870);(0,En.tp)().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,Zn.k)(this,e,t,n,a,r,s)};var Kn=n(1137);(0,En.tp)().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),(0,Kn.w)(this,e,t,n,a,r)},(0,En.tp)().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,ce.X)(this,e,t,n,a,r,s)},(0,En.tp)().prototype.cos=function(){return this.throwIfDisposed(),(0,qt.g)(this)},(0,En.tp)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Qt.y)(this)},(0,En.tp)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),(0,Et.L)(this,e,t,n)},(0,En.tp)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,be.r)(this,e,t,n)};var Hn=n(1719);(0,En.tp)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,Hn.R)(this,e,t)};var qn=n(9899);(0,En.tp)().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,qn.G)(this,e,t,n,a,r,s)};var Yn=n(3789);(0,En.tp)().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),(0,Yn.X)(this,e,t,n,a,r)};var Qn=n(44);(0,En.tp)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,Qn.e)(this,e)},(0,En.tp)().prototype.div=function(e){return this.throwIfDisposed(),(0,p.y)(this,e)};var Xn=n(6434);(0,En.tp)().prototype.dot=function(e){return this.throwIfDisposed(),(0,Xn.O)(this,e)};var Jn=n(3645);(0,En.tp)().prototype.elu=function(){return this.throwIfDisposed(),(0,Jn.P)(this)},(0,En.tp)().prototype.equal=function(e){return this.throwIfDisposed(),(0,$e.L)(this,e)};var $n=n(8810);(0,En.tp)().prototype.erf=function(){return this.throwIfDisposed(),(0,$n.Y)(this)};var ea=n(8826);(0,En.tp)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,ea.p)(this,e,t)},(0,En.tp)().prototype.exp=function(){return this.throwIfDisposed(),(0,Ne.o)(this)},(0,En.tp)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,xn.U)(this,e)};var ta=n(2520);(0,En.tp)().prototype.expm1=function(){return this.throwIfDisposed(),(0,ta.I)(this)};var na=n(3062);(0,En.tp)().prototype.fft=function(){return this.throwIfDisposed(),(0,na.h)(this)},(0,En.tp)().prototype.flatten=function(){return this.throwIfDisposed(),(0,k.t)(this,[this.size])},(0,En.tp)().prototype.floor=function(){return this.throwIfDisposed(),(0,ft.R)(this)};var aa=n(3612);(0,En.tp)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,aa.w)(this,e)},(0,En.tp)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),(0,wn.k)(this,e,t,n)},(0,En.tp)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,X.D)(this,e)},(0,En.tp)().prototype.greater=function(e){return this.throwIfDisposed(),(0,Ke.r)(this,e)};var ra=n(1405);(0,En.tp)().prototype.ifft=function(){return this.throwIfDisposed(),(0,ra.K)(this)};var sa=n(7307);(0,En.tp)().prototype.irfft=function(){return this.throwIfDisposed(),(0,sa.g)(this)};var oa=n(9027);(0,En.tp)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,oa.M)(this)};var ia=n(6005);(0,En.tp)().prototype.isInf=function(){return this.throwIfDisposed(),(0,ia.E)(this)};var ca=n(3467);(0,En.tp)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,ca.y)(this)};var la=n(8076);(0,En.tp)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,la.H)(this,e)},(0,En.tp)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,J.I)(this,e)},(0,En.tp)().prototype.less=function(e){return this.throwIfDisposed(),(0,nt.M)(this,e)};var ua=n(6584);(0,En.tp)().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),(0,ua.K)(this,e,t,n,a)};var da=n(4824);(0,En.tp)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,da.n)(this)};var ha=n(1194);(0,En.tp)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,ha.H)(this,e)};var pa=n(2175);(0,En.tp)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,pa.V)(this,e,t)},(0,En.tp)().prototype.log=function(){return this.throwIfDisposed(),(0,Tt.R)(this)};var fa=n(1386);(0,En.tp)().prototype.log1p=function(){return this.throwIfDisposed(),(0,fa.K)(this)},(0,En.tp)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,$.n)(this,e)},(0,En.tp)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Vt.N)(this)};var ma=n(7920);(0,En.tp)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,ma.z)(this,e)};var ga=n(3708);(0,En.tp)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,ga.r)(this,e)},(0,En.tp)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,j.N)(this,e,t,n)};var ya=n(6044);(0,En.tp)().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),(0,ya.j)(this,e,t,n,a)};var ba=n(891);(0,En.tp)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,ba.T)(this,e,t)},(0,En.tp)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,kn.P)(this,e)};var va=n(3015);(0,En.tp)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,va.i)(this,e,t)};var xa=n(1465);(0,En.tp)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,xa.j)(this,e,t)};var wa=n(6561);(0,En.tp)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,wa.B)(this,e)};var ka=n(4252);(0,En.tp)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,ka.F)(this,e,t)};var Sa=n(3617);(0,En.tp)().prototype.mod=function(e){return this.throwIfDisposed(),(0,Sa.z)(this,e)},(0,En.tp)().prototype.mul=function(e){return this.throwIfDisposed(),(0,u.l)(this,e)},(0,En.tp)().prototype.neg=function(){return this.throwIfDisposed(),(0,f.H)(this)};var Ta=n(2155);(0,En.tp)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,Ta.x)(this,e,t,n)};var Ia=n(135);(0,En.tp)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,Ia.E)(this,e)};var Na=n(6865);(0,En.tp)().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),(0,Na.M)(this,e,t,n)};var Ca=n(4100);(0,En.tp)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Ca.P)(this)},(0,En.tp)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,Jt.e)(this,e,t)};var Ea=n(7751);(0,En.tp)().prototype.pool=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,Ea.d)(this,e,t,n,a,r,s)},(0,En.tp)().prototype.pow=function(e){return this.throwIfDisposed(),(0,It.n)(this,e)};var Aa=n(9855);(0,En.tp)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,Aa.N)(this,e)};var _a=n(9556);(0,En.tp)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,_a._)(this,e,t)};var Ra=n(6309);(0,En.tp)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Ra.V)(this)};var Fa=n(5251);(0,En.tp)().prototype.relu=function(){return this.throwIfDisposed(),(0,Fa.V)(this)};var Da=n(9721);(0,En.tp)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Da.j)(this)},(0,En.tp)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,k.t)(this,e.shape)},(0,En.tp)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,k.t)(this,e)};var Oa=n(2214);(0,En.tp)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Oa.v)(this,e,t,n)};var La=n(2823);(0,En.tp)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,La.b)(this,e,t,n)},(0,En.tp)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,Pt.B)(this,e)};var Ma=n(9486);(0,En.tp)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Ma.z)(this)};var za=n(6509);(0,En.tp)().prototype.round=function(){return this.throwIfDisposed(),(0,za.L)(this)},(0,En.tp)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,De.Z)(this)};var Pa=n(2022);(0,En.tp)().prototype.selu=function(){return this.throwIfDisposed(),(0,Pa.W)(this)};var Ba=n(3117);(0,En.tp)().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,Ba.w)(this,e,t,n,a,r,s)},(0,En.tp)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,nn.r)(this)};var Wa=n(5740);(0,En.tp)().prototype.sign=function(){return this.throwIfDisposed(),(0,Wa._)(this)},(0,En.tp)().prototype.sin=function(){return this.throwIfDisposed(),(0,pe.F)(this)},(0,En.tp)().prototype.sinh=function(){return this.throwIfDisposed(),(0,me.L)(this)},(0,En.tp)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,ht.d)(this,e,t)};var Ua=n(6719);(0,En.tp)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,Ua.V)(this,e)};var Va=n(9973);(0,En.tp)().prototype.softplus=function(){return this.throwIfDisposed(),(0,Va.l)(this)},(0,En.tp)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,K.e)(this,e,t)},(0,En.tp)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,ae.l)(this,e,t)},(0,En.tp)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,g.R)(this)},(0,En.tp)().prototype.square=function(){return this.throwIfDisposed(),(0,y.E)(this)};var Ga=n(208);(0,En.tp)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,Ga.P)(this,e)};var ja=n(613);(0,En.tp)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,ja.r)(this,e)},(0,En.tp)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof En.qY?[this,e]:[this,...e];return(0,Me.t)(n,t)},(0,En.tp)().prototype.step=function(e){return this.throwIfDisposed(),(0,d.P)(this,e)};var Za=n(1231);(0,En.tp)().prototype.stridedSlice=function(e,t,n,a,r,s,o,i){return this.throwIfDisposed(),(0,Za.Y)(this,e,t,n,a,r,s,o,i)},(0,En.tp)().prototype.sub=function(e){return this.throwIfDisposed(),(0,b.j)(this,e)},(0,En.tp)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,S.c)(this,e,t)};var Ka=n(4894);(0,En.tp)().prototype.tan=function(){return this.throwIfDisposed(),(0,Ka.M)(this)};var Ha=n(6532);(0,En.tp)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Ha.y)(this)},(0,En.tp)().prototype.tile=function(e){return this.throwIfDisposed(),(0,Oe.V)(this,e)},(0,En.tp)().prototype.toBool=function(){return this.throwIfDisposed(),(0,l.w)(this,"bool")},(0,En.tp)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,l.w)(this,"float32")},(0,En.tp)().prototype.toInt=function(){return this.throwIfDisposed(),(0,l.w)(this,"int32")};var qa=n(2765);(0,En.tp)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,qa.r)(this,e,t)},(0,En.tp)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,ve.m)(this,e)};var Ya=n(9694);(0,En.tp)().prototype.unique=function(e){return this.throwIfDisposed(),(0,Ya.A)(this,e)},(0,En.tp)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,ze.z)(this,e,t)},(0,En.tp)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,wt.K)(this,e)},(0,En.tp)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,ee._)(e,this,t)},(0,En.tp)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,N.P)(this)};class Qa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qa.prototype)}}class Xa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xa.prototype)}}class Ja extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ja.prototype)}}class $a extends Error{constructor(e){super(e),Object.setPrototypeOf(this,$a.prototype)}}class er extends Error{constructor(e){super(e),Object.setPrototypeOf(this,er.prototype)}}Error;class tr{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function nr(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ar(e,t){if(!e)throw new er(t)}function rr(e,t){let n=0;for(const a of e)a===t&&n++;return n}function sr(e){return 1===e.length?e[0]:e}function or(e){return Array.isArray(e)?e:[e]}function ir(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function cr(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let lr={};function ur(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function dr(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>dr(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?dr(t):e[n]=t.value)}}}function hr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in lr)s=lr[r];else if(s=t[r],null==s)throw new Ja("Unknown ".concat(a,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=e;if(null==s.className||null==s.config)throw new Ja("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,c;if(o in n?[i,c]=n[o]:o in lr?[i,c]=lr.className:o in t&&([i,c]=t[o]),null==i)throw new Ja("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const e={};for(const n of Object.keys(lr))e[n]=lr[n];for(const r of Object.keys(n))e[r]=n[r];s.config.customObjects=e;const t=Object.assign({},lr);for(const r of Object.keys(n))lr[r]=n[r];dr(s.config);const a=c(i,s.config,n,r);return lr=Object.assign({},t),a}{const e=Object.assign({},lr);for(const a of Object.keys(n))lr[a]=n[a];const t=new i(s.config);return lr=Object.assign({},e),t}}}function pr(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function fr(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function mr(e){if(null==e)throw new Ja("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function gr(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Ja("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function yr(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return ar(n>=0),ar(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function br(e,t){Array.isArray(e)?(i.ZSL.assert(e.length>0,(()=>"".concat(t," is unexpectedly an empty array."))),e.forEach(((e,n)=>br(e,"element ".concat(n+1," of ").concat(t))))):i.ZSL.assert(Number.isInteger(e)&&e>0,(()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(vr(e),".")))}function vr(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>vr(e))).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}function xr(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let wr=0;function kr(){return wr++}const Sr={};function Tr(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in Sr||(Sr[e]=0),Sr[e]+=1,e+Sr[e].toString()}const Ir=["channelsFirst","channelsLast"],Nr=["nearest","bilinear"],Cr=["valid","same","causal"],Er=["max","avg"],Ar=["sum","mul","concat","ave"],_r=new Map;function Rr(e){gr(Ir,"DataFormat",e)}function Fr(e){gr(Cr,"PaddingMode",e)}function Dr(e){gr(Er,"PoolMode",e)}const Or=[],Lr="/";function Mr(e,t){Or.push(e);try{const e=t();return Or.pop(),e}catch(n){throw Or.pop(),n}}function zr(e){if(!Wr(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Or.length?"":Or.join(Lr)+Lr)+e}function Pr(e){if(!Wr(e))throw new Error("Not a valid tensor name: '"+e+"'");_r.has(e)||_r.set(e,0);const t=_r.get(e);if(_r.set(e,_r.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return _r.set(n,1),n}return e}const Br=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Wr(e){return!!e.match(Br)}function Ur(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function Vr(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function Gr(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function jr(e,t){if(t<e)throw new Ja("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let a=e;a<t;++a)n.push(a);return n}let Zr;function Kr(){return null==Zr&&(Zr=(0,i.Hs)().epsilon()),Zr}function Hr(e,t){return i.wgE(e,t)}function qr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),i.tQQ(e,n)}function Yr(e,t,n){return(0,i.DZQ)((()=>{switch(e.rank){case 1:return i.Q$M(e,t,n);case 2:return i.zAd(e,[t,0],[n,e.shape[1]]);case 3:return i.wck(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return i.R0O(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return i.dik(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return i.dik(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Ja("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Qr(e,t,n){return(0,i.DZQ)((()=>{switch(e.rank){case 1:return i.Q$M(e,t,n);case 2:return i.zAd(e,[0,t],[e.shape[0],n]);case 3:return i.wck(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return i.R0O(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Ja("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Xr(e,t,n,a){return(0,i.DZQ)((()=>{switch(e.rank){case 1:return i.Q$M(e,t,n);case 2:switch(a){case 1:return Yr(e,t,n);case 2:return Qr(e,t,n);default:throw new Ja("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return Yr(e,t,n);case 2:return i.wck(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Qr(e,t,n);default:throw new Ja("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return Yr(e,t,n);case 2:return i.R0O(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return i.R0O(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Qr(e,t,n);default:throw new Ja("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new Ja("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Jr(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),i.xWs(e,n)}function $r(e,t){switch(e.rank){case 1:return i.I1m([e,t]);case 2:return i.RPU([e,t],0);case 3:return i.O5O([e,t],0);case 4:return i.P1l([e,t],0);default:throw new Ja("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function es(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Ja("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return i.Vsq(e,t)}function ts(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;return i.FE$(e,t,n,a,r)}function ns(e,t,n,a){if(e.rank<2||t.rank<2)throw new $a("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new $a("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){const r=!1,s=!1;return i.cZk.matMul({a:e,b:t,transposeA:r,transposeB:s,bias:a?ss(e.rank,a,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),s=r.pop();e=i.tQQ(e,[-1,s]);const o=t.shape.slice(),c=o.pop(),l=o.pop(),u=[...o,c],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=i.tQQ(i.mgz(t,d),[l,-1]);const h=[...r,...u],p=!1,f=!1;return i.tQQ(i.cZk.matMul({a:e,b:t,transposeA:p,transposeB:f,bias:a?ss(e.rank,a,"channelsLast"):null,activation:n}),h)}}function as(e,t,n){return(0,i.DZQ)((()=>(t=Array.isArray(t)?(0,i.tGX)(t,"int32"):i.wgE(t,"int32"),i.kgh(e,t,n))))}function rs(e){return i.lKK(e,e)}function ss(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new Ja("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===a.length?i.tQQ(t,[1,a[0],1,1,1]):i.tQQ(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?i.tQQ(t,[1,1,1,1,a[0]]):i.tQQ(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?i.tQQ(t,[1,a[0],1,1]):i.tQQ(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?i.tQQ(t,[1,1,1,a[0]]):i.tQQ(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?i.tQQ(t,[1,a[0],1]):i.tQQ(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?i.tQQ(t,[1,1,a[0]]):i.tQQ(t,[1].concat(a))}else if(e<3)return t;throw new Ja("Unsupported input rank by biasAdd: ".concat(t.rank))}function os(e,t,n){return(0,i.DZQ)((()=>(null==n&&(n="channelsLast"),Rr(n),i.WQq(e,ss(e.rank,t,n)))))}function is(e,t,n,a){return(0,i.DZQ)((()=>i.EZY(e,t,n,a)))}function cs(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const ls=["fanIn","fanOut","fanAvg"],us=["normal","uniform","truncatedNormal"];class ds extends i.JFn.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class hs extends ds{apply(e,t){return(0,i.Ul9)(e,t)}}hs.className="Zeros",i.JFn.registerClass(hs);class ps extends ds{apply(e,t){return(0,i.SaS)(e,t)}}ps.className="Ones",i.JFn.registerClass(ps);class fs extends ds{constructor(e){if(super(),"object"!==typeof e)throw new Ja("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new Ja("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return(0,i.DZQ)((()=>(0,i.lKK)((0,i.d_2)(this.value),(0,i.SaS)(e,t))))}getConfig(){return{value:this.value}}}fs.className="Constant",i.JFn.registerClass(fs);class ms extends ds{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,i.YeY)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ms.className="RandomUniform",i.JFn.registerClass(ms);class gs extends ds{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new $a("randomNormal does not support dType ".concat(t,"."));return ts(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}gs.className="RandomNormal",i.JFn.registerClass(gs);class ys extends ds{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new $a("truncatedNormal does not support dType ".concat(t,"."));return(0,i.efE)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ys.className="TruncatedNormal",i.JFn.registerClass(ys);class bs extends ds{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,i.DZQ)((()=>{if(2!==e.length||e[0]!==e[1])throw new Ja("Identity matrix initializer can only be used for 2D square matrices.");return(0,i.lKK)(this.gain,(0,i.y5U)(e[0]))}))}getConfig(){return{gain:this.gain}}}bs.className="Identity",i.JFn.registerClass(bs);class vs extends ds{constructor(e){if(super(),e.scale<0)throw new Ja("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,gr(ls,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){gr(us,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Rr(a),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===a){const a=Ur(e,2);t=e[1]*a,n=e[0]*a}else if("channelsLast"===a){const a=Ur(e,0,e.length-2);t=e[e.length-2]*a,n=e[e.length-1]*a}}else{const a=Ur(e);t=Math.sqrt(a),n=Math.sqrt(a)}return[t,n]}(e),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new $a("".concat(this.getClassName()," does not support dType ").concat(t,"."));return(0,i.efE)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return(0,i.YeY)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}vs.className="VarianceScaling",i.JFn.registerClass(vs);class xs extends vs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return vs.className}}xs.className="GlorotUniform",i.JFn.registerClass(xs);class ws extends vs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return vs.className}}ws.className="GlorotNormal",i.JFn.registerClass(ws);class ks extends vs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return vs.className}}ks.className="HeNormal",i.JFn.registerClass(ks);class Ss extends vs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return vs.className}}Ss.className="HeUniform",i.JFn.registerClass(Ss);class Ts extends vs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return vs.className}}Ts.className="LeCunNormal",i.JFn.registerClass(Ts);class Is extends vs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return vs.className}}Is.className="LeCunUniform",i.JFn.registerClass(Is);class Ns extends ds{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,i.DZQ)((()=>{if(e.length<2)throw new $a("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));const n=i.ZSL.sizeFromShape(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const s=ts([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),o=i.mPL.qr(s,!1);let c=o[0];const l=o[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return c=(0,i.lKK)(c,l.sign()),n<a&&(c=c.transpose()),(0,i.lKK)((0,i.d_2)(this.gain),c.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ns.className="Orthogonal",i.JFn.registerClass(Ns);const Cs={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Es(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return hr(e,i.JFn.SerializationMap.getMap().classNameMap,t,"initializer")}function As(e){return ur(e)}function _s(e){if("string"===typeof e){const t=e in Cs?Cs[e]:e;if("GlorotNormal"===t)return new ws;if("GlorotUniform"===t)return new xs;if("HeNormal"===t)return new ks;if("HeUniform"===t)return new Ss;if("LeCunNormal"===t)return new Ts;if("LeCunUniform"===t)return new Is;{const e={};return e.className=t,e.config={},Es(e)}}return e instanceof ds?e:Es(e)}function Rs(e){return Array.isArray(e)&&Array.isArray(e[0])}function Fs(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Ds(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Ja("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function Os(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Ja("Expected exactly 1 Shape; got ".concat(e.length))}return e}function Ls(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Ms="Variable";class zs{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ms,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=kr(),n=null==n?Ms:n,this.originalName=zr(n),this.name=Pr(this.originalName),this.trainable_=a,this.constraint=r,this.val=i.bvq(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Ps(e){return e.map((e=>e.read()))}function Bs(e){e.forEach((e=>{e[0].write(e[1])}))}class Ws{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Us{constructor(e,t,n,a,r,s,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=kr(),null!=s&&(this.originalName=zr(s),this.name=Pr(this.originalName)),this.rank=t.length}}let Vs=0;class Gs{constructor(e,t){this.callArgs=t,this.id=Vs++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let js=0;class Zs extends i.JFn.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=js++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ir(e)+"_"+Tr(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Xa("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new Ja("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return sr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return sr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Qa("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Qa("Layer ".concat(this.name)+" is not connected, no input to return.");return sr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Qa("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Qa("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return sr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=or(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=or(this.inputSpec);if(t.length!==n.length)throw new Ja("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let a=0;a<t.length;a++){const e=t[a],r=n[a];if(null==r)continue;const s=e.rank;if(null!=r.ndim&&s!==r.ndim)throw new Ja("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(s));if(null!=r.maxNDim&&s>r.maxNDim)throw new Ja("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(s));if(null!=r.minNDim&&s<r.minNDim)throw new Ja("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(s,"."));if(null!=r.dtype&&e.dtype!==r.dtype)throw new Ja("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(e.dtype,"."));if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),s=r.axes[e],o=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(o))throw new Ja("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(s," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new Ja("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=or(e),a=function(e){let t=!0;for(const n of or(e))if(!(n instanceof Us)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of or(e))if(n instanceof Us){t=!1;break}return t}(e);if(a===r)throw new Ja("Arguments to apply() must be all SymbolicTensors or all Tensors");return Mr(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of or(e))t.push(n.shape);this.build(sr(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=or(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=sr(s),null!=this.activityRegularizer)throw new $a("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=or(e);const t=[];for(const n of e)t.push(n.shape);return sr(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new Us(s,n,this,or(e),t,this.name,a))):new Us(s,a,this,or(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new $a("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Qa("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Qa("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new Xa("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Ls(this.weights)}build(e){this.built=!0}getWeights(){return Ps(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){(0,i.DZQ)((()=>{const t=this.weights;if(t.length!==e.length)throw new Ja('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],a=Ps(t);for(let r=0;r<a.length;++r){const s=a[r],o=t[r],c=e[r];if(!i.ZSL.arraysEqual(s.shape,c.shape))throw new Ja("Layer weight shape ".concat(s.shape," ")+"not compatible with provided weight shape ".concat(c.shape));n.push([o,c])}Bs(n)}))}addWeight(e,t,n,a,r,s,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Ja("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():_s("zeros"));const c=a.apply(t,n),l=new zs(c,n,e,s,o);return c.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=or(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach((e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=or(t),s=or(a);if(r.length!==s.length)throw new Error("".concat(this.name," outputs ").concat(r.length," tensors ")+"but ".concat(r.length," masks for those tensors"));for(let o=0;o<r.length;o++)r[o].kerasMask=s[o]}addInboundNode(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=or(e);t=or(t),n=or(n),a=or(a),r=Fs(r),s=Fs(s);const c=[],l=[],u=[];for(const d of i)c.push(d.sourceLayer),l.push(d.nodeIndex),u.push(d.tensorIndex);new Gs({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Ks(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=Ks(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class Hs extends Zs{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Tr("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Ja("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Ja("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Ja("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new Us(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Gs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Ja("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Hs.className="InputLayer",i.JFn.registerClass(Hs);class qs{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof qs)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Ja("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,i.wgE)(t,e.dtype)}catch(n){throw new Ja("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Us){if(null==this.id2Value[e.id])throw new Ja("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Ja("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof Us){if(null==this.id2Value[e.id])throw new Ja("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Ja("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,i.ASo)(this.id2Mask)}}const Ys=new tr,Qs=new tr;function Xs(e,t,n,a){const r=null!=n&&n.training,s=Array.isArray(e),o=s?e:[e],c=o.map((e=>e.name)),l=[],u=t.names();for(const i of c)-1!==u.indexOf(i)?l.push(t.getValue(i)):l.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const d=c.join(",")+"|"+t.names().sort().join(",");let h,p=Ys.get(d);if(null==p){const e=function(e,t){i.ZSL.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=$s(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:o}=$s(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in o)null==a[t]&&(a[t]=new Set),o[t].forEach((e=>a[t].add(e)))}}return{sorted:n,recipientCounts:Js(a)}}(o,t);p=e.sorted,h=e.recipientCounts,Ys.put(d,p),Qs.put(d,h)}h={},r||Object.assign(h,Qs.get(d));const f=new qs(t);for(let m=0;m<p.length;++m){if(null!=a){const e=(0,i.m1Z)().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=p[m],s=e.sourceLayer;if(s instanceof Hs)continue;const o=[],u=[],d=[];let g=!1;for(const n of e.inputs){const e=f.getValue(n),a=f.getMask(n);o.push(e),u.push(a),null!=a&&(g=!0),r||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==c.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||d.push(e))}g&&((n=n||{}).mask=u[0]);const y=or(s.apply(o,n));let b=null;s.supportsMasking&&(b=s.computeMask(o,u));const v=eo(e),x=Array.isArray(v)?v:[v];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],y[t],Array.isArray(b)?b[0]:b);const e=c.indexOf(x[t].name);-1!==e&&(l[e]=y[t])}r||(0,i.ASo)(d)}return f.disposeMasks(),s?l:l[0]}function Js(e){const t={};for(const n in e)t[n]=e[n].size;return t}function $s(e,t){const n=new Set,a=[],r={};for(const i of t.names())n.add(i);const s=[],o=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=o[o.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&o.pop();else{o.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function eo(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function to(e,t){return(0,i.DZQ)((()=>i.RZD(i.czq(i.lKK(e,e),t,!0))))}(0,i._K2)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Ys&&Ys.setMaxEntries(e),null!=Qs&&Qs.setMaxEntries(e)}));class no extends i.JFn.Serializable{getConfig(){return{}}}class ao extends no{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,i.DZQ)((()=>{const t=to(e,this.axis),n=i.zQh(t,0,this.maxValue);return i.lKK(e,i.y4m(n,i.WQq(Kr(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}ao.className="MaxNorm",i.JFn.registerClass(ao);class ro extends no{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,i.DZQ)((()=>i.y4m(e,i.WQq(Kr(),to(e,this.axis)))))}getConfig(){return{axis:this.axis}}}ro.className="UnitNorm",i.JFn.registerClass(ro);class so extends no{apply(e){return i.VVh(e)}}so.className="NonNeg",i.JFn.registerClass(so);class oo extends no{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,i.DZQ)((()=>{const t=to(e,this.axis),n=i.WQq(i.lKK(this.rate,i.zQh(t,this.minValue,this.maxValue)),i.lKK(1-this.rate,t));return i.lKK(e,i.y4m(n,i.WQq(Kr(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}oo.className="MinMaxNorm",i.JFn.registerClass(oo);const io={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function co(e){return ur(e)}function lo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return hr(e,i.JFn.SerializationMap.getMap().classNameMap,t,"constraint")}function uo(e){if(null==e)return null;if("string"===typeof e){return lo({className:e in io?io[e]:e,config:{}})}return e instanceof no?e:lo(e)}async function ho(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];(0,i.ASo)(a)}}function po(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var fo;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(fo||(fo={}));class mo{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class go{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class yo extends mo{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const r=(0,i.DZQ)((()=>(0,i.WQq)(this.totals[a],(0,i.lKK)(e,n))));this.totals[a]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:(0,i.DZQ)((()=>{const e=(0,i.lKK)((0,i.y4m)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),(0,i.aCs)(t[n])})))}}class bo extends mo{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const o=a[s];e.push(o.data()),t.push(r),n.push(s)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}}class vo extends mo{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||i.dA1,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");i.ZSL.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():i.ZSL.now();return function(){const s=null!=n?n():i.ZSL.now();return s-r<t||(r=s,a=e(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await ho(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await ho(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await ho(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await ho(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await ho(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):i.ZSL.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await ho(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await ho(e),await this.trainEnd(e))}}function xo(e,t){if(null==e&&(e={}),e instanceof mo)return[e];if(Array.isArray(e)&&e[0]instanceof mo)return e;return or(e).map((e=>new vo(e,t)))}class wo{constructor(){}static registerCallbackConstructor(e,t){i.ZSL.assert(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e))),wo.checkForDuplicate(t),null==wo.constructors[e]&&(wo.constructors[e]=[]),wo.constructors[e].push(t)}static checkForDuplicate(e){for(const t in wo.constructors){wo.constructors[+t].forEach((t=>{if(t===e)throw new Ja("Duplicate callback constructor.")}))}}static clear(){wo.constructors={}}static createCallbacks(e){const t=[];for(const n in wo.constructors){const a=+n;e>=a&&t.push(...wo.constructors[a])}return t.map((e=>new e))}}function ko(e,t,n,a,r,s,o,i,c){const l=new bo,u=[new yo,...wo.createCallbacks(t)];null!=e&&u.push(...e),u.push(l);const d=new go(u);return d.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:o,verbose:t,doValidation:i,metrics:c}),{callbackList:d,history:l}}function So(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return hr(e,i.JFn.SerializationMap.getMap().classNameMap,t,"layer",n)}function To(e,t){return(0,i.DZQ)((()=>{"float32"!==e.dtype&&(e=i.wgE(e,"float32"));const n=i.czq(rs(e),t,!0),a=i.GSj(n.shape,Kr()),r=i.RZD(i.PhQ(n,a));return i.y4m(e,r)}))}function Io(e,t){return(0,i.DZQ)((()=>i.i2o(rs(i.jbE(t,e)),-1)))}function No(e,t){return(0,i.DZQ)((()=>i.i2o(i.tnl(i.jbE(t,e)),-1)))}function Co(e,t){return(0,i.DZQ)((()=>{const n=i.jbE(e,t),a=i.zQh(i.tnl(e),Kr(),Number.MAX_VALUE),r=i.tnl(i.y4m(n,a));return i.lKK(100,i.i2o(r,-1))}))}function Eo(e,t){return(0,i.DZQ)((()=>{const n=i.zQh(t,Kr(),Number.MAX_VALUE),a=i.Rm2(i.WQq(1,n)),r=i.zQh(e,Kr(),Number.MAX_VALUE),s=i.Rm2(i.WQq(1,r));return i.i2o(rs(i.jbE(a,s)),-1)}))}function Ao(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,i.DZQ)((()=>{if(n)t=i.Vs9(t);else{const e=i.czq(t,t.shape.length-1,!0);t=i.y4m(t,e)}return t=i.zQh(t,Kr(),1-Kr()),i.HZy(i.czq(i.lKK(i.wgE(e,"float32"),i.Rm2(t)),t.shape.length-1))}))}function _o(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,i.DZQ)((()=>{const a=i.wgE(i.RIf(function(e){const t=[Ur(e.shape)];return i.tQQ(e,t)}(e)),"int32"),r=(t=i.zQh(t,Kr(),1-Kr())).shape;return Ao(i.tQQ(i.Mw0(a,r[r.length-1]),r),t,n)}))}function Ro(e,t){return(0,i.DZQ)((()=>{let n;return n=i.zQh(t,Kr(),1-Kr()),n=i.Rm2(i.y4m(n,i.jbE(1,n))),i.i2o(function(e,t){if(!i.ZSL.arraysEqual(e.shape,t.shape))throw new Ja("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return(0,i.DZQ)((()=>{const n=i.VVh(t),a=i.HZy(i.tnl(t));return i.WQq(i.jbE(n,i.lKK(t,e)),i.Kko(i.oNF(a)))}))}(e,n),-1)}))}function Fo(e,t){return(0,i.DZQ)((()=>{const n=i.zQh(e,Kr(),1),a=i.zQh(t,Kr(),1);return i.czq(i.lKK(e,i.Rm2(i.y4m(n,a))),-1)}))}function Do(e,t){return(0,i.DZQ)((()=>{const n=To(e,-1),a=To(t,-1),r=i.lKK(n,a);return i.HZy(i.czq(r,-1))}))}wo.constructors={};const Oo={meanSquaredError:Io,meanAbsoluteError:No,meanAbsolutePercentageError:Co,meanSquaredLogarithmicError:Eo,squaredHinge:function(e,t){return(0,i.DZQ)((()=>{const n=i.PhQ(0,i.jbE(1,i.lKK(e,t)));return i.i2o(rs(n),-1)}))},hinge:function(e,t){return(0,i.DZQ)((()=>{const n=i.PhQ(0,i.jbE(1,i.lKK(e,t)));return i.i2o(n,-1)}))},categoricalHinge:function(e,t){return(0,i.DZQ)((()=>{const n=i.czq(i.lKK(e,t),-1),a=i.T9B(i.lKK(i.jbE(1,e),t),-1);return i.PhQ(0,i.WQq(1,i.jbE(a,n)))}))},logcosh:function(e,t){return(0,i.DZQ)((()=>{const n=Math.log(2),a=i.jbE(t,e),r=i.jbE(i.WQq(a,i.lw0(i.lKK(-2,a))),n);return i.i2o(r,-1)}))},categoricalCrossentropy:Ao,sparseCategoricalCrossentropy:_o,binaryCrossentropy:Ro,kullbackLeiblerDivergence:Fo,poisson:function(e,t){return(0,i.DZQ)((()=>{const n=i.Rm2(i.WQq(Kr(),t));return i.i2o(i.jbE(t,i.lKK(e,n)),-1)}))},cosineProximity:Do};function Lo(e){if("string"===typeof e){if(e in Oo)return Oo[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new Ja(t)}return e}function Mo(e,t){return(0,i.DZQ)((()=>{const n=i.lKK(.5,i.P61(t)),a=Hr(i.rhj(t,n),e.dtype);return i.i2o(i.LCg(e,a),-1)}))}function zo(e,t){return(0,i.DZQ)((()=>Hr(i.LCg(i.FLi(e,-1),i.FLi(t,-1)),"float32")))}function Po(e,t){return(0,i.DZQ)((()=>i.wgE(i.czq(i.n76(i.LCg(e,1),i.LCg(t,1))),"float32")))}function Bo(e,t){return Ro(e,t)}function Wo(e,t){return e.rank===t.rank&&(e=i.r2V(e,[e.rank-1])),(t=i.FLi(t,-1)).dtype!==e.dtype&&(t=i.wgE(t,e.dtype)),i.wgE(i.LCg(e,t),"float32")}const Uo=Ao,Vo=_o,Go={binaryAccuracy:Mo,categoricalAccuracy:zo,precision:function(e,t){return(0,i.DZQ)((()=>{const n=Po(e,t),a=function(e,t){return(0,i.DZQ)((()=>i.wgE(i.czq(i.n76(i.LCg(e,0),i.LCg(t,1))),"float32")))}(e,t),r=i.WQq(n,a);return i.wgE(i._M9(i.rhj(r,0),i.y4m(n,r),0),"float32")}))},categoricalCrossentropy:Uo,sparseCategoricalCrossentropy:Vo,mse:Io,MSE:Io,mae:No,MAE:No,mape:Co,MAPE:Co,cosine:Do};function jo(e){if("string"===typeof e&&e in Go)return Go[e];if("string"!==typeof e&&null!=e)return e;throw new Ja("Unknown metric ".concat(e))}function Zo(e){if(ar(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(Oo))if(Oo[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Go))if(Go[n]===e){t=n;break}return void 0!==t?t:e.name}}const Ko=1048576;function Ho(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!qo(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Ko&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(Ko,"."))}}function qo(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!qo(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!qo(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Yo(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){s.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}a("_".repeat(t)),Qo(s,n,a),a("=".repeat(t));const i=e.layers;for(let u=0;u<i.length;++u)r?Xo(i[u],n,a):Jo(i[u],n,o,a),a((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const c=function(e){let t;t=null!=e.collectedTrainableWeights?Ls(e.collectedTrainableWeights):Ls(e.trainableWeights);return t}(e),l=Ls(e.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(t))}function Qo(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function Xo(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(i){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(i){a="multiple"}const s=e.name,o=e.getClassName();Qo(["".concat(s," (").concat(o,")"),r,a,e.countParams().toString()],t,n)}function Jo(e,t,n,a){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(u){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(u){r="multiple"}const o=[];for(const d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e){const t=d.inboundLayers[e].name,n=d.nodeIndices[e],a=d.tensorIndices[e];o.push("".concat(t,"[").concat(n,"][").concat(a,"]"))}const i=e.name,c=e.getClassName(),l=0===o.length?"":o[0];Qo(["".concat(i," (").concat(c,")"),s,r,e.countParams().toString(),l],t,a);for(let d=1;d<o.length;++d)Qo(["","","","",o[d]],t,a)}function $o(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function ei(e,t){if(null===e)return null;if("string"===typeof e)return cr(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];$o(t,r,a)?n.push(a):n.push(ei(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=cr(n);t[e]=ei(a,e)}}return t}}function ti(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return ir(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];$o(t,r,a)?n.push(a):n.push(ti(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=ir(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?ti(a,n):a}return t}}const ni="4.17.0";class ai extends Zs{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Tr(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],fr(this.inputs).length!==this.inputs.length)throw new Ja("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((e=>e.name))));fr(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((e=>e.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;ar(0===t,"input layer has >1 nodes"),ar(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Hs))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},s={},o=[],i=(e,t,n,a,r,c)=>{null!=a&&null!=r&&null!=c||(a=e.sourceLayer,r=e.nodeIndex,c=e.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new Xa("The tensor ".concat(e.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(l))return;this.containerNodes.add(ai.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let s=0;s<u;s++){const e=l.inputTensors[s],a=l.inboundLayers[s],r=l.nodeIndices[s],o=l.tensorIndices[s];i(e,t,n,a,r,o)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},c=[],l=[];for(const y of this.outputs)i(y,c,l);const u=o.slice().reverse();for(const y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const s=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];e=Math.max(e,s),a[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],s=y.nodeIndices[a],o=r.inboundNodes[s],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const d={};for(const y in t){const e=t[y];e in d||(d[e]=[]),d[e].push(n[y])}const h={};for(const y in a){const e=a[y];e in h||(h[e]=[]),h[e].push(r[y])}let p=Object.keys(h).map((e=>parseInt(e,10))).sort(pr);this.layers=[];for(const y of p){const e=h[y];e.sort(((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(const t of e)t instanceof ai&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,p=Object.keys(d).map((e=>parseInt(e,10))).sort(pr);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of d[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Xa("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new Xa('The name "'.concat(y,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Gs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Ja("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const o of this.layers)for(const[e,t]of o.weights.entries()){const s=r?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[s])throw new Ja("Duplicate weight name: ".concat(s));n[s]=t,a++}const s=[];for(const o in e){let a=o;if(null==n[o]){const e=o.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[o]]);else if(t)throw new Ja("Provided weight data has no target variable: ".concat(o));delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Ja("".concat(e.length," of ").concat(a," weights are not set: ")+"".concat(e))}Bs(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat(ni),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=ti(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,i.DZQ)((()=>{e=or(e);const n=new qs;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Xs(this.outputs,n,t)}))}computeMask(e,t){return(0,i.DZQ)((()=>{let n;return e=or(e),n=null==t?nr(null,e.length):or(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Fs(e);if(t.length!==this.inputLayers.length)throw new Ja("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],a=t[o];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(pr);if(a.length>1)for(const o of a){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const a=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],r=t.nodeIndices[o],s=t.tensorIndices[o],i=n["".concat(e.name,"_").concat(r,"_").concat(s)];a.push(i)}const r=Fs(e.computeOutputShape(sr(a))),s=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n["".concat(e.name,"_").concat(s,"_").concat(t)]=r[t]}}}const r=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(e.name,"_").concat(t,"_").concat(n);s.push(a)}for(let o=0;o<s.length;o++){const e=s[o];ar(e in n),r.push(n[e])}return sr(r)}runInternalGraph(e,t){null==t&&(t=nr(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=e[i],s=t[i];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(pr);for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,s=new Array;for(const t of a)t.id in n&&s.push(n[t.id]);if(s.length===a.length){let a,o,i,c,l={};if(null!=t.callArgs&&(l=t.callArgs),1===s.length){const[t,n]=s[0];null==l.mask&&(l.mask=n),i=or(e.call(t,l)),c=or(e.computeMask(t,n)),a=[t],o=[n]}else a=s.map((e=>e[0])),o=s.map((e=>e[1])),null==l.mask&&(l.mask=o),i=or(e.call(a,l)),c=or(e.computeMask(a,o));if(e.activityRegularizer)throw new $a("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=i[e],s=c[e];n[t.id]=[a,s]}}}}const r=[],s=[],o=[];for(const i of this.outputs){ar(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];o.push(e.shape),r.push(e),s.push(t)}return[r,s,o]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof ai?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=ai.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Ja("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new Ja("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new Ja("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return(0,i.DZQ)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=ai.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const e=o.getClassName(),a=o.getConfig(),r=[];for(let n=0;n<o.inboundNodes.length;n++){const e=o.inboundNodes[n],a=ai.nodeKey(o,n);let i={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(s){console.warn("Layer ".concat(o.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),i={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],s=e.nodeIndices[a],o=e.tensorIndices[a];let c=t[ai.nodeKey(r,s)];null==c&&(c=0),n.push([r.name,c,o,i])}r.push(n)}}}const i={};i.name=o.name,i.className=e,i.config=a,i.inboundNodes=r,n.push(i)}e.layers=n;const a=[];for(let o=0;o<this.inputLayers.length;o++){const e=this.inputLayers[o],n=this.inputLayersNodeIndices[o],r=ai.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let s=t[r];null!==s&&void 0!==s||(s=0);const i=this.inputLayersTensorIndices[o];a.push([e.name,s,i])}e.inputLayers=a;const r=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],n=this.outputLayersNodeIndices[o],a=ai.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let s=t[a];null!==s&&void 0!==s||(s=0);const i=this.outputLayersTensorIndices[o];r.push([e.name,s,i])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function s(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function o(e,t){const n=[];let r;for(const o of t){const i=o[0],c=o[1],l=o[2];if(r=null==o[3]?{}:o[3],!(i in a))return void s(e,t);const u=a[i];if(u.inboundNodes.length<=c)return void s(e,t);const d=u.inboundNodes[c];n.push(d.outputTensors[l])}n.length>0&&e.apply(sr(n),r)}function i(e){const r=e.name,o=So(e,null!=t.customObjects?t.customObjects:{});o.setFastWeightInitDuringBuild(n),a[r]=o;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Ja("Corrupted configuration, expected array for nodeData: ".concat(e));s(o,e)}))}const c=t.name,l=t.layers;for(const f of l)i(f);for(;!mr(r);)for(const e of l){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)o(t,n)}}const u=[],d=[],h=t.inputLayers;for(const f of h){const e=f[0],t=f[1],n=f[2];ar(e in a);const r=a[e].inboundNodes[t].outputTensors;u.push(r[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];ar(e in a);const r=a[e].inboundNodes[t].outputTensors;d.push(r[n])}return new e({inputs:u,outputs:d,name:c})}get stateful(){if(this._stateful)throw new Ja("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,i.DZQ)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function ri(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function si(e,t){return ri(e,t,"classWeight")}async function oi(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,i.DZQ)((()=>{if(1===e.shape.length)return(0,i.o8B)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,i.FLi)(e,t)}if(1===e.shape[1])return(0,i.tQQ)(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await t.data());(0,i.ASo)(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");r.push(n[e])})),(0,i.tGX)(r,"float32")}return null}function ii(e,t){return(0,i.lKK)(e,t)}function ci(e,t){let n,a;const r=t;n=r.xs,a=r.ys,i.ZSL.assert(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t)));const s=li("input",e.inputNames,n),o=li("output",e.outputNames,a),c=s[0].shape[0];i.ZSL.assert(s.length===e.inputs.length,(()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(s.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")"))),i.ZSL.assert(o.length===e.outputs.length,(()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(o.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")")));for(let l=0;l<s.length;l++)i.ZSL.assert(s[l].shape[0]===c,(()=>"Batch size mismatch: input "+"".concat(e.inputNames[l]," has ").concat(s[l].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(e.inputNames[0],".")));for(let l=0;l<o.length;l++)i.ZSL.assert(o[l].shape[0]===c,(()=>"Batch size mismatch: output "+"".concat(e.outputNames[l]," has ").concat(o[l].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(e.inputNames[0],".")));return{xs:s,ys:o}}function li(e,t,n){if(n instanceof i.qYS)return[n];if(Array.isArray(n))return i.ZSL.assert(n.length===t.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,"."))),n;{const a=[];for(const r of t){if(null==n[r])throw new Ja("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(r,"'."));a.push(n[r])}return a}}async function ui(e,t,n){const a=null!=n.batchesPerEpoch;if(i.ZSL.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),i.ZSL.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),i.ZSL.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),i.ZSL.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),i.ZSL.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let s,o;if(r)if(di(n.validationData))i.ZSL.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const e=function(e){if(3===e.length)throw new $a("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,o=e.ys}const c=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const d=xo(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=ko(d,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,u);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const u={};await p.onEpochBegin(m);let d=0,h=0;for(a||(g=await t.iterator());!a||d<n.batchesPerEpoch;){const t=await g.next();if(a&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(d," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=ci(e,t.value),s={};s.batch=h,s.size=a[0].shape[0],await p.onBatchBegin(h,s);const o=[];if(null!=n.classWeight){const t=si(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await oi(r[e],null,t[e]))}const u=a.concat(r).concat(o),f=c(u);i.ASo(u);for(let e=0;e<l.length;++e){const t=l[e],n=f[e];s[t]=n,i.aCs(n)}await p.onBatchEnd(h,s),po(s),h++,d++}if(a?d>=n.batchesPerEpoch:t.done){if(r){let t;t=di(n.validationData)?or(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):or(e.evaluate(s,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,u),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function di(e){return"function"===typeof e.iterator}function hi(e){i.ZSL.assert(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got ".concat(e)))}function pi(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Yr(e,t,n-t))):Yr(e,t,n-t)}function fi(e,t){return i.DZQ((()=>null==e?null:Array.isArray(e)?e.map((e=>fi(e,t))):as(e,"int32"===t.dtype?t:i.wgE(t,"int32"))))}function mi(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function gi(e){const t=[];e instanceof i.qYS&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(qr(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function yi(e,t){if(null==e)return;const n=[];if(t instanceof i.qYS)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof i.qYS)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function bi(e){return Array.isArray(e)}function vi(e){return!function(e){return e instanceof i.qYS}(e)&&!bi(e)}function xi(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(bi(e)&&e.length>0)t=!0;else if(vi(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Ja("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map((e=>null));if(vi(e)){a=[];for(const n of t){if(null==e[n])throw new Ja('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));a.push(e[n])}}else if(bi(e)){if(e.length!==t.length)throw new Ja("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));a=e}else{if(t.length>1)throw new Ja("The model ".concat(s," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));a=[e]}if(a=gi(a),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new Ja("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[o].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&a!==i)throw new Ja("".concat(s," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(s," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return a}function wi(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new Ja("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));a=e}else{if(t.length>1)throw new Ja("The model expects ".concat(t.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));a=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new Ja("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=e.shape[a],c=n[o][a];if(null!=c&&c!==i)throw new Ja("Error when checking ".concat(s,": expected ")+"".concat(t[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class ki extends ai{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new Ja("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Yo(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>i.BaG.adagrad(.01),Adadelta:()=>i.BaG.adadelta(1,.95,Kr()),Adam:()=>i.BaG.adam(.001,.9,.999,Kr()),Adamax:()=>i.BaG.adamax(.002,.9,.999,Kr(),0),RMSProp:()=>i.BaG.rmsprop(.001,.9,0,Kr()),SGD:()=>i.BaG.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Ja("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof i.ELo))throw new Ja("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Ja("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map((e=>Lo(e)))}else{const n=Lo(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Ja('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(Lo(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Mr("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Mr("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,s;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===Ro?-1!==["accuracy","acc"].indexOf(o)?a=Mo:-1!==["crossentropy","ce"].indexOf(o)&&(a=Bo):this.lossFunctions[e]===_o?-1!==["accuracy","acc"].indexOf(o)?a=Wo:-1!==["crossentropy","ce"].indexOf(o)&&(a=Vo):-1!==["accuracy","acc"].indexOf(o)?a=zo:-1!==["crossentropy","ce"].indexOf(o)&&(a=Uo),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),s=a,n=""+r}else{const e=jo(o);s=e,n=""+Zo(o)}let t;Mr(n,(()=>{t=s})),r(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;hi(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return sr(this.testLoop(t,e,a,n.verbose,n.steps))}finally{yi(r[0],e),yi(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let s=[];if(n.verbose>0)throw new $a("Verbose mode is not implemented yet.");i.ZSL.assert(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const o="function"===typeof t.next?t:await t.iterator();let c=0,l=0;for(;!a||l<n.batches;){const t=await o.next();if(s=i.DZQ((()=>{if(t.value){const{xs:n,ys:a}=ci(e,t.value),o=n.concat(a),u=i.DZQ((()=>r(o)));if(i.ASo(o),0===l)for(let e=0;e<u.length;++e)s.push((0,i.d_2)(0));const d=o[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=s[e];s[e]=i.DZQ((()=>i.WQq(s[e],i.lKK(d,t)))),l>0&&i.ASo(n)}i.ASo(u),c+=d,++l}return s})),t.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let u=0;u<s.length;++u){const e=s[u];s[u]=i.y4m(s[u],c),i.ASo(e)}return sr(s)}(this,e,t)}checkNumSamples(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=t)throw new Ja("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new Ja("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Ja("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new qs;if(e instanceof i.qYS&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Ja("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new Ja("No value is provided for the model's input ".concat(i.name));s.add(i,t)}const o=Xs(r,s);return n?o:o[0]}retrieveSymbolicTensors(e){const t=nr(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){const o=s.indexOf(e[a]);if(-1!==o&&(t[a]=r[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new Ja("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return i.DZQ((()=>{const a=this.checkNumSamples(e);if(n)throw new $a("Verbose predictLoop() is not implemented yet.");const r=mi(a,t),s=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){i.DZQ((()=>{const n=r[t][0],a=r[t][1],s=pi(e,n,a),o=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)o.push({key:this.inputs[e],value:s[e]});else o.push({key:this.inputs[0],value:s});const i=new qs(o);return Xs(this.outputs,i)})).forEach(((e,t)=>s[t].push(e)))}return sr(s.map((e=>i.xWs(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=gi(e);wi(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return hi(e),this.predictLoop(n,e)}finally{yi(n,e)}}predictOnBatch(e){wi(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Xa("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===_o?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t,n){const a=fr(e.map((e=>e.shape[0])));a.sort();const r=fr(t.map((e=>e.shape[0])));if(r.sort(),a.length>1)throw new Ja("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((e=>e.shape)))));if(r.length>1)throw new Ja("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((e=>e.shape)))));if(a.length>0&&r.length>0&&!i.ZSL.arraysEqual(a,r))throw new Ja("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(a[0]," input sample(s) and ").concat(r[0]," target ")+"sample(s).")}(e=xi(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=xi(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const a=[Io,Ro,Ao];for(let r=0;r<e.length;++r){const s=e[r],o=t[r],i=n[r];if(null!=o){if(o===Ao&&1===s.shape[s.shape.length-1])throw new Ja("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const e=s.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new Ja("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new Ja("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const e=si(a,this.outputNames);c=[];for(let t=0;t<e.length;++t)c.push(await oi(i[t],null,e[t]))}return[o,i,c]}testLoop(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return i.DZQ((()=>{const s=this.checkNumSamples(t,n,r,"steps"),o=[];if(a>0)throw new $a("Verbose mode is not implemented yet.");if(null!=r)throw new $a("steps mode in testLoop() is not implemented yet");{const a=mi(s,n),r=(0,i.tGX)(jr(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],c=a[n][1],l=Yr(r,s,c-s),u=fi(t,l),d=e(u);if(0===n)for(let e=0;e<d.length;++e)o.push((0,i.d_2)(0));for(let e=0;e<d.length;++e){const t=d[e];o[e]=i.WQq(o[e],i.lKK(c-s,t))}}for(let e=0;e<o.length;++e)o[e]=i.y4m(o[e],s)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(rr(e,a)>1){const t=rr(e.slice(0,n),a);r+="_".concat(t)}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new qs(e),c=Xs(this.outputs,o,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],c[n]);null!=r[n]&&(e=ii(e,r[n]));const s=i.i2o(e);t.push(s),l=0===n?e:i.WQq(l,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=i.i2o(t(a[r],c[r]))}i.aCs(e),s.push(e)}return l=i.i2o(l),this.calculateLosses().forEach((e=>{l=i.WQq(l,e)})),l}),!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>i.DZQ((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});const o=new qs(s),c=Xs(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],s=i.i2o(a(r[e],c[e]));n=0===e?s:i.WQq(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],s=i.i2o(n(r[a],c[a]));t.push(s)}return t}))}async fit(e,t){let n,a,r,s,o,c,l,u,d,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const i=null==h.batchSize?32:h.batchSize;hi(i);const p=!1,f=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,i);n=f[0],a=f[1],d=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new $a("validationData including sample weights is not supported yet."):new Ja("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(h.validationData," is invalid."));o=h.validationData[0],c=h.validationData[1];const e=!0,t=await this.standardizeUserData(o,c,null,null,e,i);l=t[0],u=t[1],m=l.concat(u)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];l=pi(n,e,t),r=n,n=pi(n,0,e),u=pi(a,e,t),s=a,a=pi(a,0,e),m=l.concat(u)}else null!=h.validationSteps&&(g=!0);const y=n.concat(a).concat(d);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=v.slice().concat(v.map((e=>"val_"+e)))):(x=null,m=[],w=v.slice());const k=xo(h.callbacks,h.yieldEvery);return await this.fitLoop(b,y,v,i,h.epochs,h.verbose,k,x,m,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,yi(n,e),yi(a,t),yi(r,e),yi(s,t),yi(l,o),yi(u,c),null!=d&&i.ASo(d)}}async fitLoop(e,t,n,a,r,s,o,c,l,u,d,h,p,f){null==a&&(a=32),null==r&&(r=1),null==u&&(u=!0),null==h&&(h=0);let m=!1;if(null!=c&&null!=l&&(m=!0),null!=f&&(m=!0,null==p))throw new Ja("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,a,p,"steps_per_epoch");let y;null!=g&&(y=jr(0,g)),null==s&&(s=1);const{callbackList:b,history:v}=ko(o,s,r,h,g,p,a,m,d);b.setModel(this),this.history=v,await b.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<r;++x){await b.onEpochBegin(x);const r={};if(null!=p)throw new $a("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new $a("batch shuffling is not implemneted yet");u&&i.ZSL.shuffle(y);const s=(0,i.tGX)(y),o=mi(g,a);for(let u=0;u<o.length;++u){const d={};if(await b.onBatchBegin(u,d),i.DZQ((()=>{const h=o[u][0],p=o[u][1],f=Yr(s,h,p-h);d.batch=u,d.size=p-h;const g=fi(t,f),y=e(g);for(let e=0;e<n.length;++e){const t=n[e],a=y[e];d[t]=a,i.aCs(a)}if(u===o.length-1&&m){const e=this.testLoop(c,l,a);for(let t=0;t<n.length;++t){const a=n[t],s=e[t];i.aCs(s),r["val_"+a]=s}}})),await b.onBatchEnd(u,d),po(d),this.stopTraining_)break}s.dispose()}if(await b.onEpochEnd(x,r),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return ui(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),o=[];for(const i of s){const e=await i.data();o.push(e[0])}return i.ASo(s),yi(n[0],e),yi(n[1],t),sr(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=i.m1Z().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-i.m1Z().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=ir(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ir(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=ir(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[ir(Zo(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ir(Zo(e))));{const e={};for(const t in this.metrics)e[t]=ir(Zo(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=So(ei(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=cr(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>cr(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=cr(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>cr(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=cr(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=i.io.getSaveHandlers(e);if(0===t.length)throw new Ja("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Ja("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Ja("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await i.io.encodeWeights(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(ni),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await i.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=i.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Ho(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){Ho(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}ki.className="Model",i.JFn.registerClass(ki);class Si extends ki{}Si.className="Functional",i.JFn.registerClass(Si);class Ti extends ki{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Tr("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Ja("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof Ti||e instanceof ki;let n;if(t){if(n=e,1!==n.outputs.length)throw new Ja("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Ja("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Ja("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Ja("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Hs({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Ja("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new Ja("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Ks(this.outputs[0])}this.inboundNodes=[],new Gs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:nr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Os(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ki({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Xa("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Xa("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Xa("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Xa("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Ja("Legacy serialization format not supported yet.");n=t}else i.ZSL.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,r=t;const s=new e(r);if(!(s instanceof Ti))throw new $a("Sequential.fromConfig called on non-Sequential input: ".concat(s));for(const o of n){const e=So(o,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),s.add(e)}return s}set stopTraining(e){if(null==this.model)throw new Ja("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Ja("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Ti.className="Sequential",i.JFn.registerClass(Ti);class Ii extends i.JFn.Serializable{getConfig(){return{}}}class Ni extends Ii{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new $a("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return i.Pqc(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}Ni.className="elu",i.JFn.registerClass(Ni);class Ci extends Ii{apply(e){return i.WfX(e)}}Ci.className="selu",i.JFn.registerClass(Ci);class Ei extends Ii{apply(e){return i.VVh(e)}}Ei.className="relu",i.JFn.registerClass(Ei);class Ai extends Ii{apply(e){return(0,i.DZQ)((()=>i.BpO(6,i.VVh(e))))}}Ai.className="relu6",i.JFn.registerClass(Ai);class _i extends Ii{apply(e){return e}}_i.className="linear",i.JFn.registerClass(_i);class Ri extends Ii{apply(e){return i.ry7(e)}}Ri.className="sigmoid",i.JFn.registerClass(Ri);class Fi extends Ii{apply(e){return function(e){return(0,i.DZQ)((()=>{const t=i.WQq(.5,i.lKK(.2,e));return i.zQh(t,0,1)}))}(e)}}Fi.className="hardSigmoid",i.JFn.registerClass(Fi);class Di extends Ii{apply(e){return i.lw0(e)}}Di.className="softplus",i.JFn.registerClass(Di);class Oi extends Ii{apply(e){return function(e){return(0,i.DZQ)((()=>i.y4m(e,i.WQq(i.tnl(e),1))))}(e)}}Oi.className="softsign",i.JFn.registerClass(Oi);class Li extends Ii{apply(e){return i.ymU(e)}}Li.className="tanh",i.JFn.registerClass(Li);class Mi extends Ii{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return i.Vs9(e,t)}}Mi.className="softmax",i.JFn.registerClass(Mi);class zi extends Ii{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return i.HPB(e,t)}}zi.className="logSoftmax",i.JFn.registerClass(zi);class Pi extends Ii{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return(0,i.DZQ)((()=>i.lKK(i.ry7(i.lKK(e,t)),e)))}}Pi.className="swish",i.JFn.registerClass(Pi);class Bi extends Ii{apply(e){return(0,i.DZQ)((()=>i.lKK(e,i.ymU(i.lw0(e)))))}}function Wi(e){return e.getClassName()}function Ui(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return hr(e,i.JFn.SerializationMap.getMap().classNameMap,t,"activation")}function Vi(e){if(null==e){const e={className:"linear",config:{}};return Ui(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Ui(t)}return e instanceof Ii?e:Ui(e)}function Gi(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}Bi.className="mish",i.JFn.registerClass(Bi);class ji extends i.JFn.Serializable{}class Zi extends ji{constructor(e){super(),Gi(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,i.DZQ)((()=>{let t=(0,i.Ul9)([1]);return this.hasL1&&(t=(0,i.WQq)(t,(0,i.czq)(i.lKK(this.l1,(0,i.tnl)(e))))),this.hasL2&&(t=(0,i.WQq)(t,(0,i.czq)(i.lKK(this.l2,rs(e))))),i.tQQ(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Zi.className="L1L2",i.JFn.registerClass(Zi);const Ki={l1l2:"L1L2"};function Hi(e){return ur(e)}function qi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return hr(e,i.JFn.SerializationMap.getMap().classNameMap,t,"regularizer")}function Yi(e){if(null==e)return null;if("string"===typeof e){return qi({className:e in Ki?Ki[e]:e,config:{}})}return e instanceof ji?e:qi(e)}class Qi extends Zs{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Ds(e);let n=(0,i.VVh)(e);return null!=this.maxValue&&(n=(0,i.zQh)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Qi.className="ReLU",i.JFn.registerClass(Qi);class Xi extends Zs{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ds(e);return(0,i.H8d)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Xi.className="LeakyReLU",i.JFn.registerClass(Xi);class Ji extends Zs{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=_s(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Yi(e.alphaRegularizer),this.alphaConstraint=uo(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new Ja("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Os(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new Ws({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ds(e),(0,i.NsG)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:As(this.alphaInitializer),alphaRegularizer:Hi(this.alphaRegularizer),alphaConstraint:co(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Ji.className="PReLU",i.JFn.registerClass(Ji);class $i extends Zs{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new $a("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ds(e);return(0,i.Pqc)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}$i.className="ELU",i.JFn.registerClass($i);class ec extends Zs{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Ds(e);return(0,i.lKK)(n,(0,i.wgE)((0,i.rhj)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}ec.className="ThresholdedReLU",i.JFn.registerClass(ec);class tc extends Zs{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Mi).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return(0,i.DZQ)((()=>{let n=Ds(e);const a=t.mask;if(null!=a){const e=(0,i.lKK)((0,i.jbE)((0,i.SaS)(n.shape),(0,i.wgE)(a,n.dtype)),(0,i.d_2)(-1e9));n=(0,i.WQq)(n,e)}return this.axis instanceof Array?this.axis.length>1?(0,i.oNF)((0,i.jbE)(n,(0,i.VZ)(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function nc(e,t,n){if("number"===typeof e)return nr(e,t);if(e.length!==t)throw new Ja("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let r=0;r<t;++r){const s=e[r];if((a=s)!==parseInt(a.toString(),10))throw new Ja("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(s))}return e;var a}function ac(e,t,n,a){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function rc(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+Gr([n-t,0]);else{if("same"!==a)throw new Ja("Unsupport padding mode: ".concat(a,"."));e*=t}return e}function sc(e,t){return(0,i.DZQ)((()=>(Rr(t),"channelsFirst"===t?i.mgz(e,[0,2,3,1]):e)))}function oc(e,t){return(0,i.DZQ)((()=>(Rr(t),"channelsFirst"===t?i.mgz(e,[0,2,3,4,1]):e)))}function ic(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return(0,i.DZQ)((()=>{if(null==s&&(s="channelsLast"),Rr(s),3!==e.shape.length)throw new Ja("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new Ja("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new Ja("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(t.shape.length," instead"));if("channelsFirst"===s&&(e=i.mgz(e,[0,2,1])),"causal"===r)throw new $a("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let c=i.kA9(e,t,a,"same"===r?"same":"valid","NWC",o);return null!=n&&(c=os(c,n)),c}))}function cc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return(0,i.DZQ)((()=>{if(null==s&&(s="channelsLast"),Rr(s),3!==e.rank&&4!==e.rank)throw new Ja("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new Ja("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let l=sc(e,s);if("causal"===r)throw new $a("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=i.cZk.conv2d({x:l,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:c}),"channelsFirst"===s&&(l=i.mgz(l,[0,3,1,2])),l}))}function lc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return(0,i.DZQ)((()=>{if(null==s&&(s="channelsLast"),Rr(s),4!==e.rank&&5!==e.rank)throw new Ja("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new Ja("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let c=oc(e,s);if("causal"===r)throw new $a("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return c=i.IPL(c,t,a,"same"===r?"same":"valid","NDHWC",o),null!=n&&(c=os(c,n)),"channelsFirst"===s&&(c=i.mgz(c,[0,4,1,2,3])),c}))}tc.className="Softmax",i.JFn.registerClass(tc);class uc extends Zs{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",uc.verifyArgs(t),this.rank=e,br(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new $a("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=nc(t.kernelSize,e,"kernelSize"),this.strides=nc(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Fr(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Rr(this.dataFormat),this.activation=Vi(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=_s(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=uo(t.biasConstraint),this.biasRegularizer=Yi(t.biasRegularizer),this.activityRegularizer=Yi(t.activityRegularizer),this.dilationRate=nc(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Ja("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Ja("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Ja("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(ar("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!yr(e.kernelSize,"number",1,3))throw new Ja("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Wi(this.activation),useBias:this.useBias,biasInitializer:As(this.biasInitializer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),biasConstraint:co(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class dc extends uc{constructor(e,t){super(e,t),this.kernel=null,dc.verifyArgs(t),this.filters=t.filters,br(this.filters,"filters"),this.kernelInitializer=_s(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=uo(t.kernelConstraint),this.kernelRegularizer=Yi(t.kernelRegularizer)}build(e){e=Os(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ja("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,i.DZQ)((()=>{let t;e=Ds(e);const n=null==this.bias?null:this.bias.read(),a=xr(this.activation.getClassName());if(null!=a&&2===this.rank)t=cc(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=ic(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=cc(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new $a("convolutions greater than 3D are not implemented yet.");t=lc(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Os(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=ac(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:As(this.kernelInitializer),kernelRegularizer:Hi(this.kernelRegularizer),kernelConstraint:co(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new Ja("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class hc extends dc{constructor(e){super(2,e),hc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!yr(e.kernelSize,"number",1,2))throw new Ja("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}hc.className="Conv2D",i.JFn.registerClass(hc);class pc extends dc{constructor(e){super(3,e),pc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Ja("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}pc.className="Conv3D",i.JFn.registerClass(pc);class fc extends hc{constructor(e){if(super(e),this.inputSpec=[new Ws({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Ja("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=Os(e)).length)throw new Ja("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ja("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ws({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return i.DZQ((()=>{let t=Ds(e);if(4!==t.shape.length)throw new Ja("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const o=n[r],c=n[s],l=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=[a,rc(o,d,l,this.padding),rc(c,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=i.mgz(t,[0,2,3,1]));let f=i.wX9(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=i.mgz(f,[0,3,1,2])),null!=this.bias&&(f=os(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(e){const t=(e=Os(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[a]=rc(t[a],i,s,this.padding),t[r]=rc(t[r],c,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}fc.className="Conv2DTranspose",i.JFn.registerClass(fc);class mc extends pc{constructor(e){if(super(e),this.inputSpec=[new Ws({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Ja("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=Os(e)).length)throw new Ja("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ja("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ws({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return i.DZQ((()=>{let t=Ds(e);if(5!==t.shape.length)throw new Ja("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s,o;"channelsFirst"===this.dataFormat?(o=2,r=3,s=4):(o=1,r=2,s=3);const c=n[o],l=n[r],u=n[s],d=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=[a,rc(c,f,d,this.padding),rc(l,m,h,this.padding),rc(u,g,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=i.mgz(t,[0,2,3,4,1]));let b=i.jIJ(t,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=i.mgz(b,[0,4,1,2,3])),null!==this.bias&&(b=os(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=Os(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[a]=rc(t[a],l,o,this.padding),t[r]=rc(t[r],u,i,this.padding),t[s]=rc(t[s],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}mc.className="Conv3DTranspose",i.JFn.registerClass(mc);class gc extends dc{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Ja("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Ja("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Ja("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=_s(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Yi(t.depthwiseRegularizer),this.depthwiseConstraint=uo(t.depthwiseConstraint),this.pointwiseInitializer=_s(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Yi(t.pointwiseRegularizer),this.pointwiseConstraint=uo(t.pointwiseConstraint)}build(e){if((e=Os(e)).length<this.rank+2)throw new Ja("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Ja("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Ws({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,i.DZQ)((()=>{let t;if(e=Ds(e),1===this.rank)throw new $a("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=i.mgz(e,[0,2,3,1])),t=i.wdz(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=os(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=i.mgz(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=As(this.depthwiseInitializer),e.pointwiseInitializer=As(this.pointwiseInitializer),e.depthwiseRegularizer=Hi(this.depthwiseRegularizer),e.pointwiseRegularizer=Hi(this.pointwiseRegularizer),e.depthwiseConstraint=co(this.depthwiseConstraint),e.pointwiseConstraint=co(this.pointwiseConstraint),e}}gc.className="SeparableConv";class yc extends gc{constructor(e){super(2,e)}}yc.className="SeparableConv2D",i.JFn.registerClass(yc);class bc extends dc{constructor(e){super(1,e),bc.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!yr(e.kernelSize,"number",1,1))throw new Ja("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}bc.className="Conv1D",i.JFn.registerClass(bc);class vc extends Zs{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,i.DZQ)((()=>{if(e=Ds(e),"channelsLast"===this.dataFormat){const t=Xr(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Xr(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Xr(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Xr(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}vc.className="Cropping2D",i.JFn.registerClass(vc);class xc extends Zs{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Rr(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,gr(Nr,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return i.DZQ((()=>{let t=Ds(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=i.mgz(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?i.image.resizeNearestNeighbor(t,[e,a]):i.image.resizeBilinear(t,[e,a]);return i.mgz(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?i.image.resizeNearestNeighbor(t,[e,a]):i.image.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}xc.className="UpSampling2D",i.JFn.registerClass(xc);class wc extends uc{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=_s(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=uo(e.depthwiseConstraint),this.depthwiseRegularizer=Yi(e.depthwiseRegularizer)}build(e){if((e=Os(e)).length<4)throw new Ja("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Ja("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,i.DZQ)((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return(0,i.DZQ)((()=>{null==r&&(r="channelsLast"),Rr(r);let o=sc(e,r);if(4!==e.rank)throw new Ja("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new Ja("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return o=i.Gl3(o,t,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(o=i.mgz(o,[0,3,1,2])),o}))}(e=Ds(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=os(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Os(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=ac(t,this.kernelSize[0],this.padding,this.strides[0]),s=ac(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=As(this.depthwiseInitializer),e.depthwiseRegularizer=Hi(this.depthwiseRegularizer),e.depthwiseConstraint=co(this.depthwiseRegularizer),e}}function kc(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new Ja("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function Sc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return i.DZQ((()=>{const l=t.shape.length;if(l<3)throw new Ja("Input should be at least 3D, but is ".concat(l,"D."));const u=[1,0].concat(jr(2,l));if(t=i.mgz(t,u),null!=s)throw new $a("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=i.wgE(i.wgE(r,"bool"),"float32"),r.rank===l-1&&(r=i.UG6(r,-1)),r=i.mgz(r,u)),a&&(t=i.BEg(t,0),null!=r&&(r=i.BEg(r,0)));const d=[];let h,p=n;const f=t.shape[0],m=i.K$i(t);let g,y;null!=r&&(g=i.K$i(r));for(let t=0;t<f;++t){const n=m[t],a=i.DZQ((()=>e(n,p)));if(null==r)h=a[0],p=a[1];else{const e=i.DZQ((()=>{const e=g[t],n=i.jbE(i.P61(e),e);return{output:i.WQq(i.lKK(a[0],e),i.lKK(p[0],n)),newStates:p.map(((t,r)=>i.WQq(i.lKK(a[1][r],e),i.lKK(t,n))))}}));h=e.output,p=e.newStates}c&&d.push(h)}if(c){const e=1;y=i.t$z(d,e)}return[h,y,p]}))}wc.className="DepthwiseConv2D",i.JFn.registerClass(wc);class Tc extends Zs{constructor(e){let t;if(super(e),null==e.cell)throw new Ja("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Fc({cells:e.cell}):e.cell,null==t.stateSize)throw new Ja("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ws({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return jr(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Rs(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return i.DZQ((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new $a("Constants support is not implemented in RNN yet.");Rs(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ws({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!i.ZSL.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Ja("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((e=>new Ws({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(0,i.DZQ)((()=>{if(!this.stateful)throw new Qa("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Ja("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>i.Ul9([n,e]))):this.states_=[i.Ul9([n,this.cell.stateSize])];else if(null==e)i.ASo(this.states_),null!=this.keptStates&&(i.ASo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>i.Ul9([n,e]))):this.states_[0]=i.Ul9([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Ja("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):i.ASo(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,r];if(!i.ZSL.arraysEqual(a.shape,s))throw new Ja("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(a.shape));this.states_[t]=a}}this.states_=this.states_.map((e=>i.aCs(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=kc(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],o=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ws({shape:e.shape}));o=o.concat(this.stateSpec)}null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof Us){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return(0,i.DZQ)((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=Ds(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new Ja("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=Sc(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const d=this.returnSequences?l:c;return this.returnState?[d].concat(u):d}))}getInitialState(e){return(0,i.DZQ)((()=>{let t=i.Ul9(e.shape);return t=i.czq(t,[1,2]),t=qr(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?es(t,[1,e]):t)):this.cell.stateSize>1?[es(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Tc.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=So(t.cell,n);return new e(Object.assign(t,{cell:a}))}}Tc.className="RNN",i.JFn.registerClass(Tc);class Ic extends Zs{}class Nc extends Ic{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,br(this.units,"units"),this.activation=Vi(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=_s(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_s(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_s(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Yi(e.kernelRegularizer),this.recurrentRegularizer=Yi(e.recurrentRegularizer),this.biasRegularizer=Yi(e.biasRegularizer),this.kernelConstraint=uo(e.kernelConstraint),this.recurrentConstraint=uo(e.recurrentConstraint),this.biasConstraint=uo(e.biasConstraint),this.dropout=Vr([1,Gr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Vr([1,Gr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Os(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,i.DZQ)((()=>{if(2!==e.length)throw new Ja("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Dc({ones:()=>i.P61(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Dc({ones:()=>i.P61(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;r=ns(null!=s?i.lKK(e,s):e,this.kernel.read()),null!=this.bias&&(r=os(r,this.bias.read())),null!=o&&(n=i.lKK(n,o));let c=i.WQq(r,ns(n,this.recurrentKernel.read()));return null!=this.activation&&(c=this.activation.apply(c)),[c,c]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Wi(this.activation),useBias:this.useBias,kernelInitializer:As(this.kernelInitializer),recurrentInitializer:As(this.recurrentInitializer),biasInitializer:As(this.biasInitializer),kernelRegularizer:Hi(this.kernelRegularizer),recurrentRegularizer:Hi(this.recurrentRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:co(this.kernelConstraint),recurrentConstraint:co(this.recurrentConstraint),biasConstraint:co(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Nc.className="SimpleRNNCell",i.JFn.registerClass(Nc);class Cc extends Tc{constructor(e){e.cell=new Nc(e),super(e)}call(e,t){return(0,i.DZQ)((()=>{null!=this.cell.dropoutMask&&(i.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(i.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Cc.className="SimpleRNN",i.JFn.registerClass(Cc);class Ec extends Ic{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Ja("GRUCell does not support reset_after parameter set to true.");this.units=e.units,br(this.units,"units"),this.activation=Vi(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Vi(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=_s(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_s(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_s(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Yi(e.kernelRegularizer),this.recurrentRegularizer=Yi(e.recurrentRegularizer),this.biasRegularizer=Yi(e.biasRegularizer),this.kernelConstraint=uo(e.kernelConstraint),this.recurrentConstraint=uo(e.recurrentConstraint),this.biasConstraint=uo(e.biasConstraint),this.dropout=Vr([1,Gr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Vr([1,Gr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Os(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,i.DZQ)((()=>{if(2!==e.length)throw new Ja("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Dc({ones:()=>i.P61(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Dc({ones:()=>i.P61(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let o,c,l;0<this.dropout&&this.dropout<1&&(e=i.lKK(e,r[0]));let u=ns(e,this.kernel.read());this.useBias&&(u=os(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=i.lKK(a,s[0]));const d=this.recurrentKernel.read(),[h,p]=i.lDo(d,[2*this.units,this.units],d.rank-1),f=ns(a,h),[m,g,y]=i.lDo(u,3,u.rank-1),[b,v]=i.lDo(f,2,f.rank-1);o=this.recurrentActivation.apply(i.WQq(m,b)),c=this.recurrentActivation.apply(i.WQq(g,v));const x=ns(i.lKK(c,a),p);l=this.activation.apply(i.WQq(y,x));const w=i.WQq(i.lKK(o,a),i.lKK(i.WQq(1,i.HZy(o)),l));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Wi(this.activation),recurrentActivation:Wi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:As(this.kernelInitializer),recurrentInitializer:As(this.recurrentInitializer),biasInitializer:As(this.biasInitializer),kernelRegularizer:Hi(this.kernelRegularizer),recurrentRegularizer:Hi(this.recurrentRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:co(this.kernelConstraint),recurrentConstraint:co(this.recurrentConstraint),biasConstraint:co(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Ec.className="GRUCell",i.JFn.registerClass(Ec);class Ac extends Tc{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ec(e),super(e)}call(e,t){return(0,i.DZQ)((()=>{null!=this.cell.dropoutMask&&(i.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(i.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Ac.className="GRU",i.JFn.registerClass(Ac);class _c extends Ic{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,br(this.units,"units"),this.activation=Vi(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Vi(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=_s(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_s(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_s(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Yi(e.kernelRegularizer),this.recurrentRegularizer=Yi(e.recurrentRegularizer),this.biasRegularizer=Yi(e.biasRegularizer),this.kernelConstraint=uo(e.kernelConstraint),this.recurrentConstraint=uo(e.recurrentConstraint),this.biasConstraint=uo(e.biasConstraint),this.dropout=Vr([1,Gr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Vr([1,Gr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Os(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends ds{apply(t,a){const r=e.apply([n]),s=(new ps).apply([n]),o=e.apply([2*n]);return $r($r(r,s),o)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,i.DZQ)((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Ja("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Dc({ones:()=>i.P61(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Dc({ones:()=>i.P61(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let c,l,u,d;0<this.dropout&&this.dropout<1&&(e=i.lKK(e,s[0]));let h=ns(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=i.lKK(a,o[0])),h=i.WQq(h,ns(a,this.recurrentKernel.read())),this.useBias&&(h=os(h,this.bias.read()));const[p,f,m,g]=i.lDo(h,4,h.rank-1);c=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(f),u=i.WQq(i.lKK(l,r),i.lKK(c,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const y=i.lKK(d,this.activation.apply(u));return[y,y,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Wi(this.activation),recurrentActivation:Wi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:As(this.kernelInitializer),recurrentInitializer:As(this.recurrentInitializer),biasInitializer:As(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Hi(this.kernelRegularizer),recurrentRegularizer:Hi(this.recurrentRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:co(this.kernelConstraint),recurrentConstraint:co(this.recurrentConstraint),biasConstraint:co(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}_c.className="LSTMCell",i.JFn.registerClass(_c);class Rc extends Tc{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new _c(e),super(e)}call(e,t){return(0,i.DZQ)((()=>{null!=this.cell.dropoutMask&&(i.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(i.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Rc.className="LSTM",i.JFn.registerClass(Rc);class Fc extends Ic{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,i.DZQ)((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],s=0===o?[e[0]].concat(n):[s[0]].concat(n),s=i.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Rs(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{Mr("RNNCell_".concat(a),(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of t.cells)a.push(So(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ps(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Bs(t)}}function Dc(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=e,o=()=>null!=s?s(t(),n):is(t(),n),c=()=>cs(o,t,a);if(!r||r<=1)return i.aCs(c().clone());return Array(r).fill(void 0).map(c).map((e=>i.aCs(e.clone())))}Fc.className="StackedRNNCells",i.JFn.registerClass(Fc);var Oc=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};class Lc extends Tc{constructor(e){if(e.unroll)throw new $a("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new $a("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ws({ndim:5})]}call(e,t){return i.DZQ((()=>{if(null!=this.cell.dropoutMask&&(i.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(i.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Ja("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return i.DZQ((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)],s=i.Ul9(r);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];i.DZQ((()=>{if(!this.stateful)throw new Qa("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new Ja("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>i.Ul9(r))):this.states_=[i.Ul9(r)];else if(null==e)i.ASo(this.states_),null!=this.keptStates&&(i.ASo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>i.Ul9(r))):this.states_[0]=i.Ul9(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Ja("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):i.ASo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!i.ZSL.arraysEqual(n.shape,a))throw new Ja("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map((e=>i.aCs(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===t,c=e[i?3:2],l=e[i?4:3],u=ac(c,a[0],r,s[0],o[0]),d=ac(l,a[1],r,s[1],o[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}}Lc.className="ConvRNN2D";class Mc extends _c{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,br(this.filters,"filters"),this.kernelSize=nc(n,2,"kernelSize"),this.kernelSize.forEach((e=>br(e,"kernelSize"))),this.strides=nc(a||1,2,"strides"),this.strides.forEach((e=>br(e,"strides"))),this.padding=r||"valid",Fr(this.padding),this.dataFormat=s||"channelsLast",Rr(this.dataFormat),this.dilationRate=nc(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>br(e,"dilationRate")))}build(e){var t;e=Os(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Ja("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends ds{apply(e,t){return Jr([n.apply([a]),i.SaS([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return i.DZQ((()=>{if(3!==e.length)throw new Ja("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,a=e[0],r=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Dc({ones:()=>i.P61(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,c=(e,t,n)=>t&&t[n]?i.lKK(t[n],e):e;let l=c(a,o,0),u=c(a,o,1),d=c(a,o,2),h=c(a,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Dc({ones:()=>i.P61(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=c(r,p,0),m=c(r,p,1),g=c(r,p,2),y=c(r,p,3);const[b,v,x,w]=i.lDo(this.kernel.read(),4,3),[k,S,T,I]=this.useBias?i.lDo(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,k,this.padding),u=this.inputConv(u,v,S,this.padding),d=this.inputConv(d,x,T,this.padding),h=this.inputConv(h,w,I,this.padding);const[N,C,E,A]=i.lDo(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,N),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E),y=this.recurrentConv(y,A);const _=this.recurrentActivation.apply(i.WQq(l,f)),R=this.recurrentActivation.apply(i.WQq(u,m)),F=i.WQq(i.lKK(R,s),i.lKK(_,this.activation.apply(i.WQq(d,g)))),D=i.lKK(this.recurrentActivation.apply(i.WQq(h,y)),this.activation.apply(F));return[D,D,F]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Oc(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const r=i.Xtf(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?os(r,n,this.dataFormat):r}recurrentConv(e,t){return i.Xtf(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Mc.className="ConvLSTM2DCell",i.JFn.registerClass(Mc);class zc extends Lc{constructor(e){const t=new Mc(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}zc.className="ConvLSTM2D",i.JFn.registerClass(zc);class Pc extends Zs{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return(0,i.DZQ)((()=>{this.invokeCallHook(e,t);const n=Ds(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return cs((()=>is(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Pc.className="Dropout",i.JFn.registerClass(Pc);class Bc extends Pc{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Bc.className="SpatialDropout1D",i.JFn.registerClass(Bc);class Wc extends Zs{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,br(this.units,"units"),this.activation=Vi(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=_s(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=_s(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=uo(e.kernelConstraint),this.biasConstraint=uo(e.biasConstraint),this.kernelRegularizer=Yi(e.kernelRegularizer),this.biasRegularizer=Yi(e.biasRegularizer),this.activityRegularizer=Yi(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Os(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Os(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,i.DZQ)((()=>{this.invokeCallHook(e,t);const n=Ds(e),a=xr(this.activation.getClassName());let r;return null!=a?r=ns(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=ns(n,this.kernel.read()),null!=this.bias&&(r=os(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:Wi(this.activation),useBias:this.useBias,kernelInitializer:As(this.kernelInitializer),biasInitializer:As(this.biasInitializer),kernelRegularizer:Hi(this.kernelRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:co(this.kernelConstraint),biasConstraint:co(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Wc.className="Dense",i.JFn.registerClass(Wc);class Uc extends Zs{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Os(e);for(const t of e.slice(1))if(null==t)throw new Ja('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],Ur(e,1)]}call(e,t){return(0,i.DZQ)((()=>{this.invokeCallHook(e,t);let n=Ds(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,i.mgz)(n,e)}return function(e){if(e.rank<=1)throw new Ja("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],Ur(e.shape,1)];return i.tQQ(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Uc.className="Flatten",i.JFn.registerClass(Uc);class Vc extends Zs{constructor(e){super(e),this.supportsMasking=!0,this.activation=Vi(e.activation)}call(e,t){return(0,i.DZQ)((()=>{this.invokeCallHook(e,t);const n=Ds(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Wi(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Vc.className="Activation",i.JFn.registerClass(Vc);class Gc extends Zs{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,i.DZQ)((()=>{return e=Ds(e),t=e,n=this.n,(0,i.DZQ)((()=>{if(2!==t.shape.length)throw new Ja("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return es(qr(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Gc.className="RepeatVector",i.JFn.registerClass(Gc);class jc extends Zs{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let i=0;i<a.length;++i){const e=a[i];if(this.isUnknown(e)){if(null!==s)throw new Ja("Can only specifiy one unknown dimension.");s=i}else r*=e}const o=Ur(e);if(null!==s){if(0===r||o%r!==0)throw new Ja(n);a[s]=o/r}else if(o!==r)throw new Ja(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,i.DZQ)((()=>{this.invokeCallHook(e,t);const n=Ds(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return(0,i.tQQ)(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}jc.className="Reshape",i.JFn.registerClass(jc);class Zc extends Zs{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=jr(1,e.dims.length+1);if(!i.ZSL.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ws({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Os(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return(0,i.mgz)(Ds(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Zc.className="Permute",i.JFn.registerClass(Zc);class Kc extends Zs{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Ds(e);return(0,i.bzn)((0,i.Ec)(n,this.maskValue),-1)}call(e,t){return(0,i.DZQ)((()=>{this.invokeCallHook(e,t);const n=Ds(e),a=(0,i.bzn)((0,i.Ec)(n,this.maskValue),-1,!0);return(0,i.lKK)(n,(0,i.wgE)(a,n.dtype))}))}}Kc.className="Masking",i.JFn.registerClass(Kc);class Hc extends Zs{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(or(e.inputLength))}this.inputDim=e.inputDim,br(this.inputDim,"inputDim"),this.outputDim=e.outputDim,br(this.outputDim,"outputDim"),this.embeddingsInitializer=_s(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Yi(e.embeddingsRegularizer),this.activityRegularizer=Yi(e.activityRegularizer),this.embeddingsConstraint=uo(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,i.DZQ)((()=>this.maskZero?(e=Ds(e),(0,i.Ec)(e,(0,i.POl)(e))):null))}computeOutputShape(e){if(e=Os(e),null==this.inputLength)return[...e,this.outputDim];const t=or(this.inputLength);if(t.length!==e.length-1)throw new Ja('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new Ja('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,i.DZQ)((()=>{this.invokeCallHook(e,t);let n=Ds(e);"int32"!==n.dtype&&(n=Hr(n,"int32"));const a=as(this.embeddings.read(),(0,i.tQQ)(n,[n.size]));return(0,i.tQQ)(a,Os(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:As(this.embeddingsInitializer),embeddingsRegularizer:Hi(this.embeddingsRegularizer),activityRegularizer:Hi(this.activityRegularizer),embeddingsConstraint:co(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Hc.className="Embedding",i.JFn.registerClass(Hc);class qc extends Zs{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new $a}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new Ja("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Os(e)]),e.length<2)throw new Ja("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=fr(t),t.length>1)throw new Ja("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===fr(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,i.DZQ)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=Gr(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=qr(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,a=e[0],r=e.slice(1).concat([a]);let o=i.tQQ(s,[a].concat(Ur(e.slice(1))));o=i.mgz(o,[1,0]),o=i.tQQ(o,r),t.push(o),n=!0}else if(e>1){const a=jr(1,e).concat([0]);t.push(i.mgz(s,a)),n=!0}else t.push(s)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=i.tQQ(i.mgz(i.tQQ(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(jr(0,r-1));a=i.mgz(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=fr(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return i.DZQ((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Ja("`mask` should be an Array");if(!Array.isArray(e))throw new Ja("`inputs` should be an Array");if(t.length!==e.length)throw new Ja("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:i.UG6(e,0))))[0];for(let e=1;e<t.length-1;++e)n=i.n76(n,t[e]);return n}))}}class Yc extends qc{constructor(e){super(e)}mergeFunction(e){return(0,i.DZQ)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=i.WQq(t,e[n]);return t}))}}Yc.className="Add",i.JFn.registerClass(Yc);class Qc extends qc{constructor(e){super(e)}mergeFunction(e){return(0,i.DZQ)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=i.lKK(t,e[n]);return t}))}}Qc.className="Multiply",i.JFn.registerClass(Qc);class Xc extends qc{constructor(e){super(e)}mergeFunction(e){return(0,i.DZQ)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=i.WQq(t,e[n]);return i.lKK(1/e.length,t)}))}}Xc.className="Average",i.JFn.registerClass(Xc);class Jc extends qc{constructor(e){super(e)}mergeFunction(e){return(0,i.DZQ)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=i.PhQ(t,e[n]);return t}))}}Jc.className="Maximum",i.JFn.registerClass(Jc);class $c extends qc{constructor(e){super(e)}mergeFunction(e){return(0,i.DZQ)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=i.BpO(t,e[n]);return t}))}}$c.className="Minimum",i.JFn.registerClass($c);class el extends qc{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Ja("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(i.ZSL.arraysEqual(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new Ja("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,i.DZQ)((()=>Jr(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Ja("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Ja("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Ja("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Ja("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return i.DZQ((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let s=0;s<e.length;++s)null==t[s]?a.push(i.wgE(i.P61(e[s]),"bool")):t[s].rank<e[s].rank?a.push(i.UG6(t[s],-1)):a.push(t[s]);const r=i.xWs(a,this.axis);return i.Q7R(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function tl(e,t){for(;e<0;)e+=t;return e}el.className="Concatenate",i.JFn.registerClass(el);class nl extends qc{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){i.ZSL.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new $a("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new Ja("Dimension incompatibility: "+"".concat(t[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(e){if(2!==e.length)throw new Ja("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>tl(t,e[n].shape.length))):[tl(this.axes,n.shape.length),tl(this.axes,a.shape.length)],this.normalize&&(n=To(n,t[0]),a=To(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new $a("batchDot is not implemented for tensors of 4D or higher rank yet");if(i.ZSL.assert(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length))),i.ZSL.assert(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new $a("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return i.DZQ((()=>{let n,o;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=i.tQQ(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=i.tQQ(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=s[0]===s[1]?i.czq(i.lKK(e,t),s[0]):i.czq(i.lKK(i.mgz(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,a=s[1]===t.shape.length-1;o=i.NoW(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);o=i.r2V(o,t)}return 1===o.shape.length&&(o=i.UG6(o,1)),o}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[tl(this.axes,e.length),tl(this.axes,t.length)],n}computeOutputShape(e){i.ZSL.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new $a("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}nl.className="Dot",i.JFn.registerClass(nl);class al extends Zs{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,i.DZQ)((()=>{this.invokeCallHook(e,t);const n=Ds(e);return cs((()=>(0,i.WQq)(ts(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}al.className="GaussianNoise",i.JFn.registerClass(al);class rl extends Zs{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,i.DZQ)((()=>{this.invokeCallHook(e,t);const n=Ds(e);if(this.rate>0&&this.rate<1){return cs((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,i.lKK)(n,ts(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}rl.className="GaussianDropout",i.JFn.registerClass(rl);class sl extends Zs{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ds(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,i.DZQ)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=Ds(e),a=-1.7580993408473766;let r=(0,i.DQN)((0,i.YeY)(n),this.rate);r=Hr(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,o=-s*a*this.rate,c=(0,i.WQq)((0,i.lKK)(t,r),(0,i.lKK)((0,i.WQq)(r,-1),a));return(0,i.WQq)((0,i.lKK)(c,s),o)};return cs(a,(()=>Ds(e)),t.training||!1)}return e}))}}function ol(e,t,n,a,r){let s,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=i.BFc(e,t,n,a,r,o);else if(3===e.rank)s=i.kSi(e,t,n,a,r,o);else{if(4!==e.rank)throw new $a("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");s=i.T5N(e,t,n,a,r,o)}return s}function il(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return i.ZSL.arraysEqual(a.slice().sort(),jr(0,e.rank-1))?function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,i.DZQ)((()=>{const s=i.Clk(e,a),o=s.mean,c=s.variance;return[ol(e,o,c,n,t,r),o,c]}))}(e,t,n,a,r):function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,i.DZQ)((()=>{const s=i.Clk(e,a),o=s.mean,c=s.variance,l=[];for(const t of jr(0,e.rank))-1!==a.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=(0,i.tQQ)(o,l),d=(0,i.tQQ)(c,l),h=null==t?null:(0,i.tQQ)(t,l),p=null==n?null:(0,i.tQQ)(n,l);return[ol(e,u,d,p,h,r),o,c]}))}(e,t,n,a,r)}sl.className="AlphaDropout",i.JFn.registerClass(sl);class cl extends Zs{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=_s(e.betaInitializer||"zeros"),this.gammaInitializer=_s(e.gammaInitializer||"ones"),this.movingMeanInitializer=_s(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=_s(e.movingVarianceInitializer||"ones"),this.betaConstraint=uo(e.betaConstraint),this.gammaConstraint=uo(e.gammaConstraint),this.betaRegularizer=Yi(e.betaRegularizer),this.gammaRegularizer=Yi(e.gammaRegularizer)}build(e){e=Os(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Ja("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new Ws({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,i.DZQ)((()=>{const n=null!=t.training&&t.training,a=Ds(e),r=a.shape,s=r.length,o=jr(0,s),c=this.axis>=0?this.axis:this.axis+s;o.splice(c,1);const l=nr(1,s);l[c]=r[c];const u=o.slice();u.sort();const d=!i.ZSL.arraysEqual(u,jr(0,s).slice(0,s-1));if(!n)return(()=>{if(d){const e=(0,i.tQQ)(this.movingMean.read(),l),t=(0,i.tQQ)(this.movingVariance.read(),l),n=this.center?(0,i.tQQ)(this.beta.read(),l):null,r=this.scale?(0,i.tQQ)(this.gamma.read(),l):null;return ol(a,e,t,n,r,this.epsilon)}return ol(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=il(a,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(e,t,n)=>{i.DZQ((()=>{const a=1-n,r=e.read(),s=i.lKK(i.jbE(r,t),a);e.write(i.jbE(r,s))}))};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:As(this.betaInitializer),gammaInitializer:As(this.gammaInitializer),movingMeanInitializer:As(this.movingMeanInitializer),movingVarianceInitializer:As(this.movingVarianceInitializer),betaRegularizer:Hi(this.betaRegularizer),gammaRegularizer:Hi(this.gammaRegularizer),betaConstraint:co(this.betaConstraint),gammaConstraint:co(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}cl.className="BatchNormalization",i.JFn.registerClass(cl);class ll extends Zs{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=_s(e.betaInitializer||"zeros"),this.gammaInitializer=_s(e.gammaInitializer||"ones"),this.betaRegularizer=Yi(e.betaRegularizer),this.gammaRegularizer=Yi(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Os(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: ".concat(r));if(this.axis.length!==fr(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((t=>e[t])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const n=Ds(e),a=n.shape,r=a.length;return(0,i.DZQ)((()=>{let{mean:e,variance:t}=(0,i.Clk)(n,this.axis,!0);const s=nr(1,r);for(const n of this.axis)s[n]=a[n];const o=e=>null!=e&&e.shape.length!==r?i.tQQ(e,s):e;let c=this.scale?o(this.gamma.read()):null,l=this.center?o(this.beta.read()):null;const u=[],d=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(u.push(a[n]),d.push(1)):(u.push(1),d.push(a[n]));return e=i.Vsq(e,u),t=i.Vsq(t,u),null!=c&&(c=i.Vsq(c,d)),null!=l&&(l=i.Vsq(l,d)),ol(n,e,t,l,c,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:As(this.betaInitializer),gammaInitializer:As(this.gammaInitializer),betaRegularizer:Hi(this.betaRegularizer),gammaRegularizer:Hi(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}ll.className="LayerNormalization",i.JFn.registerClass(ll);class ul extends Zs{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Ja("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Ja("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new Ja("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ws({ndim:4})]}computeOutputShape(e){let t,n;return e=Os(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,i.DZQ)((()=>{return t=Ds(e),n=this.padding,a=this.dataFormat,(0,i.DZQ)((()=>{if(4!==t.rank)throw new Ja("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Ja("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new Ja("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],i.eVF(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function dl(e,t,n,a,r,s){return(0,i.DZQ)((()=>{let o;Rr(r),Dr(s),Fr(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=sc(e,r);const c="same"===a?"same":"valid";return o="max"===s?i.jgi(e,t,n,c):i.$jT(e,t,n,c),"channelsFirst"===r&&(o=i.mgz(o,[0,3,1,2])),o}))}function hl(e,t,n,a,r,s){return(0,i.DZQ)((()=>{let o;Rr(r),Dr(s),Fr(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=oc(e,r);const c="same"===a?"same":"valid";return o="max"===s?i.NYV(e,t,n,c):i.sub(e,t,n,c),"channelsFirst"===r&&(o=i.mgz(o,[0,4,1,2,3])),o}))}ul.className="ZeroPadding2D",i.JFn.registerClass(ul);class pl extends Zs{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new Ja("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if(br(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new Ja("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}br(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Fr(this.padding),this.inputSpec=[new Ws({ndim:3})]}computeOutputShape(e){const t=ac((e=Os(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,i.DZQ)((()=>{this.invokeCallHook(e,t),e=qr(Ds(e),2);const n=this.poolingFunction(Ds(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return i.r2V(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class fl extends pl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rr(r),Fr(a),dl(e,t,n,a,r,"max")}}fl.className="MaxPooling1D",i.JFn.registerClass(fl);class ml extends pl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rr(r),Fr(a),dl(e,t,n,a,r,"avg")}}ml.className="AveragePooling1D",i.JFn.registerClass(ml);class gl extends Zs{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Ja("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];br(this.poolSize,"poolSize"),br(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Rr(this.dataFormat),Fr(this.padding),this.inputSpec=[new Ws({ndim:4})]}computeOutputShape(e){e=Os(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=ac(t,this.poolSize[0],this.padding,this.strides[0]),n=ac(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,i.DZQ)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ds(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class yl extends gl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rr(r),Fr(a),dl(e,t,n,a,r,"max")}}yl.className="MaxPooling2D",i.JFn.registerClass(yl);class bl extends gl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rr(r),Fr(a),dl(e,t,n,a,r,"avg")}}bl.className="AveragePooling2D",i.JFn.registerClass(bl);class vl extends Zs{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Ja("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];br(this.poolSize,"poolSize"),br(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Rr(this.dataFormat),Fr(this.padding),this.inputSpec=[new Ws({ndim:5})]}computeOutputShape(e){e=Os(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=ac(t,this.poolSize[0],this.padding,this.strides[0]),n=ac(n,this.poolSize[1],this.padding,this.strides[1]),a=ac(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return(0,i.DZQ)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ds(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class xl extends vl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rr(r),Fr(a),hl(e,t,n,a,r,"max")}}xl.className="MaxPooling3D",i.JFn.registerClass(xl);class wl extends vl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Rr(r),Fr(a),hl(e,t,n,a,r,"avg")}}wl.className="AveragePooling3D",i.JFn.registerClass(wl);class kl extends Zs{constructor(e){super(e),this.inputSpec=[new Ws({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new $a}}class Sl extends kl{constructor(e){super(e||{})}call(e,t){return(0,i.DZQ)((()=>{const t=Ds(e);return i.i2o(t,1)}))}}Sl.className="GlobalAveragePooling1D",i.JFn.registerClass(Sl);class Tl extends kl{constructor(e){super(e||{})}call(e,t){return(0,i.DZQ)((()=>{const t=Ds(e);return i.T9B(t,1)}))}}Tl.className="GlobalMaxPooling1D",i.JFn.registerClass(Tl);class Il extends Zs{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Rr(this.dataFormat),this.inputSpec=[new Ws({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new $a}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Nl extends Il{call(e,t){return(0,i.DZQ)((()=>{const t=Ds(e);return"channelsLast"===this.dataFormat?i.i2o(t,[1,2]):i.i2o(t,[2,3])}))}}Nl.className="GlobalAveragePooling2D",i.JFn.registerClass(Nl);class Cl extends Il{call(e,t){return(0,i.DZQ)((()=>{const t=Ds(e);return"channelsLast"===this.dataFormat?i.T9B(t,[1,2]):i.T9B(t,[2,3])}))}}Cl.className="GlobalMaxPooling2D",i.JFn.registerClass(Cl);class El extends Zs{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=So(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class Al extends El{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Os(e)).length<3)throw new Ja("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Os(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return(0,i.DZQ)((()=>Sc(((e,n)=>[Ds(this.layer.call(e,t)),[]]),e=Ds(e),[],!1,null,null,!1,!0)[1]))}}Al.className="TimeDistributed",i.JFn.registerClass(Al);class _l extends El{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=So(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=So(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,gr(Ar,"BidirectionalMergeMode",r),e.weights)throw new $a("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):sr(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=kc(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new Ja("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map((e=>new Ws({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),o.push(...a)}if(null!=a)throw new $a("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof Us;for(const c of s)if(c instanceof Us!==i)throw new Ja("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return(0,i.DZQ)((()=>{const n=t.initialState;let a,r,s,o;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=i.BEg(r,1)),"concat"===this.mergeMode?o=Jr([a,r]):"sum"===this.mergeMode?o=i.WQq(a,r):"ave"===this.mergeMode?o=i.lKK(.5,i.WQq(a,r)):"mul"===this.mergeMode?o=i.lKK(a,r):null==this.mergeMode&&(o=[a,r]),this.returnState?null==this.mergeMode?o.concat(s):[o].concat(s):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Mr(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Mr(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=So(t.layer);if(delete t.layer,null!=t.numConstants)throw new $a("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}_l.className="Bidirectional",i.JFn.registerClass(_l);class Rl extends Zs{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,i.DZQ)((()=>("float32"!==(e=Ds(e)).dtype&&(e=Hr(e,"float32")),(0,i.WQq)((0,i.lKK)(e,this.scale),this.offset))))}}Rl.className="Rescaling",i.JFn.registerClass(Rl);const{resizeBilinear:Fl,cropAndResize:Dl}=i.image;class Ol extends Zs{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,s,o,c){return(0,i.DZQ)((()=>{let l,u=!1;const d=[t/s,n/o,(a+t)/s,(r+n)/o],h=[];3===e.rank?(u=!0,l=(0,i.t$z)([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(d);const p=(0,i.OEK)(h,[h.length,4]),f=(0,i.y17)(0,h.length,1,"int32"),m=Dl(l,p,f,[a,r],"nearest");return Hr(u?Ds((0,i.K$i)(m)):m,c)}))}upsize(e,t,n,a){return(0,i.DZQ)((()=>Hr(Fl(e,[t,n]),a)))}call(e,t){return(0,i.DZQ)((()=>{const t=Ds(e),n=t.dtype,a=t.shape,r=a[a.length-3],s=a[a.length-2];let o=0;r!==this.height&&(o=Math.floor((r-this.height)/2));let i=0;return s!==this.width&&(i=Math.floor((s-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,r,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Os(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Ol.className="CenterCrop",i.JFn.registerClass(Ol);class Ll extends Zs{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Os(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,i.DZQ)((()=>{let n;if("int32"!==(e=Ds(e)).dtype&&(e=Hr(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new Ja("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=Ds(t.countWeights)}const a=(0,i.T9B)(e),r=(0,i.jkA)(e),s=(0,i.rhj)(this.numTokens,a).bufferSync().get(0),o=(0,i.DQN)(r,0).bufferSync().get(0);if(!s||!o)throw new Ja("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,a){let r=Ds(e);if("int32"!==r.dtype&&(r=Hr(r,"int32")),"int"===t)return r;const s=r.shape;if(0===r.rank&&(r=(0,i.UG6)(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=(0,i.UG6)(r,-1)),r.rank>2)throw new Ja("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(s)+" which would result in output rank ".concat(r.rank,"."));const o=["multiHot","oneHot"].includes(t),c=r;let l;if(l="undefined"!==typeof a&&"count"===t?(0,i.aOp)(c,a,n,o):(0,i.aOp)(c,[],n,o),"tfIdf"!==t)return l;if(a)return(0,i.lKK)(l,a);throw new Ja("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Ll.className="CategoryEncoding",i.JFn.registerClass(Ll);const Ml=new Set(["bilinear","nearest"]);class zl extends Zs{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Ml.has(e.interpolation))throw new Ja("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Os(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,i.DZQ)((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return i.image.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return i.image.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Ml]," are supported"))}))}}zl.className="Resizing",i.JFn.registerClass(zl);class Pl{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Pl.className="RandomSeed";class Bl extends Zs{constructor(e){super(e),this.randomGenerator=new Pl(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Bl.className="BaseRandomLayer";const Wl=new Set(["bilinear","nearest"]);class Ul extends Bl{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Ja("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Ja("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new Ja("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!Wl.has(n))throw new Ja("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Os(e))[2];return[this.imgHeight,-1,t]}call(e,t){return(0,i.DZQ)((()=>{const t=Ds(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=(0,i.YeY)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return i.image.resizeBilinear(e,r);case"nearest":return i.image.resizeNearestNeighbor(e,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...Wl]," are supported"))}}))}}Ul.className="RandomWidth",i.JFn.registerClass(Ul);var Vl,Gl=n(5452),jl=n(4334);function Zl(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(Yl(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const o=Zl(e[s],t,n,a);r[s]=o}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,r.value),r.value}function Kl(e){return Hl(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:ql)}function Hl(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(Yl(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=Hl(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function ql(e){return null===e?null:Yl(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Yl(e){let t=!1;if(i._K2().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(551);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof i.qYS)&&!(e instanceof Promise)&&!t)}function Ql(e){return function(e,t){return Zl(e,t)}(e,Xl)}function Xl(e){return e instanceof i.qYS?{value:e.clone(),recurse:!1}:Yl(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Jl{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class $l extends Jl{constructor(){super($l.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function eu(e){return new ru(e)}function tu(e,t){return new mu(e,t)}$l.INITIAL_CAPACITY=32;class nu{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new du(this,e)}filter(e){return new lu(this,e)}map(e){return new uu(this,e)}mapAsync(e){return new hu(this,e)}serialMapAsync(e){return new hu(this,e).serial()}flatmap(e){return new fu(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new cu(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ql;return this.rowMajorBatch(e,t).map((e=>Kl(e,n)))}concatenate(e,t){return new mu(new au([this,e]),t)}take(e){return e<0||null==e?this:new iu(this,e)}skip(e){return e<0||null==e?this:new ou(this,e)}prefetch(e){return new gu(this,e)}shuffle(e,t){return new yu(this,e,t)}serial(){return new su(this)}}class au extends nu{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Ql(e),done:!1}}}class ru extends nu{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: ".concat(e.message),e}}}class su extends nu{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class ou extends nu{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;i.ASo(e.value)}return this.upstream.next()}}class iu extends nu{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class cu extends nu{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class lu extends nu{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;i.ASo(e.value)}}}class uu extends nu{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=i.d_S.getTensorsInContainer(e.value),n=this.transform(e.value),a=i.d_S.getTensorsInContainer(n);for(const r of t)i.d_S.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}}class du extends nu{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class hu extends nu{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=i.d_S.getTensorsInContainer(e.value),n=await this.transform(e.value),a=i.d_S.getTensorsInContainer(n);for(const r of t)i.d_S.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}}class pu extends nu{constructor(){super(),this.outputQueue=new $l,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class fu extends pu{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=i.d_S.getTensorsInContainer(e.value),n=this.transform(e.value),a=i.d_S.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const r of t)i.d_S.isTensorInList(r,a)||r.dispose();return!0}}class mu extends nu{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(Vl||(Vl={}));class gu extends nu{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Jl(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class yu extends gu{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=jl.alea(n||i.ZSL.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class bu{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return i.ZSL.assert(e>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(e))),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),vu((async()=>(await n.iterator()).columnMajorBatch(e,t,xu)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,vu((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,vu((async()=>(await t.iterator()).filter((t=>i.DZQ((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return vu((async()=>(await t.iterator()).map((t=>i.DZQ((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return vu((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return vu((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,vu((async()=>tu(eu((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,vu((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=jl.alea(t||i.ZSL.now().toString());return vu((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,vu((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function vu(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends bu{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function xu(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof i.qYS||i.ZSL.isTypedArray(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof i.qYS?i.t$z(e):i.OEK(e)}(e),recurse:!1}}return{value:null,recurse:!0}}bu.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function wu(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&i.ZSL.assert("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}const ku=i.kpo.YO;class Su extends i.uI_{nextDataId(){return Su.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new i.GJx(this,(0,i.Hi9)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,i._K2)().get("IS_NODE")&&i.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&i.ZSL.isString(n[0])){const r=n.map((e=>i.ZSL.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return i.backend_util.mergeRealAndImagArrays(e,t)}return i.ZSL.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>i.ZSL.decodeString(e)));return(0,i.ra8)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,i.ra8)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,i.Hi9)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=i.ZSL.now();e();return{kernelMs:i.ZSL.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){wu([e],"where");const t=this.readSync(e.dataId);return ku(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Su.nextDataId=0;function Tu(e){return(t,n,a)=>{const r=i.ZSL.getArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function Iu(e,t,n){return Nu(e,Tu(t),n)}function Nu(e,t,n){return a=>{let{inputs:r,attrs:s,backend:o}=a;const{x:c}=r;wu(c,e);const l=o,u=l.data.get(c.dataId).values;let d;if("string"===c.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");d=i.backend_util.fromUint8ToStringArray(u)}else d=u;const h=n||c.dtype,p=t(d,h,s);return l.makeTensorInfo(c.shape,h,p)}}(0,i.gJX)("cpu",(()=>new Su),1);const Cu=Iu(i.Pah,(e=>e>=0?e:Math.exp(e)-1)),Eu={kernelName:i.Pah,backendName:"cpu",kernelFunc:Cu};function Au(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const _u={kernelName:i.lzr,backendName:"cpu",kernelFunc:Au};function Ru(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;wu([r],"leakyRelu");const o=i.ZSL.sizeFromShape(r.shape),c=n.data.get(r.dataId).values,l=i.ZSL.getTypedArrayFromDType("float32",o);for(let i=0;i<c.length;i++)l[i]=c[i]<0?s*c[i]:c[i];return n.makeTensorInfo(r.shape,"float32",l)}const Fu={kernelName:i.X0$,backendName:"cpu",kernelFunc:Ru};function Du(e){return(t,n,a,r,s)=>{const o=i.backend_util.assertAndGetBroadcastShape(t,n),c=o.length,l=i.ZSL.computeStrides(o),u=i.ZSL.sizeFromShape(o),d=i.ZSL.getTypedArrayFromDType(s,u),h=t.length,p=n.length,f=i.ZSL.computeStrides(t),m=i.ZSL.computeStrides(n),g=i.backend_util.getBroadcastDims(t,o),y=i.backend_util.getBroadcastDims(n,o);if(g.length+y.length===0)for(let i=0;i<d.length;++i)d[i]=e(a[i%a.length],r[i%r.length]);else for(let b=0;b<d.length;++b){const t=i.ZSL.indexToLoc(b,c,l),n=t.slice(-h);g.forEach((e=>n[e]=0));const s=i.ZSL.locToIndex(n,h,f),o=t.slice(-p);y.forEach((e=>o[e]=0));const u=i.ZSL.locToIndex(o,p,m);d[b]=e(a[s],r[u])}return[d,o]}}const Ou=Du(((e,t)=>e<0?t*e:e));function Lu(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;wu([a,r],"prelu");const s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,[i,c]=Ou(a.shape,r.shape,s,o,"float32");return n.makeTensorInfo(c,"float32",i)}const Mu={kernelName:i.Ncv,backendName:"cpu",kernelFunc:Lu},zu=Iu(i.fUj,(e=>Math.max(0,e))),Pu={kernelName:i.fUj,backendName:"cpu",kernelFunc:zu},Bu=Iu(i.P_L,(e=>Math.min(Math.max(0,e),6))),Wu={kernelName:i.P_L,backendName:"cpu",kernelFunc:Bu},Uu=Tu((e=>1/(1+Math.exp(-e)))),Vu=Iu(i.vI1,(e=>1/(1+Math.exp(-e)))),Gu={kernelName:i.vI1,backendName:"cpu",kernelFunc:Vu};function ju(e,t,n,a,r){if("linear"===n)return Au({inputs:{x:t},backend:e});if("relu"===n)return zu({inputs:{x:t},backend:e});if("elu"===n)return Cu({inputs:{x:t},backend:e});if("relu6"===n)return Bu({inputs:{x:t},backend:e});if("prelu"===n)return Lu({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return Ru({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return Vu({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function Zu(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",o)},i}const Ku={kernelName:i.pr3,backendName:"cpu",kernelFunc:Zu};function Hu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return Zu({inputs:{real:Hu(e,t,"float32"),imag:Hu(e,t,"float32")},backend:e})}const a=i.ZSL.makeZerosTypedArray(i.ZSL.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function qu(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const Yu={kernelName:i.LRy,backendName:"cpu",kernelFunc:qu};function Qu(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=i.ZSL.toTypedArray([0],n),[r,s]=Du(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[s,"bool",r]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function Xu(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return Au({inputs:{x:r},backend:n});const e=Hu(n,r.shape,r.dtype),t=Xu({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=Zu({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=qu({inputs:{input:r},backend:n}),t=Xu({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!i.ZSL.hasEncodingLoss(r.dtype,s)){const e=Au({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}const o=n.data.get(r.dataId).values,[c,l,u]=Qu(o,r.shape,r.dtype,s);return n.makeTensorInfo(c,l,u)}const Ju={kernelName:i.KXH,backendName:"cpu",kernelFunc:Xu};function $u(e,t,n,a){return null==n?n=>{let{inputs:r,backend:s}=n;const{a:o,b:c}=r,l=s;wu([o,c],e);const u=l.data.get(o.dataId).values,d=l.data.get(c.dataId).values,h="string"===o.dtype?i.backend_util.fromUint8ToStringArray(u):u,p="string"===o.dtype?i.backend_util.fromUint8ToStringArray(d):d,f=a||o.dtype,[m,g]=t(o.shape,c.shape,h,p,f);return l.makeTensorInfo(g,f,m)}:e=>{let{inputs:r,backend:s}=e;const{a:o,b:i}=r,c=s;if("complex64"===o.dtype||"complex64"===i.dtype){const e=Xu({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,s=c.data.get(a.dataId).values,l=c.data.get(r.dataId).values,u=Xu({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),d=c.data.get(u.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=c.data.get(h.dataId).values,m=c.data.get(p.dataId).values,[g,y,b]=n(o.shape,i.shape,s,l,f,m),v=c.makeTensorInfo(b,"float32",g),x=c.makeTensorInfo(b,"float32",y),w=Zu({inputs:{real:v,imag:x},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(v),c.disposeIntermediateTensorInfo(x),w}{const e=c.data.get(o.dataId).values,n=c.data.get(i.dataId).values,r=a||o.dtype,[s,l]=t(o.shape,i.shape,e,n,r);return c.makeTensorInfo(l,r,s)}}}function ed(e){return(t,n,a,r,s,o)=>{const c=i.backend_util.assertAndGetBroadcastShape(t,n),l=i.ZSL.sizeFromShape(c),u=c.length,d=i.ZSL.computeStrides(c),h=i.ZSL.getTypedArrayFromDType("float32",l),p=i.ZSL.getTypedArrayFromDType("float32",l),f=i.backend_util.getBroadcastDims(t,c),m=i.backend_util.getBroadcastDims(n,c),g=i.backend_util.mergeRealAndImagArrays(a,r),y=i.backend_util.mergeRealAndImagArrays(s,o),b=t.length,v=i.ZSL.computeStrides(t),x=n.length,w=i.ZSL.computeStrides(n);if(f.length+m.length===0)for(let i=0;i<h.length;i++){const t=i%g.length,n=i%y.length,a=e(g[2*t],g[2*t+1],y[2*n],y[2*n+1]);h[i]=a.real,p[i]=a.imag}else for(let k=0;k<h.length;k++){const t=i.ZSL.indexToLoc(k,u,d),n=t.slice(-b);f.forEach((e=>n[e]=0));const a=i.ZSL.locToIndex(n,b,v),r=t.slice(-x);m.forEach((e=>r[e]=0));const s=i.ZSL.locToIndex(r,x,w),o=e(g[2*a],g[2*a+1],y[2*s],y[2*s+1]);h[k]=o.real,p[k]=o.imag}return[h,p,c]}}const td=Du(((e,t)=>e+t)),nd=ed(((e,t,n,a)=>({real:e+n,imag:t+a}))),ad=$u(i.OMN,td,nd),rd={kernelName:i.OMN,backendName:"cpu",kernelFunc:ad};function sd(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=i.ZSL.sizeFromShape(r.shape),c=i.ZSL.inferFromImplicitShape(s,o),l=i.ZSL.sizeFromShape(c);i.ZSL.assert(o===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(r.shape,") has ").concat(o," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=c,t.shape=c}return{dataId:r.dataId,shape:c,dtype:r.dtype}}const od={kernelName:i.R23,backendName:"cpu",kernelFunc:sd};function id(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:c}=a;wu([r,s],"matMul");const l=r.shape.length,u=s.shape.length,d=o?r.shape[l-2]:r.shape[l-1],h=c?s.shape[u-1]:s.shape[u-2],p=o?r.shape[l-1]:r.shape[l-2],f=c?s.shape[u-2]:s.shape[u-1],m=r.shape.slice(0,-2),g=s.shape.slice(0,-2),y=i.ZSL.sizeFromShape(m),b=i.ZSL.sizeFromShape(g),v=i.ZEY.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,f]);i.ZSL.assert(d===h,(()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(h,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(s.shape," and transposeA=").concat(o)+" and transposeB=".concat(c," must match.")));const x=c?[b,f,h]:[b,h,f],w=sd({inputs:{x:r},backend:n,attrs:{shape:o?[y,d,p]:[y,p,d]}}),k=sd({inputs:{x:s},backend:n,attrs:{shape:x}}),S=o?w.shape[1]:w.shape[2],T=o?w.shape[2]:w.shape[1],I=c?k.shape[1]:k.shape[2],N=Math.max(y,b),C=n.data.get(w.dataId).values,E=n.data.get(k.dataId).values,A=i.ZSL.computeStrides(w.shape),_=i.ZSL.computeStrides(k.shape),[R,F,D]=o?[A[0],1,A[1]]:[A[0],A[1],1],[O,L,M]=c?[1,_[1],_[0]]:[_[1],1,_[0]],z=T*I,P=(0,i.ra8)([N,T,I],w.dtype),B=P.values,W=n.blockSize;for(let i=0;i<N;i++){const e=i%y,t=i%b;for(let n=0;n<T;n+=W){const a=Math.min(n+W,T);for(let r=0;r<I;r+=W){const s=Math.min(r+W,I);for(let o=0;o<S;o+=W){const c=Math.min(o+W,S);for(let l=n;l<a;l++)for(let n=r;n<s;n++){let a=0;for(let r=o;r<c;r++){a+=C[e*R+l*F+r*D]*E[r*O+n*L+t*M]}B[i*z+(l*I+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(v,P.dtype,P.values)}const cd={kernelName:i.jAQ,backendName:"cpu",kernelFunc:id};const ld={kernelName:i.Dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;let h,p,f;const m=[];h=id({inputs:{a:r,b:s},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(p=ad({inputs:{a:h,b:o},backend:n}),m.push(h),h=p),u&&(f=ju(n,h,u,i,d),m.push(h),h=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return h}};function ud(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const dd={kernelName:i.ljI,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;wu(t,"abs");let a=new Float32Array(i.ZSL.sizeFromShape(t.shape));return a=ud(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},hd=Iu(i.Vvy,(e=>Math.acos(e))),pd={kernelName:i.Vvy,backendName:"cpu",kernelFunc:hd},fd=Iu(i.PH8,(e=>Math.acosh(e))),md={kernelName:i.PH8,backendName:"cpu",kernelFunc:fd};const gd={kernelName:i.EkD,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;wu(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),s=(0,i.ra8)(a[0].shape,a[0].dtype),o=s.values;for(let i=0;i<a.length;i++){const e=r[i];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function yd(e,t,n,a,r){const s=t.length,o=i.ZSL.sizeFromShape(t),c=i.ZSL.computeStrides(t),l=i.ZSL.computeStrides(r),u=i.ZSL.getTypedArrayFromDType(n,i.ZSL.sizeFromShape(r));for(let d=0;d<o;++d){const t=i.ZSL.indexToLoc(d,s,c),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];u[i.ZSL.locToIndex(n,s,l)]=e[d]}return u}function bd(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;wu(r,"transpose");const o=r.shape.length,i=new Array(o);for(let l=0;l<i.length;l++)i[l]=r.shape[s[l]];const c=yd(a.data.get(r.dataId).values,r.shape,r.dtype,s,i);return{dataId:a.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const vd={kernelName:i.wx0,backendName:"cpu",kernelFunc:bd};const xd={kernelName:i.u8Z,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;wu(r,"all");const c=i.ZSL.parseAxisParam(s,r.shape);let l=c;const u=i.backend_util.getAxesPermutation(l,r.shape.length);let d=r;null!=u&&(d=bd({inputs:{x:r},backend:n,attrs:{perm:u}}),l=i.backend_util.getInnerMostAxes(l.length,r.shape.length)),i.backend_util.assertAxesAreInnerMostDims("all",l,d.shape.length);const[h,p]=i.backend_util.computeOutAndReduceShapes(d.shape,l),f=i.ZSL.sizeFromShape(p),m=i.ZSL.makeZerosTypedArray(i.ZSL.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let i=0;i<m.length;++i){const e=i*f;let t=g[e];for(let n=0;n<f;++n){const a=g[e+n];t=t&&a}m[i]=t}null!=u&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(o){const e=sd({inputs:{x:y},backend:n,attrs:{shape:i.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(y),e}return y}};const wd={kernelName:i.FSt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;wu(r,"any");const c=i.ZSL.parseAxisParam(s,r.shape);let l=c;const u=i.backend_util.getAxesPermutation(l,r.shape.length);let d=r;null!=u&&(d=bd({inputs:{x:r},backend:n,attrs:{perm:u}}),l=i.backend_util.getInnerMostAxes(l.length,r.shape.length)),i.backend_util.assertAxesAreInnerMostDims("any",l,d.shape.length);const[h,p]=i.backend_util.computeOutAndReduceShapes(d.shape,l),f=i.ZSL.sizeFromShape(p),m=i.ZSL.makeZerosTypedArray(i.ZSL.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let i=0;i<m.length;++i){const e=i*f;let t=g[e];for(let n=0;n<f;++n){const a=g[e+n];t=t||a}m[i]=t}null!=u&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(o){const e=sd({inputs:{x:y},backend:n,attrs:{shape:i.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(y),e}return y}};const kd={kernelName:i.Jp_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;wu(r,"argMax");let o=i.ZSL.parseAxisParam(s,r.shape);const c=i.backend_util.getAxesPermutation(o,r.shape.length);let l=r;const u=[];null!=c&&(l=bd({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),o=i.backend_util.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],i.backend_util.assertAxesAreInnerMostDims("argMax",o,l.shape.length);const[d,h]=i.backend_util.computeOutAndReduceShapes(l.shape,o),p=i.ZSL.sizeFromShape(d),f=i.ZSL.makeZerosTypedArray(p,"int32"),m=i.ZSL.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let i=0;i<f.length;++i){const e=i*m;let t=g[e],n=0;for(let a=0;a<m;++a){const r=g[e+a];r>t&&(t=r,n=a)}f[i]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}};const Sd={kernelName:i.p_m,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;wu(r,"argMin");let o=i.ZSL.parseAxisParam(s,r.shape);const c=i.backend_util.getAxesPermutation(o,r.shape.length);let l=r;const u=[];null!=c&&(l=bd({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),o=i.backend_util.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],i.backend_util.assertAxesAreInnerMostDims("argMin",o,l.shape.length);const[d,h]=i.backend_util.computeOutAndReduceShapes(l.shape,o),p=i.ZSL.sizeFromShape(d),f=i.ZSL.makeZerosTypedArray(p,"int32"),m=i.ZSL.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let i=0;i<f.length;++i){const e=i*m;let t=g[e],n=0;for(let a=0;a<m;++a){const r=g[e+a];r<t&&(t=r,n=a)}f[i]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}},Td=Iu(i.QKF,(e=>Math.asin(e))),Id={kernelName:i.QKF,backendName:"cpu",kernelFunc:Td},Nd=Iu(i.epO,(e=>Math.asinh(e))),Cd={kernelName:i.epO,backendName:"cpu",kernelFunc:Nd},Ed=Iu(i.TyE,(e=>Math.atan(e))),Ad={kernelName:i.TyE,backendName:"cpu",kernelFunc:Ed},_d=Du(((e,t)=>Math.atan2(e,t))),Rd=$u(i.lxb,_d),Fd={kernelName:i.lxb,backendName:"cpu",kernelFunc:Rd},Dd=Iu(i.zP9,(e=>Math.atanh(e))),Od={kernelName:i.zP9,backendName:"cpu",kernelFunc:Dd};function Ld(e,t,n,a,r,s){const o=r.strideHeight,c=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,i.ra8)(r.outShape,n),y=g.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],v=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let i=0;i<r.batchSize;++i){const t=i*b,n=i*a[0];for(let i=0;i<r.inChannels;++i)for(let g=0;g<r.outHeight;++g){const b=g*o-p,w=Math.max(0,b),k=Math.min(r.inHeight,d+b),S=t+g*v;for(let t=0;t<r.outWidth;++t){const o=t*c-f,d=Math.max(0,o),p=Math.min(r.inWidth,h+o);let g=m,b=0,v=0;for(let t=w;t<k;t+=l){const r=n+t*a[1];for(let t=d;t<p;t+=u){const n=e[r+t*a[2]+i];"max"===s&&n>g?g=n:"avg"===s&&(b+=n,v++)}if(isNaN(g))break}y[S+t*x+i]="avg"===s?b/v:g}}}return g}function Md(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,i.ra8)(a.outShape,"int32"),c=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,g=(0,i.ra8)(t,n,e);for(let i=0;i<a.batchSize;++i)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*c-f;let y=n;for(;y<0;)y+=u;const b=Math.min(a.inHeight,h+n);for(let c=0;c<a.outWidth;++c){const h=c*l-m;let f=h;for(;f<0;)f+=d;const v=Math.min(a.inWidth,p+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=u){const o=t-n;for(let n=f;n<v;n+=d){const c=n-h,l=g.get(i,t,n,e);l>x&&(x=l,w=r?s?((i*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:o*p+c)}}o.set(w,i,t,c,e)}}return o}function zd(e,t,n,a,r,s){const o=r.strideDepth,c=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,d=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterDepth,f=r.effectiveFilterHeight,m=r.effectiveFilterWidth,g=r.padInfo.front,y=r.padInfo.top,b=r.padInfo.left,v="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=(0,i.ra8)(r.outShape,n),w=x.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[2]*r.outShape[3]*r.outShape[4],T=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let i=0;i<r.batchSize;++i){const t=i*k,n=i*a[0];for(let i=0;i<r.inChannels;++i)for(let x=0;x<r.outDepth;++x){const k=x*o-g;let N=k;for(;N<0;)N+=u;const C=Math.min(r.inDepth,p+k),E=t+x*S;for(let t=0;t<r.outHeight;++t){const o=t*c-y;let p=o;for(;p<0;)p+=d;const g=Math.min(r.inHeight,f+o),x=E+t*T;for(let t=0;t<r.outWidth;++t){const o=t*l-b;let c=o;for(;c<0;)c+=h;const f=Math.min(r.inWidth,m+o),y=x+t*I;let k=v,S=0,T=0;for(let t=N;t<C;t+=u){const r=n+t*a[1];for(let t=p;t<g;t+=d){const n=r+t*a[2];for(let t=c;t<f;t+=h){const r=e[n+t*a[3]+i];if("max"===s&&r>k?k=r:"avg"===s&&(S+=r,T++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[y+i]="avg"===s?S/Math.max(T,1):k}}}}return x}const Pd={kernelName:i.ho8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;wu(r,"avgPool");const{filterSize:s,strides:o,pad:c,dimRoundingMode:l}=a;i.ZSL.assert(i.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const u=i.backend_util.computePool2DInfo(r.shape,s,o,1,c,l);let d;if(1===u.filterWidth&&1===u.filterHeight&&i.ZSL.arraysEqual(u.inShape,u.outShape))d=Au({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=i.ZSL.computeStrides(r.shape),a=Ld(e,r.shape,r.dtype,t,u,"avg");d=n.makeTensorInfo(u.outShape,r.dtype,a.values)}return d}};const Bd={kernelName:i.cS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:c,dimRoundingMode:l,dataFormat:u}=a;wu(r,"avgPool3d");const d=i.backend_util.computePool3DInfo(r.shape,s,o,1,c,l,u),h=zd(n.data.get(r.dataId).values,r.shape,r.dtype,i.ZSL.computeStrides(r.shape),d,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Wd={kernelName:i.wwC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:c,pad:l,dimRoundingMode:u}=a;wu([r,s],"avgPool3DGrad");const d=i.backend_util.computePool3DInfo(s.shape,o,c,1,l,u),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=d.dilationDepth,v=d.dilationHeight,x=d.dilationWidth,w=d.effectiveFilterDepth,k=d.effectiveFilterHeight,S=d.effectiveFilterWidth,T=w-1-d.padInfo.front,I=S-1-d.padInfo.left,N=k-1-d.padInfo.top,C=(0,i.ra8)(s.shape,"float32"),E=1/(m*g*y),A=n.bufferSync(r);for(let i=0;i<d.batchSize;++i)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){const r=t-T,s=n-N,o=a-I;let c=0;for(let t=0;t<w;t+=b){const n=(r+t)/h;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let t=0;t<k;t+=v){const a=(s+t)/p;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let t=0;t<S;t+=x){const r=(o+t)/f;if(r<0||r>=d.outWidth||Math.floor(r)!==r)continue;c+=A.get(i,n,a,r,e)}}}C.set(c*E,i,t,n,a,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const Ud={kernelName:i.VCH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;wu([r,s],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=a,d=i.backend_util.computePool2DInfo(o.shape,c,l,1,u),h=d.strideHeight,p=d.strideWidth,f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,v=d.effectiveFilterWidth,x=v-1-d.padInfo.left,w=b-1-d.padInfo.top,k=(0,i.ra8)(o.shape,"float32"),S=1/(f*m),T=n.data.get(r.dataId).values,I=(0,i.ra8)(r.shape,"float32",T);for(let i=0;i<d.batchSize;++i)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const a=t-w,r=n-x;let s=0;for(let t=0;t<b;t+=g){const n=(a+t)/h;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let t=0;t<v;t+=y){const a=(r+t)/p;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;s+=I.get(i,n,a,e)}}k.set(s*S,i,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const Vd={kernelName:i.i5R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:o,mean:c,variance:l}=t;i.ZSL.assert(c.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.ZSL.assert(null==o||c.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.ZSL.assert(null==s||c.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),wu([r,c,l,s,o],"batchNorm");let{varianceEpsilon:u}=a;null==u&&(u=.001);const d=n.data.get(r.dataId).values,h=n.data.get(c.dataId).values,p=n.data.get(l.dataId).values,f=s?n.data.get(s.dataId).values:new Float32Array([1]),m=o?n.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),y=m.length,b=f.length,v=p.length,x=h.length;let w=0,k=0,S=0,T=0;for(let i=0;i<d.length;++i)g[i]=m[w++]+(d[i]-h[k++])*f[S++]/Math.sqrt(p[T++]+u),w>=y&&(w=0),k>=x&&(k=0),S>=b&&(S=0),T>=v&&(T=0);return n.makeTensorInfo(r.shape,r.dtype,g)}};function Gd(e,t,n,a,r){const s=i.Kro.isSliceContinous(a,t,n),o=i.ZSL.sizeFromShape(n),c=i.ZSL.computeStrides(a);if(s){const n=i.Kro.computeFlatOffset(t,c);return"string"===r?e.slice(n,n+o):e.subarray(n,n+o)}const l="string"===r?i.backend_util.fromUint8ToStringArray(e):e,u=(0,i.ra8)(a,r,l),d=(0,i.ra8)(n,r);for(let i=0;i<d.size;++i){const e=d.indexToLoc(i),n=e.map(((e,n)=>e+t[n]));d.set(u.get(...n),...e)}return"string"===r?i.backend_util.fromStringArrayToUint8(d.values):d.values}function jd(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a;wu(r,"slice");const[c,l]=i.Kro.parseSliceParams(r,s,o);i.Kro.assertParamsValid(r,c,l);const u=Gd(n.data.get(r.dataId).values,c,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const Zd={kernelName:i.JiE,backendName:"cpu",kernelFunc:jd};const Kd={kernelName:i.Ik2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;wu([r],"batchToSpaceND");const c=s.reduce(((e,t)=>e*t)),l=i.backend_util.getReshaped(r.shape,s,c),u=i.backend_util.getPermuted(l.length,s.length),d=i.backend_util.getReshapedPermuted(r.shape,s,c),h=i.backend_util.getSliceBeginCoords(o,s.length),p=i.backend_util.getSliceSize(d,o,s.length),f=sd({inputs:{x:r},backend:n,attrs:{shape:l}}),m=bd({inputs:{x:f},backend:n,attrs:{perm:u}}),g=sd({inputs:{x:m},backend:n,attrs:{shape:d}}),y=jd({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};function Hd(e,t,n,a,r){const s=i.ZSL.sizeFromShape(a),o=i.ZSL.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(o[n]+=s>0?t[i]:1)}return o}function qd(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],s=e.shape[1],o=(0,i.ra8)([r,n],t.dtype);for(let i=0;i<r;i++)for(let r=0;r<s;r++){const s=e.get(i,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?o.set(1,i,s):t.size>0?o.set(o.get(i,s)+t.get(i,r),i,s):o.set(o.get(i,s)+1,i,s))}return o}const Yd={kernelName:i.N4F,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=Hd(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}},Qd=Du(((e,t)=>e&t)),Xd=$u(i.HNs,Qd),Jd={kernelName:i.HNs,backendName:"cpu",kernelFunc:Xd};const $d={kernelName:i.vj7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,c=i.backend_util.assertAndGetBroadcastShape(Array.from(s),Array.from(o));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},eh=Tu((e=>Math.ceil(e))),th=Nu(i.QDP,eh),nh={kernelName:i.QDP,backendName:"cpu",kernelFunc:th},ah=Iu(i.vaV,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),rh={kernelName:i.vaV,backendName:"cpu",kernelFunc:ah},sh={kernelName:i.$zE,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(i.ZSL.sizeFromShape(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,c=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values;for(let i=0;i<c.length;i++){const e=c[i],t=l[i];a[i]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function oh(e,t,n,a){const r=i.ZSL.getArrayFromDType(n,i.ZSL.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=i.ZSL.sizeFromShape(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const s="string"===n?i.backend_util.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[i+t]=s[o++]}a+=e.shape[1]}))}return r}function ih(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const ch={kernelName:i.dv8,backendName:"cpu",kernelFunc:ih};function lh(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=i.ZSL.parseAxisParam(r,t[0].shape)[0],o=t.map((e=>e.shape));i.backend_util.assertParamsConsistent(o,s);let c=i.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===i.ZSL.sizeFromShape(c))return n.makeTensorInfo(c,t[0].dtype,[]);const l=t.filter((e=>i.ZSL.sizeFromShape(e.shape)>0));if(1===l.length)return Au({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){const e=l.map((e=>qu({inputs:{input:e},backend:n}))),t=l.map((e=>ih({inputs:{input:e},backend:n}))),a=lh({inputs:e,backend:n,attrs:{axis:s}}),r=lh({inputs:t,backend:n,attrs:{axis:s}}),o=Zu({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),o}const u=l.map((e=>{const t=i.ZSL.sizeFromShape(e.shape.slice(s));return sd({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));c=i.backend_util.computeOutShape(u.map((e=>e.shape)),1);const h=1===u[0].shape[0],p=oh(d,c,t[0].dtype,h),f=i.backend_util.computeOutShape(l.map((e=>e.shape)),s),m=n.makeTensorInfo(f,t[0].dtype,p);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const uh={kernelName:i.$dB,backendName:"cpu",kernelFunc:lh};function dh(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:c,dataFormat:l,dilations:u,dimRoundingMode:d}=a;wu([r,s],"conv2d");const h=i.backend_util.convertConv2DDataFormat(l),p=i.backend_util.computeConv2DInfo(r.shape,s.shape,o,u,c,d,!1,h),f=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,y=p.dilationWidth,b=p.padInfo.left,v=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new i.ylz(p.outShape,r.dtype),k=i.ZSL.computeStrides(r.shape),S=i.ZSL.computeStrides(s.shape),T=k[0],I=x?k[1]:k[2],N=x?k[2]:1,C=x?1:k[1],E=w.strides[0],A=x?w.strides[1]:w.strides[2],_=x?w.strides[2]:1,R=x?1:w.strides[1],F=n.data.get(r.dataId).values,D=n.data.get(s.dataId).values,O=w.values;for(let i=0;i<p.batchSize;++i){const e=i*T,t=i*E;for(let n=0;n<p.outHeight;++n){const a=t+n*A,r=n*p.strideHeight-v;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=p.inHeight)continue;const s=t*S[0],o=e+n*I;for(let e=0;e<p.outWidth;++e){const t=a+e*_,n=e*p.strideWidth-b;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=p.inWidth)continue;const r=o+a*N;let i=s+e*S[1];for(let e=0;e<p.inChannels;++e){const n=F[r+e*C];for(let e=0;e<p.outChannels;++e)O[t+e*R]+=n*D[i+e];i+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,O)}const hh={kernelName:i.p2J,backendName:"cpu",kernelFunc:dh};const ph={kernelName:i.rFm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:d}=a;wu([r,s],"conv2dBackpropFilter");const h=i.backend_util.convertConv2DDataFormat(l),p=i.backend_util.computeConv2DInfo(r.shape,d,o,1,c,u,!1,h),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=p,b="channelsLast"===p.dataFormat,v=new i.ylz(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,k=n.data.get(r.dataId).values,S=n.data.get(s.dataId).values,T=new i.ylz(r.shape,r.dtype,k),I=new i.ylz(s.shape,s.dtype,S);for(let i=0;i<g;++i){const e=Math.max(0,Math.ceil((w-i)/f)),t=Math.min(p.outHeight,(p.inHeight+w-i)/f);for(let n=0;n<y;++n){const a=Math.max(0,Math.ceil((x-n)/m)),r=Math.min(p.outWidth,(p.inWidth+x-n)/m);for(let s=0;s<p.inChannels;++s)for(let o=0;o<p.outChannels;++o){let c=0;for(let l=0;l<p.batchSize;++l)for(let u=e;u<t;++u){const e=i+u*f-w;for(let t=a;t<r;++t){const a=n+t*m-x;c+=b?T.get(l,e,a,s)*I.get(l,u,t,o):T.get(l,s,e,a)*I.get(l,o,u,t)}}v.set(c,i,n,s,o)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const fh={kernelName:i.jfg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:c,pad:l,dataFormat:u,dimRoundingMode:d}=a;wu([r,s],"conv2dBackpropInput");const h=i.ZSL.computeStrides(s.shape),p=i.ZSL.computeStrides(r.shape);let f=i.backend_util.convertConv2DDataFormat(u);const m=i.backend_util.computeConv2DInfo(o,s.shape,c,1,l,d,!1,f),g=new i.ylz(m.inShape,"float32"),y=g.values,b=n.data.get(r.dataId).values,v=n.data.get(s.dataId).values,[x,w,k]=h,{batchSize:S,filterHeight:T,filterWidth:I,inChannels:N,inHeight:C,inWidth:E,outChannels:A,outHeight:_,outWidth:R,strideHeight:F,strideWidth:D}=m;f=m.dataFormat;const O=T-1-m.padInfo.top,L=I-1-m.padInfo.left,M="channelsLast"===f,z=g.strides[0],P=M?g.strides[1]:g.strides[2],B=M?g.strides[2]:1,W=M?1:g.strides[1],U=p[0],V=M?p[1]:p[2],G=M?p[2]:1,j=M?1:p[1];for(let i=0;i<S;++i)for(let e=0;e<N;++e)for(let t=0;t<C;++t){const n=t-O,a=Math.max(0,Math.ceil(n/F)),r=Math.min(_,(T+n)/F);for(let s=0;s<E;++s){const o=s-L,c=Math.max(0,Math.ceil(o/D)),l=Math.min(R,(I+o)/D);let u=0;for(let t=a;t<r;++t){const a=t*F-n;for(let n=c;n<l;++n){const r=U*i+V*t+G*n,s=x*(T-1-a)+w*(I-1-(n*D-o))+k*e;for(let e=0;e<A;++e){u+=b[r+j*e]*v[s+e]}}}y[z*i+P*t+B*s+W*e]=u}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const mh={kernelName:i.A1h,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:c,dilations:l}=a;wu([r,s],"conv3d");const u=i.backend_util.computeConv3DInfo(r.shape,s.shape,o,l,c),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=u,b=y.front,v=y.left,x=y.top,w=new i.ylz(u.outShape,r.dtype),k=n.data.get(r.dataId).values,S=n.data.get(s.dataId).values,T=w.values,I=i.ZSL.computeStrides(r.shape),N=i.ZSL.computeStrides(s.shape);for(let i=0;i<u.batchSize;++i){const e=i*I[0],t=i*w.strides[0];for(let n=0;n<u.outDepth;++n){const a=t+n*w.strides[1],r=n*u.strideDepth-b;for(let t=0;t<d;++t){const n=r+t*f;if(n<0||n>=u.inDepth)continue;const s=t*N[0],o=e+n*I[1];for(let e=0;e<u.outHeight;++e){const t=a+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const a=n+e*m;if(a<0||a>=u.inHeight)continue;const r=s+e*N[1],i=o+a*I[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,a=e*u.strideWidth-v;for(let e=0;e<p;++e){const t=a+e*g;if(t<0||t>=u.inWidth)continue;const s=r+e*N[2],o=i+t*u.inChannels;let c=s;for(let e=0;e<u.inChannels;++e){const t=k[o+e];for(let e=0;e<u.outChannels;++e)T[n+e]+=t*S[c+e];c+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const gh={kernelName:i.iGz,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:c,filterShape:l}=a;wu([r,s],"conv3dBackpropFilterV2");const u=i.ZSL.computeStrides(r.shape),d=i.ZSL.computeStrides(s.shape),h=i.backend_util.computeConv3DInfo(r.shape,l,o,1,c),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.filterDepth,y=h.filterHeight,b=h.filterWidth,v=new i.ylz(h.filterShape,"float32"),x=v.values,[w,k,S,T]=v.strides,I=n.data.get(s.dataId).values,[N,C,E,A]=d,_=n.data.get(r.dataId).values,[R,F,D,O]=u,L=h.padInfo.front,M=h.padInfo.left,z=h.padInfo.top;for(let i=0;i<g;++i){const e=Math.max(0,Math.ceil((L-i)/p)),t=Math.min(h.outDepth,(h.inDepth+L-i)/p),n=i*w;for(let a=0;a<y;++a){const r=Math.max(0,Math.ceil((z-a)/f)),s=Math.min(h.outHeight,(h.inHeight+z-a)/f),o=a*k+n;for(let n=0;n<b;++n){const c=Math.max(0,Math.ceil((M-n)/m)),l=Math.min(h.outWidth,(h.inWidth+M-n)/m),u=n*S+o;for(let o=0;o<h.inChannels;++o){const d=o*T+u;for(let u=0;u<h.outChannels;++u){let g=0;for(let d=0;d<h.batchSize;++d){const h=d*R,y=d*N;for(let d=e;d<t;++d){const e=(i+d*p-L)*F+h,t=d*C+y;for(let i=r;i<s;++i){const r=(a+i*f-z)*D+e,s=i*E+t;for(let e=c;e<l;++e){const t=e*A+s;g+=_[(n+e*m-M)*O+r+o]*I[t+u]}}}}x[d+u]=g}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const yh={kernelName:i.gC7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:c,inputShape:l}=a;wu([r],"conv3dBackpropInputV2");const u=i.ZSL.computeStrides(r.shape),d=i.ZSL.computeStrides(s.shape),h=i.backend_util.computeConv3DInfo(l,s.shape,c,1,o),p=new i.ylz(h.inShape,"float32"),f=p.values,[m,g,y,b]=p.strides,v=n.data.get(r.dataId).values,[x,w,k,S]=u,T=n.data.get(s.dataId).values,[I,N,C,E]=d,{batchSize:A,filterDepth:_,filterHeight:R,filterWidth:F,inChannels:D,inDepth:O,inHeight:L,inWidth:M,outChannels:z,outDepth:P,outHeight:B,outWidth:W,strideDepth:U,strideHeight:V,strideWidth:G}=h,j=_-1-h.padInfo.front,Z=R-1-h.padInfo.top,K=F-1-h.padInfo.left;for(let i=0;i<A;++i)for(let e=0;e<D;++e)for(let t=0;t<O;++t){const n=t-j,a=Math.max(0,Math.ceil(n/U)),r=Math.min(P,(_+n)/U);for(let s=0;s<L;++s){const o=s-Z,c=Math.max(0,Math.ceil(o/V)),l=Math.min(B,(R+o)/V);for(let u=0;u<M;++u){const d=u-K,h=Math.max(0,Math.ceil(d/G)),p=Math.min(W,(F+d)/G);let A=0;for(let t=a;t<r;++t){const a=t*U-n;for(let n=c;n<l;++n){const r=n*V-o;for(let s=h;s<p;++s){const o=x*i+w*t+k*n+S*s,c=I*(_-1-a)+N*(R-1-r)+C*(F-1-(s*G-d))+E*e;for(let e=0;e<z;++e){A+=v[o+e]*T[c+e]}}}}f[m*i+g*t+y*s+b*u+e]=A}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},bh=Iu(i.Mn0,(e=>Math.cos(e))),vh={kernelName:i.Mn0,backendName:"cpu",kernelFunc:bh},xh=Iu(i.MnK,(e=>Math.cosh(e))),wh={kernelName:i.MnK,backendName:"cpu",kernelFunc:xh};const kh={kernelName:i.MRQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:c,method:l,extrapolationValue:u}=a,[d,h,p,f]=r.shape,m=s.shape[0],[g,y]=c,b=(0,i.ra8)([m,g,y,f],"float32"),v=n.data.get(s.dataId).values,x=n.data.get(o.dataId).values,w=n.data.get(r.dataId).values,k=i.ZSL.computeStrides(r.shape),S=i.ZSL.computeStrides(b.shape);for(let i=0;i<m;i++){const e=4*i,t=v[e],n=v[e+1],a=v[e+2],r=v[e+3],s=x[i];if(s>=d)continue;const o=g>1?(a-t)*(h-1)/(g-1):0,c=y>1?(r-n)*(p-1)/(y-1):0;for(let d=0;d<g;d++){const e=g>1?t*(h-1)+d*o:.5*(t+a)*(h-1);if(e<0||e>h-1)for(let t=0;t<y;t++)for(let e=0;e<f;e++){const n=e+t*S[2]+d*S[1]+i*S[0];b.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),a=Math.ceil(e),o=e-t;for(let e=0;e<y;e++){const l=y>1?n*(p-1)+e*c:.5*(n+r)*(p-1);if(l<0||l>p-1){for(let t=0;t<f;t++){const n=t+e*S[2]+d*S[1]+i*S[0];b.values[n]=u}continue}const h=Math.floor(l),m=Math.ceil(l),g=l-h;for(let n=0;n<f;n++){let r=n+h*k[2]+t*k[1]+s*k[0];const c=w[r];r=n+m*k[2]+t*k[1]+s*k[0];const l=w[r];r=n+h*k[2]+a*k[1]+s*k[0];const u=w[r];r=n+m*k[2]+a*k[1]+s*k[0];const p=c+(l-c)*g,f=u+(w[r]-u)*g;r=n+e*S[2]+d*S[1]+i*S[0],b.values[r]=p+(f-p)*o}}}else for(let t=0;t<y;++t){const a=y>1?n*(p-1)+t*c:.5*(n+r)*(p-1);if(a<0||a>p-1){for(let e=0;e<f;e++){const n=e+t*S[2]+d*S[1]+i*S[0];b.values[n]=u}continue}const o=Math.round(a),l=Math.round(e);for(let e=0;e<f;e++){const n=e+o*k[2]+l*k[1]+s*k[0],a=e+t*S[2]+d*S[1]+i*S[0];b.values[a]=w[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Sh={kernelName:i.jj_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:c}=a;wu(r,"cumprod");const l=i.backend_util.getAxesPermutation([s],r.shape.length);let u=r;null!=l&&(u=bd({inputs:{x:r},backend:n,attrs:{perm:l}}));const d=i.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(d!==u.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(u.shape.length-1," but got axis=").concat(d));const h=(0,i.TuY)(u.dtype,"int32"),p=i.ZSL.makeOnesTypedArray(i.ZSL.sizeFromShape(u.shape),h),f=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],g=c?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let i=0;i<f.length;i+=m)for(let e=0;e<m;e++){const t=g(i,e);if(0===e)p[t]=o?1:f[t];else{const n=g(i,e-1);p[t]=o?f[n]*p[n]:f[t]*p[n]}}const y=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=bd({inputs:{x:y},backend:n,attrs:{perm:i.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),e}return y}};const Th={kernelName:i.nY8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:c}=a;wu(r,"cumsum");const l=i.backend_util.getAxesPermutation([s],r.shape.length);let u=r;null!=l&&(u=bd({inputs:{x:r},backend:n,attrs:{perm:l}}));const d=i.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(d!==u.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(u.shape.length-1," but got axis=").concat(d));const h=(0,i.TuY)(u.dtype,"int32"),p=i.ZSL.makeZerosTypedArray(i.ZSL.sizeFromShape(u.shape),h),f=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],g=c?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let i=0;i<f.length;i+=m)for(let e=0;e<m;e++){const t=g(i,e);if(0===e)p[t]=o?0:f[t];else{const n=g(i,e-1);p[t]=o?f[n]+p[n]:f[t]+p[n]}}const y=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=bd({inputs:{x:y},backend:n,attrs:{perm:i.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),e}return y}};const Ih={kernelName:i.wNW,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=Hd(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,e)}if(2===r.shape.length){const e=qd(n.bufferSync(r),n.bufferSync(s),o,i);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const Nh={kernelName:i.TMz,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a;i.ZSL.assert("NHWC"===o,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(o)));const c=r.shape[0],l=r.shape[1],u=r.shape[2],d=r.shape[3],h=l*s,p=u*s,f=d/(s*s),m=n.data.get(r.dataId).values,g=new Float32Array(c*h*p*f);let y=0;for(let i=0;i<c;++i)for(let e=0;e<h;++e){const t=Math.floor(e/s),n=e%s;for(let e=0;e<p;++e){const a=Math.floor(e/s),r=(n*s+e%s)*f;for(let e=0;e<f;++e){const n=e+r+d*(a+u*(t+l*i));g[y++]=m[n]}}}return n.makeTensorInfo([c,h,p,f],r.dtype,g)}};function Ch(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:c,dilations:l,dimRoundingMode:u}=a;wu([r,s],"depthwiseConv2DNative");const d=i.ZSL.computeStrides(r.shape),h=i.ZSL.computeStrides(s.shape);let p=l;null==p&&(p=[1,1]),i.ZSL.assert(i.backend_util.eitherStridesOrDilationsAreOne(o,p),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(p,"'")));const f=i.backend_util.computeConv2DInfo(r.shape,s.shape,o,p,c,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:v}=f,x=v.left,w=v.top,k=f.outChannels/f.inChannels,S=new i.ylz(f.outShape,r.dtype),T=n.data.get(r.dataId).values,I=n.data.get(s.dataId).values,N=S.values;for(let i=0;i<f.batchSize;++i){const e=i*d[0],t=i*S.strides[0];for(let n=0;n<f.outHeight;++n){const a=t+n*S.strides[1],r=n*f.strideHeight-w;for(let t=0;t<m;++t){const n=r+t*y;if(n<0||n>=f.inHeight)continue;const s=t*h[0],o=e+n*d[1];for(let e=0;e<f.outWidth;++e){const t=a+e*S.strides[2],n=e*f.strideWidth-x;for(let e=0;e<g;++e){const a=n+e*b;if(a<0||a>=f.inWidth)continue;const r=s+e*h[1],i=o+a*f.inChannels;let c=t,l=r;for(let e=0;e<f.inChannels;++e){const t=T[i+e];for(let e=0;e<k;++e)N[c+e]+=t*I[l+e];c+=k,l+=k}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const Eh={kernelName:i.tGH,backendName:"cpu",kernelFunc:Ch};const Ah={kernelName:i.X$8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:c,pad:l,dimRoundingMode:u,filterShape:d}=a;wu([r,s],"depthwiseConv2dNativeBackpropFilter");const h=i.backend_util.computeConv2DInfo(r.shape,d,o,c,l,u,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=new i.ylz(h.filterShape,"float32"),b=h.padInfo.left,v=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(r.dataId).values,k=new i.ylz(r.shape,r.dtype,w),S=n.data.get(s.dataId).values,T=new i.ylz(s.shape,s.dtype,S);for(let i=0;i<m;++i){const e=Math.max(0,Math.ceil((v-i)/p)),t=Math.min(h.outHeight,(h.inHeight+v-i)/p);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((b-n)/f)),r=Math.min(h.outWidth,(h.inWidth+b-n)/f);for(let s=0;s<h.outChannels;++s){const o=Math.trunc(s/x),c=s%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=e;c<t;++c){const e=i+c*p-v;for(let t=a;t<r;++t){const a=n+t*f-b;l+=k.get(u,e,a,o)*T.get(u,c,t,s)}}y.set(l,i,n,o,c)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const _h={kernelName:i.nVu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:c,pad:l,dimRoundingMode:u,inputShape:d}=a;wu([r,s],"depthwiseConv2DNativeBackpropInput");const h=i.ZSL.computeStrides(r.shape),p=i.ZSL.computeStrides(s.shape),f=i.backend_util.computeConv2DInfo(d,s.shape,o,c,l,u,!0),m=new i.ylz(f.inShape,"float32"),g=m.values,[y,b,v]=m.strides,x=n.data.get(r.dataId).values,[w,k,S]=h,T=n.data.get(s.dataId).values,[I,N,C]=p,{batchSize:E,filterHeight:A,filterWidth:_,inChannels:R,inHeight:F,inWidth:D,outChannels:O,outHeight:L,outWidth:M,strideHeight:z,strideWidth:P}=f,B=A-1-f.padInfo.top,W=_-1-f.padInfo.left,U=O/R;for(let i=0;i<E;++i)for(let e=0;e<R;++e)for(let t=0;t<F;++t){const n=t-B,a=Math.max(0,Math.ceil(n/z)),r=Math.min(L,(A+n)/z);for(let s=0;s<D;++s){const o=s-W,c=Math.max(0,Math.ceil(o/P)),l=Math.min(M,(_+o)/P);let u=0;for(let t=a;t<r;++t){const a=t*z-n;for(let n=c;n<l;++n){const r=w*i+k*t+S*n,s=I*(A-1-a)+N*(_-1-(n*P-o))+C*e;for(let t=0;t<U;++t){u+=x[r+(e*U+t)]*T[s+t]}}}g[y*i+b*t+v*s+e]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Rh={kernelName:i.ORI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=i.ZSL.sizeFromShape(a.shape),s=n.data.get(a.dataId).values,o=(0,i.ra8)([r,r],a.dtype),c=o.values;for(let i=0;i<s.length;i++)c[i*r+i]=s[i];const l=[...a.shape,...a.shape];return n.makeTensorInfo(l,o.dtype,o.values)}},Fh={kernelName:i.jxD,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s}=t,{strides:o,pad:c,dilations:l}=a,u=n,d=u.data.get(r.dataId).values,h=r.shape.length,p=u.data.get(s.dataId).values,f=s.shape.length,{batchSize:m,inHeight:g,inWidth:y,inChannels:b,outHeight:v,outWidth:x,padInfo:w,strideHeight:k,strideWidth:S,filterHeight:T,filterWidth:I,dilationHeight:N,dilationWidth:C,outShape:E}=i.backend_util.computeDilation2DInfo(r.shape,s.shape,o,c,"NHWC",l),A=i.ZSL.sizeFromShape(E),_=E.length,R=i.ZSL.getArrayFromDType(r.dtype,A);for(let F=0;F<m;++F)for(let e=0;e<v;++e){const t=e*k-w.top;for(let n=0;n<x;++n){const a=n*S-w.left;for(let o=0;o<b;++o){let c=Number.MIN_SAFE_INTEGER;for(let e=0;e<T;++e){const n=t+e*N;if(n>=0&&n<g)for(let t=0;t<I;++t){const l=a+t*C;if(l>=0&&l<y){const a=i.ZSL.locToIndex([F,n,l,o],h,i.ZSL.computeStrides(r.shape)),u=i.ZSL.locToIndex([e,t,o],f,i.ZSL.computeStrides(s.shape)),m=d[a]+p[u];m>c&&(c=m)}}}R[i.ZSL.locToIndex([F,e,n,o],_,i.ZSL.computeStrides(E))]=c}}}return{dataId:u.write(i.ZSL.toTypedArray(R,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},Dh={kernelName:i.pk0,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:c,pad:l,dilations:u}=a,d=n,h=i.ZSL.toNestedArray(r.shape,d.data.get(r.dataId).values),p=i.ZSL.toNestedArray(s.shape,d.data.get(s.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:T,dilationHeight:I,dilationWidth:N,outShape:C}=i.backend_util.computeDilation2DInfo(r.shape,s.shape,c,l,"NHWC",u);i.ZSL.assert(o.rank===C.length,(()=>"Error in ".concat(i.pk0,", dy ")+"must have the same rank as output ".concat(C.length,", but got ")+"".concat(o.rank)));const E=i.ZSL.toNestedArray(C,d.data.get(o.dataId).values),A=i.ZSL.makeZerosNestedTypedArray(s.shape,s.dtype);for(let i=0;i<f;++i)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const a=n*k-x.left;for(let r=0;r<y;++r){let s=Number.MIN_SAFE_INTEGER,o=0,c=0;for(let e=0;e<S;++e){const n=t+e*I;if(n>=0&&n<m)for(let t=0;t<T;++t){const l=a+t*N;if(l>=0&&l<g){const a=h[i][n][l][r]+p[e][t][r];a>s&&(s=a,o=e,c=t)}}}A[o][c][r]+=E[i][e][n][r]}}}return{dataId:d.write(i.ZSL.toTypedArray(A,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Oh={kernelName:i.bP9,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:c,pad:l,dilations:u}=a,d=n,h=i.ZSL.toNestedArray(r.shape,d.data.get(r.dataId).values),p=i.ZSL.toNestedArray(s.shape,d.data.get(s.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:T,dilationHeight:I,dilationWidth:N,outShape:C}=i.backend_util.computeDilation2DInfo(r.shape,s.shape,c,l,"NHWC",u);i.ZSL.assert(o.rank===C.length,(()=>"Error in ".concat(i.bP9,", dy ")+"must have the same rank as output ".concat(C.length,", but got ")+"".concat(o.rank)));const E=i.ZSL.toNestedArray(C,d.data.get(o.dataId).values),A=i.ZSL.makeZerosNestedTypedArray(r.shape,r.dtype);for(let i=0;i<f;++i)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const a=n*k-x.left;for(let r=0;r<y;++r){let s=Number.MIN_SAFE_INTEGER,o=t<0?0:t,c=a<0?0:a;for(let e=0;e<S;++e){const n=t+e*I;if(n>=0&&n<m)for(let t=0;t<T;++t){const l=a+t*N;if(l>=0&&l<g){const a=h[i][n][l][r]+p[e][t][r];a>s&&(s=a,o=n,c=l)}}}A[i][o][c][r]+=E[i][e][n][r]}}}return{dataId:d.write(i.ZSL.toTypedArray(A,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const Lh={kernelName:i.XmO,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:o}=a,{contextOptions:i,imageOptions:c}=o||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const d=s.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==d)throw new Error("Could not get the context with ".concat(u," type."));const[h,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(p*h*4);for(let v=0;v<h*p;++v){const e=[0,0,0,255*l];for(let n=0;n<f;n++){const t=m[v*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===r.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*v;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=p,s.height=h;const b=new ImageData(y,p,h);return d.putImageData(b,0,0),r}},Mh=Du(((e,t)=>e*t)),zh=ed(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),Ph=$u(i.xu7,Mh,zh),Bh={kernelName:i.xu7,backendName:"cpu",kernelFunc:Ph};function Wh(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;let c;wu(r,"sum"),c="bool"===r.dtype?Xu({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Au({inputs:{x:r},backend:n});const l=c.shape.length,u=i.ZSL.parseAxisParam(s,c.shape),d=i.backend_util.getAxesPermutation(u,l);let h=u,p=c;null!=d&&(p=bd({inputs:{x:c},backend:n,attrs:{perm:d}}),h=i.backend_util.getInnerMostAxes(h.length,l)),i.backend_util.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[f,m]=i.backend_util.computeOutAndReduceShapes(p.shape,h);let g=Hu(n,f,i.backend_util.upcastType(p.dtype,"int32"));const y=i.ZSL.sizeFromShape(m),b=n.data.get(g.dataId).values,v=n.data.get(p.dataId).values;for(let i=0;i<b.length;++i){const e=i*y;let t=0;for(let n=0;n<y;++n)t+=v[e+n];b[i]=t}if(o){const e=g;g=sd({inputs:{x:g},backend:n,attrs:{shape:i.backend_util.expandShapeToKeepDim(g.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(c),null!=d&&n.disposeIntermediateTensorInfo(p),g}const Uh={kernelName:i.WuN,backendName:"cpu",kernelFunc:Wh};const Vh={kernelName:i.Qgm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:c,idDims:l}=i.backend_util.decodeEinsumEquation(r,s.length);i.backend_util.checkEinsumDimSizes(o.length,l,s);const{path:u,steps:d}=i.backend_util.getEinsumComputePath(c,l),h=d.length;let p=null,f=o.length;const m=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:a}=i.backend_util.getEinsumPermutation(f,l[e]);let r;i.backend_util.isIdentityPermutation(t)?r=s[e]:(r=bd({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),m.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);i.ZSL.arraysEqual(r.shape,o)||(r=sd({inputs:{x:r},backend:n,attrs:{shape:o}}),m.push(r)),null===p?p=r:(p=Ph({inputs:{a:r,b:p},backend:n}),m.push(p))}g<h-1&&(u[g]>=0&&(p=Wh({inputs:{x:p},backend:n,attrs:{axis:u[g]-(o.length-f),keepDims:!1}}),m.push(p)),f--)}for(const i of m)i!==p&&n.disposeIntermediateTensorInfo(i);return p}};const Gh={kernelName:i.rsH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;wu([a,r],"eluGrad");const s=new Float32Array(i.ZSL.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values;for(let i=0;i<o.length;++i){const e=o[i];s[i]=e>=0?c[i]:c[i]*(e+1)}return n.makeTensorInfo(r.shape,"float32",s)}},jh=Du(((e,t)=>e===t?1:0)),Zh=$u(i.BRl,jh,null,"bool"),Kh={kernelName:i.BRl,backendName:"cpu",kernelFunc:Zh},Hh=i.backend_util.ERF_P,qh=i.backend_util.ERF_A1,Yh=i.backend_util.ERF_A2,Qh=i.backend_util.ERF_A3,Xh=i.backend_util.ERF_A4,Jh=i.backend_util.ERF_A5,$h=Iu(i._s9,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+Hh*n);return t*(1-((((Jh*a+Xh)*a+Qh)*a+Yh)*a+qh)*a*Math.exp(-n*n))})),ep={kernelName:i._s9,backendName:"cpu",kernelFunc:$h},tp=Tu((e=>Math.exp(e))),np=Nu(i.ox3,tp,"float32"),ap={kernelName:i.ox3,backendName:"cpu",kernelFunc:np};function rp(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,o=r.shape.length,c=r.shape.slice();let l=s;return s<0&&(i.ZSL.assert(-(o+1)<=s,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),l=o+s+1),c.splice(l,0,1),sd({inputs:{x:r},backend:n,attrs:{shape:c}})}const sp={kernelName:i.ybN,backendName:"cpu",kernelFunc:rp},op=Tu((e=>Math.expm1(e))),ip=Nu(i.ybj,op),cp={kernelName:i.ybj,backendName:"cpu",kernelFunc:ip},lp=Du(((e,t)=>e/t)),up=$u(i.sDr,lp),dp={kernelName:i.sDr,backendName:"cpu",kernelFunc:up},hp=Du(((e,t)=>e-t)),pp=ed(((e,t,n,a)=>({real:e-n,imag:t-a}))),fp=$u(i.PbM,hp,pp),mp={kernelName:i.PbM,backendName:"cpu",kernelFunc:fp};function gp(e,t,n){const a=e.shape,r=a[0],s=a[1],o=n.data.get(e.dataId),c=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,u=[r,s],d=i.ZSL.sizeFromShape(u),h=i.ZSL.getTypedArrayFromDType("float32",d),p=i.ZSL.getTypedArrayFromDType("float32",d);for(let y=0;y<r;y++){const e=jd({inputs:{x:c},backend:n,attrs:{begin:[y,0],size:[1,s]}}),a=jd({inputs:{x:l},backend:n,attrs:{begin:[y,0],size:[1,s]}}),r=Zu({inputs:{real:e,imag:a},backend:n}),{real:o,imag:u}=yp(r,t,n),d=i.backend_util.mergeRealAndImagArrays(o,u);for(let t=0;t<s;t++){const e=i.backend_util.getComplexWithIndex(d,t);h[y*s+t]=e.real,p[y*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const f=n.makeTensorInfo(u,"float32",h),m=n.makeTensorInfo(u,"float32",p),g=Zu({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function yp(e,t,n){const a=i.ZSL.sizeFromShape(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((c=a)&c-1)){const r=bp(s,o,a,t,n),c=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(c,"float32",r.real),t=n.makeTensorInfo(c,"float32",r.imag),s=n.makeTensorInfo([],"float32",i.ZSL.createScalarValue(a,"float32")),o=Au({inputs:{x:s},backend:n}),l=dp.kernelFunc({inputs:{a:e,b:s},backend:n}),u=dp.kernelFunc({inputs:{a:t,b:o},backend:n}),d=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:d,imag:h}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,o=0;for(let a=0;a<t;a++){const c=i.backend_util.exponent(r*a,t,n),l=i.backend_util.getComplexWithIndex(e,a);s+=l.real*c.real-l.imag*c.imag,o+=l.real*c.imag+l.imag*c.real}n&&(s/=t,o/=t),i.backend_util.assignToTypedArray(a,s,o,r)}return a}(i.backend_util.mergeRealAndImagArrays(s,o),a,t);return i.backend_util.splitRealAndImagArrays(e)}var c}function bp(e,t,n,a,r){if(1===n)return{real:e,imag:t};const s=i.backend_util.mergeRealAndImagArrays(e,t),o=n/2,c=i.backend_util.complexWithEvenIndex(s),l=c.real,u=c.imag,d=[l.length],h=r.makeTensorInfo(d,"float32",l),p=r.makeTensorInfo(d,"float32",u),f=Zu({inputs:{real:h,imag:p},backend:r}),m=i.backend_util.complexWithOddIndex(s),g=m.real,y=m.imag,b=[g.length],v=r.makeTensorInfo(b,"float32",g),x=r.makeTensorInfo(b,"float32",y),w=Zu({inputs:{real:v,imag:x},backend:r}),k=bp(l,u,o,a,r),S=k.real,T=k.imag,I=[S.length],N=r.makeTensorInfo(I,"float32",S),C=r.makeTensorInfo(I,"float32",T),E=Zu({inputs:{real:N,imag:C},backend:r}),A=bp(g,y,o,a,r),_=A.real,R=A.imag,F=[_.length],D=r.makeTensorInfo(F,"float32",_),O=r.makeTensorInfo(F,"float32",R),L=Zu({inputs:{real:D,imag:O},backend:r}),M=i.backend_util.exponents(n,a),z=[M.real.length],P=r.makeTensorInfo(z,"float32",M.real),B=r.makeTensorInfo(z,"float32",M.imag),W=Zu({inputs:{real:P,imag:B},backend:r}),U=Ph({inputs:{a:W,b:L},backend:r}),V=ad({inputs:{a:E,b:U},backend:r}),G=fp({inputs:{a:E,b:U},backend:r}),j=qu({inputs:{input:V},backend:r}),Z=qu({inputs:{input:G},backend:r}),K=ih({inputs:{input:V},backend:r}),H=ih({inputs:{input:G},backend:r}),q=lh({inputs:[j,Z],backend:r,attrs:{axis:0}}),Y=lh({inputs:[K,H],backend:r,attrs:{axis:0}}),Q=r.data.get(q.dataId).values,X=r.data.get(Y.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(Y),{real:Q,imag:X}}const vp={kernelName:i.rGP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=i.ZSL.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],o=sd({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),c=gp(o,!1,n),l=sd({inputs:{x:c},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}};function xp(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,o=s||i.ZSL.inferDtype(r),c=i.ZSL.getArrayFromDType(o,i.ZSL.sizeFromShape(a));return function(e,t,n){e.fill(t)}(c,r),t.makeTensorInfo(a,o,c)}const wp={kernelName:i.SQl,backendName:"cpu",kernelFunc:xp};const kp={kernelName:i.BxF,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,s=a,o=i.ZSL.getTypedArrayFromDType(r.dtype,i.ZSL.sizeFromShape(r.shape)),[c,l,u,d]=r.shape,h=s.data.get(r.dataId).values;for(let i=0;i<c;i++){const e=i*u*l*d;for(let t=0;t<l;t++){const n=t*(u*d);for(let t=0;t<u;t++){const a=t*d;for(let r=0;r<d;r++){const s=Math.round(u-t-1),i=e+n+a+r;let c=h[i];if(s>=0&&s<u){c=h[e+n+s*d+r]}o[i]=c}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Sp=Tu((e=>Math.floor(e))),Tp=Nu(i.ZgB,Sp),Ip={kernelName:i.ZgB,backendName:"cpu",kernelFunc:Tp},Np=Du(((e,t)=>Math.floor(e/t))),Cp=$u(i.ElG,Np,null,"int32"),Ep={kernelName:i.ElG,backendName:"cpu",kernelFunc:Cp};const Ap={kernelName:i.aAr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a;let m=dh({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}});if(o){const e=m;if("NCHW"===u&&1===o.shape.length&&1!==o.shape[0]){const e=sd({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=ad({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=ad({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===u&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=sd({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=ju(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=ju(n,m,p,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const _p={kernelName:i.T7M,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a;let m=Ch({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}});if(o){const e=m;m=ad({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=ju(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function Rp(e,t,n,a,r,s,o,c,l){const u=(0,i.ra8)([a,s],n);for(let i=0;i<a;i++){const n=[];let a=0;for(let t=0;t<r;t++){const s=e[i*r+t];a+=s*o[t],n.push(s)}if(a<0||a>=l/s)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(c));for(let e=0;e<s;e++)u.values[i*s+e]=t.get(...t.indexToLoc(a*s+e))}return u}const Fp={kernelName:i.O4G,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=i.ZSL.sizeFromShape(a.shape),o=r.shape,c=o[o.length-1],[l,u,d,h]=i.backend_util.prepareAndValidate(a,r);if(0===u)return n.makeTensorInfo(l,a.dtype,[]);const p=Rp(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,u,c,d,h,a.shape,s);return n.makeTensorInfo(l,a.dtype,p.values)}};function Dp(e,t,n){const a=(0,i.ra8)(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(a.values[r]=e.values[c])}return a}const Op={kernelName:i.mxL,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:c}=a;wu([r,s],"gatherV2");const l=i.ZSL.parseAxisParam(o,r.shape)[0],u=n.data.get(s.dataId).values,d=r.shape[l];for(let x=0;x<u.length;++x){const e=u[x];i.ZSL.assert(e<=d-1&&e>=0,(()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(d-1,"]")))}let h=c;null==c&&(h=0);const p=i.ZSL.sizeFromShape(s.shape),f=i.backend_util.segment_util.collectGatherOpShapeInfo(r,s,l,h),m=sd({inputs:{x:r},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=sd({inputs:{x:s},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),y=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],b=n.bufferSync(g),v=Dp(n.bufferSync(m),b,y);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(f.outputShape,v.dtype,v.values)}},Lp=Du(((e,t)=>e>t?1:0)),Mp=$u(i.XhZ,Lp,null,"bool"),zp={kernelName:i.XhZ,backendName:"cpu",kernelFunc:Mp},Pp=Du(((e,t)=>e>=t?1:0)),Bp=$u(i.lLS,Pp,null,"bool"),Wp={kernelName:i.lLS,backendName:"cpu",kernelFunc:Bp};const Up={kernelName:i.OAQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=i.ZSL.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],o=sd({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),c=gp(o,!0,n),l=sd({inputs:{x:c},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}},Vp=Iu(i.gIW,(e=>Number.isFinite(e)?1:0),"bool"),Gp={kernelName:i.gIW,backendName:"cpu",kernelFunc:Vp},jp=Iu(i.E3$,(e=>Math.abs(e)===1/0?1:0),"bool"),Zp={kernelName:i.E3$,backendName:"cpu",kernelFunc:jp},Kp=Iu(i.iPs,(e=>Number.isNaN(e)?1:0),"bool"),Hp={kernelName:i.iPs,backendName:"cpu",kernelFunc:Kp},qp=Du(((e,t)=>e<t?1:0)),Yp=$u(i.mIA,qp,null,"bool"),Qp={kernelName:i.mIA,backendName:"cpu",kernelFunc:Yp},Xp=Du(((e,t)=>e<=t?1:0)),Jp=$u(i.CwD,Xp,null,"bool"),$p={kernelName:i.CwD,backendName:"cpu",kernelFunc:Jp};function ef(e,t,n){const a=(t-e)/(n-1),r=i.ZSL.makeZerosTypedArray(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}const tf={kernelName:i.mnI,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=ef(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},nf=Tu((e=>Math.log(e))),af=Nu(i.tG8,nf),rf={kernelName:i.tG8,backendName:"cpu",kernelFunc:af},sf=Iu(i.Cg$,(e=>Math.log1p(e))),of={kernelName:i.Cg$,backendName:"cpu",kernelFunc:sf},cf=Du(((e,t)=>e&&t)),lf=$u(i.RUm,cf,null,"bool"),uf={kernelName:i.RUm,backendName:"cpu",kernelFunc:lf},df=Iu(i.nZd,(e=>e?0:1),"bool"),hf={kernelName:i.nZd,backendName:"cpu",kernelFunc:df},pf=Du(((e,t)=>e||t)),ff=$u(i.LXA,pf,null,"bool"),mf={kernelName:i.LXA,backendName:"cpu",kernelFunc:ff};const gf={kernelName:i.jM4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:c,beta:l}=a;wu(r,"LRN");const u=r.shape[3],d=u-1,h=n.data.get(r.dataId).values,p=i.ZSL.sizeFromShape(r.shape),f=new Float32Array(p);function m(e){const t=e%u;let n=e-t+Math.max(0,t-s);const a=e-t+Math.min(t+s,d);let r=0;for(;n<=a;n++){const e=h[n];r+=e*e}return r}for(let i=0;i<p;i++){const e=m(i),t=h[i]*Math.pow(o+c*e,-l);f[i]=t}return n.makeTensorInfo(r.shape,r.dtype,f)}};const yf={kernelName:i.ToN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:c,bias:l,alpha:u,beta:d}=a;wu(o,"LRNGrad");const h=i.ZSL.sizeFromShape(o.shape),p=o.shape[3],f=n.data.get(o.dataId).values,m=n.data.get(r.dataId).values,g=n.data.get(s.dataId).values,y=new Float32Array(h),b=h;for(let i=0;i<b;i++){const e=i%p,t=i-e+Math.max(0,e-c),n=i-e+Math.min(p,e+c+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(m[r],2);a=u*a+l;for(let r=t;r<n;r++){let e=-2*u*d*m[r]*g[i]/a;i===r&&(e+=Math.pow(a,-d)),e*=f[i],y[r]+=e}}return n.makeTensorInfo(o.shape,r.dtype,y)}};function bf(e,t,n,a){const r=i.ZSL.getTypedArrayFromDType(a,i.ZSL.sizeFromShape(n));for(let s=0;s<r.length;++s){const n=s*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[s]=a}return r}function vf(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,c=n;let l=r.shape;const u=l.length,d=i.ZSL.parseAxisParam(s,l);let h=d;const p=i.backend_util.getAxesPermutation(h,u);let f=c.data.get(r.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];f=yd(f,l,r.dtype,p,e),h=i.backend_util.getInnerMostAxes(h.length,u),l=e}wu(r,"max"),i.backend_util.assertAxesAreInnerMostDims("max",h,u);const[m,g]=i.backend_util.computeOutAndReduceShapes(l,h),y=bf(f,i.ZSL.sizeFromShape(g),m,r.dtype),b=c.write(y,m,r.dtype);let v=m;if(o){v=i.backend_util.expandShapeToKeepDim(m,d)}return{dataId:b,shape:v,dtype:r.dtype}}const xf={kernelName:i.VAI,backendName:"cpu",kernelFunc:vf},wf=Du(((e,t)=>Math.max(e,t))),kf=$u(i.LDN,wf),Sf={kernelName:i.LDN,backendName:"cpu",kernelFunc:kf};const Tf={kernelName:i.t3d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;wu(r,"maxPool");const{filterSize:s,strides:o,pad:c,dimRoundingMode:l}=a;i.ZSL.assert(i.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const u=i.backend_util.computePool2DInfo(r.shape,s,o,1,c,l);let d;if(1===u.filterWidth&&1===u.filterHeight&&i.ZSL.arraysEqual(u.inShape,u.outShape))d=Au({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=i.ZSL.computeStrides(r.shape),a=Ld(e,r.shape,r.dtype,t,u,"max");d=n.makeTensorInfo(u.outShape,r.dtype,a.values)}return d}};const If={kernelName:i.ySp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:c,dimRoundingMode:l,dataFormat:u}=a;wu(r,"maxPool3d");const d=i.backend_util.computePool3DInfo(r.shape,s,o,1,c,l,u),h=zd(n.data.get(r.dataId).values,r.shape,r.dtype,i.ZSL.computeStrides(r.shape),d,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Nf={kernelName:i.cHb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:c,pad:l,dimRoundingMode:u}=a;wu([r,s],"maxPool3DGrad");const d=i.backend_util.computePool3DInfo(s.shape,o,c,1,l,u),h=function(e,t){const n=(0,i.ra8)(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,o=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let i=0;i<t.batchSize;++i)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-p;let v=b;for(;v<0;)v+=o;const x=Math.min(t.inDepth,u+b);for(let a=0;a<t.outHeight;++a){const u=a*r-f;let p=u;for(;p<0;)p+=c;const w=Math.min(t.inHeight,d+u);for(let r=0;r<t.outWidth;++r){const f=r*s-m;let k=f;for(;k<0;)k+=l;const S=Math.min(t.inWidth,h+f);let T=Number.NEGATIVE_INFINITY,I=-1;for(let t=v;t<x;t+=o){const n=t-b;for(let a=p;a<w;a+=c){const r=a-u;for(let s=k;s<S;s+=l){const o=s-f,c=e.get(i,t,a,s,g);c>=T&&(T=c,I=n*d*h+r*d+o)}}}n.set(I,i,y,a,r,g)}}}return n}(n.bufferSync(s),d),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.dilationDepth,y=d.dilationHeight,b=d.dilationWidth,v=d.effectiveFilterDepth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=v-1-d.padInfo.front,S=w-1-d.padInfo.left,T=x-1-d.padInfo.top,I=(0,i.ra8)(s.shape,"float32"),N=n.bufferSync(r);for(let i=0;i<d.batchSize;++i)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){const r=t-k,s=n-T,o=a-S;let c=0;for(let t=0;t<v;t+=g){const n=(r+t)/p;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let a=0;a<x;a+=y){const r=(s+a)/f;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=b){const l=(o+s)/m;if(l<0||l>=d.outWidth||Math.floor(l)!==l)continue;const u=v*x*w-1-h.get(i,n,r,l,e)===t*x*w+a*w+s?1:0;if(0===u)continue;c+=N.get(i,n,r,l,e)*u}}}I.set(c,i,t,n,a,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Cf={kernelName:i.RXX,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,c=s;wu([s,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=a,p=i.backend_util.computePool2DInfo(c.shape,l,u,1,d,h),f=n.data.get(c.dataId).values,m=(0,i.ra8)(p.outShape,c.dtype,Md(f,c.shape,c.dtype,p).values),g=p.strideHeight,y=p.strideWidth,b=p.dilationHeight,v=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=w-1-p.padInfo.left,S=x-1-p.padInfo.top,T=(0,i.ra8)(c.shape,"float32"),I=n.data.get(r.dataId).values,N=(0,i.ra8)(r.shape,"float32",I);for(let i=0;i<p.batchSize;++i)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const a=t-S,r=n-k;let s=0;for(let t=0;t<x;t+=b){const n=(a+t)/g;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let a=0;a<w;a+=v){const o=(r+a)/y;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const c=x*w-1-m.get(i,n,o,e)===t*w+a?1:0;if(0===c)continue;s+=N.get(i,n,o,e)*c}}T.set(s,i,t,n,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const Ef={kernelName:i.TL8,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:c,includeBatchInIndex:l}=n,u=a;wu(r,"MaxPoolWithArgmax");const d=u.data.get(r.dataId).values,h=i.backend_util.computePool2DInfo(r.shape,s,o,[1,1],c),[p,f]=function(e,t,n,a,r){const s=Ld(e,0,n,i.ZSL.computeStrides(t),r,"max"),o=Md(e,t,n,r,!0,a);return[s.values,o.values]}(d,r.shape,r.dtype,l,h),m=u.write(p,h.outShape,r.dtype),g=u.write(f,h.outShape,r.dtype);return[{dataId:m,shape:h.outShape,dtype:r.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}};const Af={kernelName:i.g5A,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,c=i.ZSL.parseAxisParam(s,r.shape),l=i.backend_util.computeOutAndReduceShapes(r.shape,c)[1],u=i.ZSL.sizeFromShape(l),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(h);const p=Xu({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=up({inputs:{a:p,b:h},backend:n});d.push(f);const m=Wh({inputs:{x:f},backend:n,attrs:{axis:s,keepDims:o}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};const _f={kernelName:i.lNG,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;wu(r,"min");const c=i.ZSL.parseAxisParam(s,r.shape);let l=c;const u=i.backend_util.getAxesPermutation(l,r.shape.length);let d=r;null!=u&&(d=bd({inputs:{x:r},backend:n,attrs:{perm:u}}),l=i.backend_util.getInnerMostAxes(l.length,r.shape.length)),i.backend_util.assertAxesAreInnerMostDims("min",l,d.shape.length);const[h,p]=i.backend_util.computeOutAndReduceShapes(d.shape,l),f=i.ZSL.sizeFromShape(p),m=i.ZSL.makeZerosTypedArray(i.ZSL.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let i=0;i<m.length;++i){const e=i*f;let t=g[e];for(let n=0;n<f;++n){const a=g[e+n];(Number.isNaN(a)||a<t)&&(t=a)}m[i]=t}null!=u&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(o){const e=sd({inputs:{x:y},backend:n,attrs:{shape:i.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(y),e}return y}},Rf=Du(((e,t)=>Math.min(e,t))),Ff=$u(i.LG0,Rf),Df={kernelName:i.LG0,backendName:"cpu",kernelFunc:Ff};const Of={kernelName:i.x7F,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:o}=a;wu(r,"mirrorPad");const c=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+r.shape[t])),d="reflect"===o?0:1,h=n.data.get(r.dataId).values,p=r.shape.length,f=i.ZSL.computeStrides(r.shape),m=i.ZSL.sizeFromShape(c),g=c.length,y=i.ZSL.computeStrides(c),b=i.ZSL.getTypedArrayFromDType(r.dtype,m);for(let v=0;v<m;v++){let e=i.ZSL.indexToLoc(v,g,y);for(let n=0;n<g;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-d:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+d);e=e.map(((e,t)=>e-l[t]));const t=i.ZSL.locToIndex(e,p,f);b[v]=h[t]}return{dataId:n.write(b,c,r.dtype),shape:c,dtype:r.dtype}}},Lf=Du(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Mf=$u(i.BLA,Lf),zf={kernelName:i.BLA,backendName:"cpu",kernelFunc:Mf};function Pf(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=r.shape.length;let c=s;if(-1===c&&(c=o-1),c!==o-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(o," and dim was ").concat(c));const l=i.ZSL.parseAxisParam([c],r.shape),u=vf({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=i.backend_util.expandShapeToKeepDim(u.shape,l),h=sd({inputs:{x:u},backend:n,attrs:{shape:d}}),p=fp({inputs:{a:r,b:h},backend:n}),f=np({inputs:{x:p},backend:n}),m=Wh({inputs:{x:f},backend:n,attrs:{axis:l,keepDims:!1}}),g=sd({inputs:{x:m},backend:n,attrs:{shape:d}}),y=up({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const Bf={kernelName:i.rFG,backendName:"cpu",kernelFunc:Pf};const Wf={kernelName:i.WT3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:c}=a;wu(r,"multinomial");const l=c?r:Pf({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],h=n.data.get(l.dataId).values,p=[u,s],f=i.ZSL.makeZerosTypedArray(i.ZSL.sizeFromShape(p),"int32");for(let i=0;i<u;++i){const e=i*d,t=new Float32Array(d-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=jl.alea(o.toString()),a=i*s;for(let r=0;r<s;++r){const e=n();f[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){f[a+r]=n;break}}}return c||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",f)}};function Uf(e,t,n){const a=i.ZSL.createScalarValue(-1,n);return Mh([],t,a,e,n)}const Vf={kernelName:i.l0G,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;wu(a,"neg");const r=n.data.get(a.dataId).values,[s,o]=Uf(r,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,s)}},Gf=i.kpo.c7;const jf={kernelName:i.SDM,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a;wu(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:d}=Gf(l,u,o,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Zf=i.kpo.ZS;const Kf={kernelName:i.Zl4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;wu(r,"NonMaxSuppressionPadded");const u=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=Zf(u,d,o,i,c,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Hf=i.kpo.ut;const qf={kernelName:i.e0f,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;wu(r,"NonMaxSuppressionWithScore");const u=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,h=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=Hf(u,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},Yf=Du(((e,t)=>e!==t?1:0)),Qf=$u(i.ylV,Yf,null,"bool"),Xf={kernelName:i.ylV,backendName:"cpu",kernelFunc:Qf};const Jf={kernelName:i.urI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:c,offValue:l}=a;wu(r,"oneHot");const u=i.ZSL.sizeFromShape(r.shape),d=new Float32Array(u*o);d.fill(l);const h=n.data.get(r.dataId).values;for(let i=0;i<u;++i)h[i]>=0&&h[i]<o&&(d[i*o+h[i]]=c);return n.makeTensorInfo([...r.shape,o],s,d)}};function $f(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=qu({inputs:{input:a},backend:n}),t=$f({inputs:{x:e},backend:n}),r=ih({inputs:{input:a},backend:n}),s=$f({inputs:{x:r},backend:n}),o=Zu({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return xp({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const em={kernelName:i.xJ3,backendName:"cpu",kernelFunc:$f};const tm={kernelName:i.LWX,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=qu({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=ih({inputs:{input:r},backend:a}),o=$f({inputs:{x:s},backend:a}),i=Zu({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return xp({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function nm(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return rp({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{i.ZSL.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),i.ZSL.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=lh({inputs:t.map((e=>{const t=rp({inputs:{input:e},backend:n,attrs:{dim:r}});return c.push(t),t})),backend:n,attrs:{axis:r}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const am={kernelName:i.mM$,backendName:"cpu",kernelFunc:nm};const rm={kernelName:i.ODT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;wu(r,"pad");const c=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(r.dataId).values,d=i.ZSL.sizeFromShape(r.shape),h=r.shape.length,p=i.ZSL.computeStrides(r.shape),f=i.ZSL.sizeFromShape(c),m=c.length,g=i.ZSL.computeStrides(c),y=i.ZSL.getTypedArrayFromDType(r.dtype,f);0!==o&&y.fill(o);for(let b=0;b<d;b++){const e=i.ZSL.indexToLoc(b,h,p).map(((e,t)=>e+l[t]));y[i.ZSL.locToIndex(e,m,g)]=u[b]}return{dataId:n.write(y,c,r.dtype),shape:c,dtype:r.dtype}}},sm=Du(((e,t)=>Math.pow(e,t))),om=$u(i.pyJ,sm),im={kernelName:i.pyJ,backendName:"cpu",kernelFunc:om};function cm(e,t,n,a){const[r,s]=i.backend_util.computeOutAndReduceShapes(e,a),o=(0,i.TuY)(t,"int32"),c=i.ZSL.makeZerosTypedArray(i.ZSL.sizeFromShape(r),o),l=i.ZSL.sizeFromShape(s);for(let i=0;i<c.length;++i){const e=i*l;let t=1;for(let a=0;a<l;++a)t*=n[e+a];c[i]=t}return{outVals:c,outShape:r,outDtype:o}}const lm={kernelName:i.kdj,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;wu(r,"prod");const c=r.shape.length,l=i.ZSL.parseAxisParam(s,r.shape),u=i.backend_util.getAxesPermutation(l,c);let d=l,h=r;const p=[];null!=u&&(h=bd({inputs:{x:r},backend:n,attrs:{perm:u}}),p.push(h),d=i.backend_util.getInnerMostAxes(d.length,c));const f=n.data.get(h.dataId).values,{outVals:m,outShape:g,outDtype:y}=cm(h.shape,h.dtype,f,d);let b=g;return o&&(b=i.backend_util.expandShapeToKeepDim(g,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,y,m)}};function um(e,t,n,a){const r=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<t.length-1;++l){c*=t[l];const e=t[l+1];for(let t=1;t<c+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let a=e[l],o=e[l]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-r[a];for(let n=a;n<o;++n)i[s].push(r[n+1]+t)}a=r[a],o=r[o]}o!==a&&(r.push([a,o]),s+=o-a)}return{outSplits:i,valueSlices:r,numValues:s}}function dm(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function hm(e,t,n,a,r){const s=t.slice();s[0]=r;const o=i.ZSL.getArrayFromDType(n,i.ZSL.sizeFromShape(s)),c=e.length;return function(e,t,n,a,r,s){const o=dm(t,2)[1],i=dm(s,2)[1];let c=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<a;++n)r[c*i+n]=e[t*o+n];++c}}(e,t,a,0===c?0:c/t[0],o,s),[o,s]}function pm(e,t,n,a,r,s,o,c){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const r=i.ZSL.indexToLoc(a,t.length,i.ZSL.computeStrides(t)).join(",");throw new Error("indices[".concat(r,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(s,o,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const l=a[0],{outSplits:u,valueSlices:d,numValues:h}=um(s,o,e,l),p=function(e){const t=[];for(let n=0;n<e.length;++n){const a=e[n].length,r=i.ZSL.getArrayFromDType("int32",a);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),f=hm(n,a,r,d,h);return[p,f[0],f[1]]}const fm={kernelName:i.oJ2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.data.get(e.dataId).values)),l=r.map((e=>e.shape)),u=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,[h,p,f]=pm(c,l,u,s.shape,s.dtype,d,o.shape),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},mm=2147483647;function gm(e,t,n,a,r,s,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const c=0===t.length,l=0===r.length,u=0===o.length,d=[];c||d.push(t[0]),l||d.push(r[0]),u||d.push(o[0]);for(let i=1;i<d.length;++i)if(d[i]!==d[i-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===d.length?1:d[0],p=i.ZSL.getArrayFromDType("int32",h+1);p[0]=0;for(let i=0;i<h;++i){const t=c?e[0]:e[i],n=l?a[0]:a[i],r=u?s[0]:s[i];if(0===r)throw new Error("Requires delta != 0");let o;if(r>0&&n<t||r<0&&n>t)o=0;else if(o=Math.ceil(Math.abs((n-t)/r)),o>mm)throw new Error("Requires ((limit - start) / delta) <= ".concat(mm));p[i+1]=p[i]+o}const f=p[h],m=i.ZSL.getArrayFromDType(n,f);let g=0;for(let i=0;i<h;++i){const t=p[i+1]-p[i];let n=c?e[0]:e[i];const a=u?s[0]:s[i];for(let e=0;e<t;++e)m[g++]=n,n+=a}return[p,m]}const ym={kernelName:i.CQC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=gm(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};var bm=i.backend_util.RowPartitionType;class vm{constructor(e,t,n,a,r,s,o,c,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=o,this.rowPartitionValues=c,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=i.backend_util.getRowPartitionTypesHelper(u),this.raggedRank=i.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===bm.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===bm.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case bm.VALUE_ROWIDS:return vm.getMaxWidthValueRowID(t);case bm.ROW_SPLITS:return vm.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(bm[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){const t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return wm(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;i.backend_util.validateDefaultValueShape(n,t);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=i.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,a,t);r[0]<0&&(r[0]=e);for(let s=1;s<=this.raggedRank;++s)r[s]<0&&(r[s]=this.getMaxWidth(s));return r}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),r=[];let s=0;for(let o=0;o<a;++o,s+=t)r.push(s);for(let o=a;o<e;++o)r.push(-1);return i.ZSL.assert(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,s=[];for(let o=0;o<r-1;++o){const r=e[o+1]-e[o];let i=Math.min(a,r),c=t[o];-1===c&&(i=0);for(let e=0;e<i;++e)s.push(c),c+=n;for(let e=0;e<r-i;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,s=[];if(0===r)return[];let o=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];s.push(c);for(let l=1;l<r;++l){const r=e[l];if(r===i)c>=0&&(++o,o<a?c+=n:c=-1);else{if(o=0,i=r,r>=t.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(t.length));c=t[r]}s.push(c)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case bm.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case bm.ROW_SPLITS:if(r.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error("Unsupported partition type: ".concat(bm[s]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case bm.FIRST_DIM_SIZE:return e[0];case bm.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case bm.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(bm[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];const a=wm(t,!1),r=i.ZSL.getArrayFromDType(this.valuesDType,i.ZSL.sizeFromShape(a));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){s=this.calculateOutputIndex(e-1,s,n[e],t[e])}this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;const r=this.values,s=n;let o=a.slice();o=o.slice(e+1);const c=i.ZSL.sizeFromShape(o),l=t.length;let u=this.defaultValue;if(u.length!==c&&1!==u.length){const e=this.defaultValueShape;(0,i.DZQ)((()=>{const t=(0,i.tQQ)(u,e),n=(0,i.hOW)(t,o);u=n.dataSync()}))}let d=0,h=0,p=0;for(let i=0;i<=l;++i){let e=i<l?t[i]:-1;if(e!==p){if(h<p){const e=r.subarray(d*c);xm(s.subarray(h*c),e,(p-h)*c)}if(i>=l){const t=n.length;e=Math.floor(t/c)}if(e>p)if(1===this.defaultValue.length)s.subarray(p*c,e*c).fill(this.defaultValue[0]),p=e;else for(;e>p;){xm(s.slice(p*c),u,c),++p}e<0?(d=i+1,h=p):(d=i,h=p,p=h+1)}else++p}}}function xm(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function wm(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function km(e,t,n,a,r,s,o,i,c,l){return new vm(e,t,n,a,r,s,o,i,c,l).compute()}const Sm={kernelName:i.mH5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,h=i.map((e=>n.data.get(e.dataId).values)),p=i.map((e=>e.shape)),[f,m]=km(l,r.shape,u,s.shape,s.dtype,d,o.shape,h,p,c);return n.makeTensorInfo(f,s.dtype,m)}};function Tm(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return i.ZSL.makeZerosTypedArray(0,a);const r=Math.abs(Math.ceil((t-e)/n)),s=i.ZSL.makeZerosTypedArray(r,a);t<e&&1===n&&(n=-1),s[0]=e;for(let o=1;o<s.length;o++)s[o]=s[o-1]+n;return s}const Im={kernelName:i.Q6t,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:o}=n,i=Tm(a,r,o,s);return t.makeTensorInfo([i.length],s,i)}},Nm=Iu(i.huO,(e=>1/e)),Cm={kernelName:i.huO,backendName:"cpu",kernelFunc:Nm};const Em={kernelName:i.hgw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:c}=a;wu(r,"resizeBilinear");const l=i.ZSL.computeStrides(r.shape),[u,d]=c,[h,p,f,m]=r.shape,g=n.data.get(r.dataId).values,y=new Float32Array(i.ZSL.sizeFromShape([h,u,d,m])),b=[s&&u>1?p-1:p,s&&d>1?f-1:f],v=[s&&u>1?u-1:u,s&&d>1?d-1:d];let x=0;const w=b[0]/v[0],k=b[1]/v[1];for(let i=0;i<h;i++)for(let e=0;e<u;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(p-1,Math.ceil(t)),s=i*l[0]+n*l[1],c=i*l[0]+r*l[1];for(let e=0;e<d;e++){let t;t=o?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,i=Math.min(f-1,Math.ceil(t)),u=s+n*l[2],d=c+n*l[2],h=s+i*l[2],p=c+i*l[2];for(let e=0;e<m;e++){const t=g[u+e],n=g[d+e],s=t+(g[h+e]-t)*r,o=s+(n+(g[p+e]-n)*r-s)*a;y[x++]=o}}}return n.makeTensorInfo([h,u,d,m],"float32",y)}};const Am={kernelName:i.FCQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;wu([s,r],"resizeBilinearGrad");const c=i.ZSL.computeStrides(r.shape),[l,u,d,h]=r.shape,[,p,f]=s.shape,m=new Float32Array(l*u*d*h),g=[o&&p>1?u-1:u,o&&f>1?d-1:d],y=[o&&p>1?p-1:p,o&&f>1?f-1:f],b=g[0]/y[0],v=g[1]/y[1],x=n.data.get(s.dataId).values;let w=0;for(let i=0;i<l;i++){const e=i*c[0];for(let t=0;t<p;t++){const n=t*b,a=Math.floor(n),r=Math.min(Math.ceil(n),u-1),s=e+a*c[1],o=e+r*c[1],i=n-a,l=1-i;for(let e=0;e<f;e++){const t=e*v,n=Math.floor(t),a=Math.min(Math.ceil(t),d-1),r=t-n,u=1-r,p=s+n*c[2],f=s+a*c[2],g=o+n*c[2],y=o+a*c[2],b=l*u,k=l*r,S=i*u,T=i*r;for(let e=0;e<h;e++){const t=x[w++];m[p+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*S,m[y+e]+=t*T}}}}return n.makeTensorInfo([l,d,u,h],"float32",m)}};const _m={kernelName:i.jOE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:c}=a;wu(r,"resizeNearestNeighbor");const l=i.ZSL.computeStrides(r.shape),[u,d]=c,[h,p,f,m]=r.shape,g=n.data.get(r.dataId).values,y=new Float32Array(h*u*d*m),b=[s&&u>1?p-1:p,s&&d>1?f-1:f],v=[s&&u>1?u-1:u,s&&d>1?d-1:d],x=b[0]/v[0],w=b[1]/v[1];let k=0;for(let i=0;i<h;i++){const e=i*l[0];for(let t=0;t<u;t++){const n=o?x*(t+.5):x*t;let a=Math.min(p-1,s?Math.round(n):Math.floor(n));o&&(a=Math.max(0,a));const r=e+a*l[1];for(let e=0;e<d;e++){const t=o?w*(e+.5):w*e;let n=Math.min(f-1,s?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const a=r+n*l[2];for(let e=0;e<m;e++){const t=g[a+e];y[k++]=t}}}}return n.makeTensorInfo([h,u,d,m],r.dtype,y)}};const Rm={kernelName:i.XQy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;wu([s,r],"resizeNearestNeighborGrad");const c=i.ZSL.computeStrides(r.shape),l=i.ZSL.computeStrides(s.shape),[u,d,h,p]=r.shape,[,f,m]=s.shape,g=new Float32Array(u*d*h*p),y=n.data.get(s.dataId).values,b=[o&&f>1?d-1:d,o&&m>1?h-1:h],v=[o&&f>1?f-1:f,o&&m>1?m-1:m],x=b[0]/v[0],w=b[1]/v[1],k=1/x,S=1/w,T=2*Math.ceil(k)+2,I=2*Math.ceil(S)+2;for(let i=0;i<u;i++){const e=i*c[0];for(let t=0;t<d;t++){const n=e+t*c[1],a=Math.floor(t*k),r=Math.floor(a-T/2);for(let s=0;s<h;s++){const a=n+s*c[2],i=Math.floor(s*S),u=Math.floor(i-I/2);for(let n=0;n<p;n++){let i=0;for(let a=0;a<T;a++){const c=a+r;if(c<0||c>=f)continue;const p=e+c*l[1],g=c*x;if(t===Math.min(d-1,o?Math.round(g):Math.floor(g)))for(let e=0;e<I;e++){const t=e+u;if(t<0||t>=m)continue;const a=p+t*l[2],r=t*w;s===Math.min(h-1,o?Math.round(r):Math.floor(r))&&(i+=y[a+n])}}g[a+n]=i}}}}return n.makeTensorInfo(r.shape,r.dtype,g)}};const Fm={kernelName:i.D7i,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;wu(r,"reverse");const o=r.shape.length,c=i.ZSL.parseAxisParam(s,r.shape);if(0===o)return Au({inputs:{x:r},backend:n});const l=new i.ylz(r.shape,r.dtype),u=n.bufferSync(r);for(let i=0;i<l.size;i++){const e=l.indexToLoc(i),t=e.slice();c.forEach((e=>t[e]=r.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},Dm={kernelName:i.BK4,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:c}=n,l=a,u=i.ZSL.getTypedArrayFromDType(r.dtype,i.ZSL.sizeFromShape(r.shape)),[d,h,p,f]=r.shape,[m,g]=i.backend_util.getImageCenter(c,h,p),y=Math.sin(s),b=Math.cos(s),v=l.data.get(r.dataId).values;for(let i=0;i<d;i++){const e=i*p*h*f;for(let t=0;t<h;t++){const n=t*(p*f);for(let a=0;a<p;a++){const r=a*f;for(let s=0;s<f;s++){const i=[d,t,a,s],c=i[2],l=i[1];let x=(c-m)*b-(l-g)*y,w=(c-m)*y+(l-g)*b;x=Math.round(x+m),w=Math.round(w+g);let k=o;if("number"!==typeof o&&(k=3===s?255:o[s]),x>=0&&x<p&&w>=0&&w<h){k=v[e+w*(p*f)+x*f+s]}u[e+n+r+s]=k}}}}return{dataId:l.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Om=Iu(i.hVg,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),Lm={kernelName:i.hVg,backendName:"cpu",kernelFunc:Om},Mm=Tu((e=>1/Math.sqrt(e))),zm=Nu(i.TOR,Mm),Pm={kernelName:i.TOR,backendName:"cpu",kernelFunc:zm};function Bm(e,t,n,a,r,s,o,c,l,u){const d=[a/r,r],h=e.values,p=t.values;if(0===a)return(0,i.ra8)(n,t.dtype);const f=l instanceof i.ylz?l:(0,i.ra8)(d,t.dtype);"string"===typeof l||"number"===typeof l?f.values.fill(l):"boolean"===typeof l&&f.values.fill(+l);for(let i=0;i<s;i++){const e=[];let s=0;for(let t=0;t<o;t++){const n=h[i*o+t];e.push(n),s+=n*c[t]}if(s<0||s>=a/r)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<r;n++)u?f.values[s*r+n]+=p[i*r+n]:f.values[s*r+n]=0===t.rank?p[0]:p[i*r+n]}return f}const Wm={kernelName:i.pJc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=i.backend_util.calculateShapes(s,r,o),p=Bm(n.bufferSync(r),n.bufferSync(s),o,h,u,l,c,d,0,!0);return n.makeTensorInfo(o,p.dtype,p.values)}};function Um(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function Vm(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const Gm={kernelName:i.uWl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,c=function(e,t,n,a,r,s){const o=i.ZSL.getArrayFromDType("int32",n*r);for(let i=0;i<n;++i){const n=e.slice(i*a,(i+1)*a),c=i*r;for(let e=0;e<r;++e)o[c+e]="left"===s?Um(n,t[e+c]):Vm(n,t[e+c])}return o}(n.data.get(r.dataId).values,n.data.get(s.dataId).values,r.shape[0],r.shape[1],s.shape[1],o);return n.makeTensorInfo(s.shape,"int32",c)}};const jm={kernelName:i.l6P,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;wu([a,r,s],"select");const o=a.shape.length,c=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,d=(0,i.TuY)(r.dtype,s.dtype),h=i.ZSL.makeZerosTypedArray(i.ZSL.sizeFromShape(r.shape),d);let p=0;const f=0===o||o>1||1===r.shape.length?1:i.ZSL.sizeFromShape(r.shape.slice(1));for(let i=0;i<c.length;i++)for(let e=0;e<f;e++)1===c[i]?h[p++]=l[i]:h[p++]=u[i];return n.makeTensorInfo(r.shape,d,h)}},Zm=i.backend_util.SELU_SCALEALPHA,Km=i.backend_util.SELU_SCALE,Hm=Iu(i.u$b,(e=>e>=0?Km*e:Zm*(Math.exp(e)-1))),qm={kernelName:i.u$b,backendName:"cpu",kernelFunc:Hm},Ym=Iu(i.YVe,(e=>e<0?-1:e>0?1:0)),Qm={kernelName:i.YVe,backendName:"cpu",kernelFunc:Ym},Xm=Iu(i.hql,(e=>Math.sin(e))),Jm={kernelName:i.hql,backendName:"cpu",kernelFunc:Xm},$m=Iu(i.J3C,(e=>Math.sinh(e))),eg={kernelName:i.J3C,backendName:"cpu",kernelFunc:$m},tg=Math.log(1.1920928955078125e-7)+2,ng=Iu(i.Fin,(e=>{const t=e>-tg,n=e<tg,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),ag={kernelName:i.Fin,backendName:"cpu",kernelFunc:ng};const rg={kernelName:i.A8B,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;wu([r],"spaceToBatchND");const c=i.ZSL.sizeFromShape(s),l=[[0,0]];l.push(...o);for(let i=1+s.length;i<r.shape.length;++i)l.push([0,0]);const u=rm.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=i.backend_util.getReshaped(u.shape,s,c,!1),h=i.backend_util.getPermuted(d.length,s.length,!1),p=i.backend_util.getReshapedPermuted(u.shape,s,c,!1),f=sd({inputs:{x:u},backend:n,attrs:{shape:d}}),m=bd({inputs:{x:f},backend:n,attrs:{perm:h}}),g=sd({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function sg(e,t,n,a,r,s,o){const c=t[0],l=s[0],u=new Array(l),d=new Array(c),h=t[1];if(0===l){if(0!==c)throw new Error(i.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(c));return[i.ZSL.getArrayFromDType(n,0),[0,h],i.ZSL.getArrayFromDType(r,0),u,d]}let p=!0,f=0;const m=new Array(l).fill(0);for(let y=0;y<c;++y){const t=e[y*h];if(t<0)throw new Error(i.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(y,t));if(t>=l)throw new Error(i.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(y,t,l));++m[t],p=p&&t>=f,f=t}let g=!0;for(let i=0;i<l;++i){const e=0===m[i];u[i]=e,g=g&&!e,m[i]=Math.max(m[i],1),i>0&&(m[i]+=m[i-1])}if(g&&p){const t=e,n=a;for(let e=0;e<c;++e)d[e]=e;return[t,[c,h],n,u,d]}{const t=m[l-1],s=i.ZSL.getArrayFromDType(n,t*h),p=i.ZSL.getArrayFromDType(r,t),f=new Array(l).fill(0);for(let n=0;n<c;++n){const t=e[n*h],r=f[t],o=(0===t?0:m[t-1])+r;f[t]++;for(let a=0;a<h;++a)s[o*h+a]=e[n*h+a];p[o]=a[n],d[n]=o}for(let e=0;e<l;++e){if(0===f[e]){const t=0===e?0:m[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;p[t]=o}}return[s,[t,h],p,u,d]}}const og={kernelName:i.C8s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values[0],[d,h,p,f,m]=sg(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(h,a.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function ig(e,t,n,a,r){const s=i.ZSL.sizeFromShape(a),o=t[0],c=r.length,l=[];let u=1,d=-1;for(let g=0;g<c;++g){const e=r[g];if(-1===e){if(-1!==d)throw new Error(i.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,g));d=g,l.push(1)}else{if(e<0)throw new Error(i.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(g,e));u*=e,l.push(e)}}if(-1!==d){if(u<=0)throw new Error(i.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(s/u);if(u*e!==s)throw new Error(i.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(a,l));l[d]=e}if(i.ZSL.sizeFromShape(l)!==s)throw new Error(i.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(a,l));const h=a.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*a[e+1]}const f=[];if(c>0){f[c-1]=1;for(let e=c-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=i.ZSL.getArrayFromDType(n,o*c);for(let i=0;i<o;++i){let t=0;for(let n=0;n<h;++n)t+=e[i*h+n]*p[n];for(let e=0;e<c;++e)m[i*c+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[o,c],l]}const cg={kernelName:i.BoJ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(s.dataId).values),[l,u,d]=ig(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};function lg(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const c=a.length,l=[t[0],e.length/t[0]],u=l[1],d=c>0?r[c-1]+1:0;if(d<0)throw new Error(i.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=d;const p=h.reduce(((e,t)=>e*t),1),f=i.ZSL.getArrayFromDType(n,p);if(0===c)return d>0&&f.fill(o),[f,h];if(d<=0)throw new Error(i.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=r[m];for(;;){let t=0;if(g<c){if(t=r[g],b===t){++g;continue}if(b>=t)throw new Error(i.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=d)throw new Error(i.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,d));b>y&&f.fill(o,y*u,b*u);for(let n=m;n<g;++n){const t=a[n];if(t<0||t>=l[0])throw new Error(i.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,a[n],l[0]));for(let n=0;n<u;n++)f[b*u+n]+=e[t*u+n]}if(s)for(let e=0;e<u;e++)f[b*u+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>c)break}return y<d&&f.fill(o,y*u,d*u),[f,h]}const ug={kernelName:i.L6G,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=lg(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const dg={kernelName:i.DvZ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=lg(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const hg={kernelName:i.jgd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:c}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=i.backend_util.calculateShapes(s,r,c),f=!1,m=n.bufferSync(r);let g;switch(s.dtype){case"bool":g=Bm(m,n.bufferSync(s),c,p,d,u,l,h,Boolean(n.data.get(o.dataId).values[0]),f);break;case"float32":g=Bm(m,n.bufferSync(s),c,p,d,u,l,h,n.data.get(o.dataId).values[0],f);break;case"int32":g=Bm(m,n.bufferSync(s),c,p,d,u,l,h,n.data.get(o.dataId).values[0],f);break;case"string":g=Bm(m,n.bufferSync(s),c,p,d,u,l,h,i.ZSL.decodeString(n.data.get(o.dataId).values[0]),f);break;default:throw new Error("Unsupported type ".concat(s.dtype))}return n.makeTensorInfo(c,g.dtype,g.values)}};const pg={kernelName:i.Blb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,c=i.ZSL.parseAxisParam(o,r.shape)[0],l=i.backend_util.prepareSplitSize(r,s,c),u=new Array(r.shape.length).fill(0),d=r.shape.slice();return l.map((e=>{const t=[...d];t[c]=e;const a=jd({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[c]+=e,a}))}},fg=Tu((e=>Math.sqrt(e))),mg=Iu(i.dFH,(e=>Math.sqrt(e))),gg={kernelName:i.dFH,backendName:"cpu",kernelFunc:mg},yg={kernelName:i.M6A,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n;wu(a,"square");const s=r.data.get(a.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];o[i]=e*e}return{dataId:r.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},bg=Du(((e,t)=>{const n=e-t;return n*n})),vg=$u(i.Ddj,bg),xg={kernelName:i.Ddj,backendName:"cpu",kernelFunc:vg},wg=Tu(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),kg=Nu(i.GZp,wg),Sg={kernelName:i.GZp,backendName:"cpu",kernelFunc:kg},Tg=Iu(i.pnw,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Ig={kernelName:i.pnw,backendName:"cpu",kernelFunc:Tg};function Ng(e,t,n,a){const r=(0,i.ra8)(e,t.dtype);for(let s=0;s<r.size;s++){const e=r.indexToLoc(s),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+a[t];r.set(t.get(...o),...e)}return r}const Cg={kernelName:i.UcO,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:c,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a;wu(r,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:w}=i.Kro.sliceInfo(r.shape,s,o,c,l,u,d,h,p);let k;if(g)k=sd({inputs:{x:r},backend:n,attrs:{shape:m}});else if(y||b){i.ZSL.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=i.Kro.computeOutShape(v,x,w),t=jd({inputs:{x:r},backend:n,attrs:{begin:v,size:e}});k=sd({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=Ng(f,n.bufferSync(r),w,v);k=n.makeTensorInfo(m,e.dtype,e.values)}return k}};class Eg{constructor(e,t,n,a,r,s){this.separator=i.ZSL.encodeString(e),this.nGramWidths=t,this.leftPad=i.ZSL.encodeString(n),this.rightPad=i.ZSL.encodeString(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let o=0;o<r;++o){const i=this.getPadWidth(s),c=Math.max(0,i-o),l=Math.max(0,i-(r-(o+1))),u=s-(c+l),d=t+(c>0?0:o-i);let h=0;h+=c*this.leftPad.length;for(let t=0;t<u;++t)h+=e[d+t].length;h+=l*this.rightPad.length;h+=(c+l+u-1)*this.separator.length,n[a+o]=new Uint8Array(h);const p=n[a+o];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<c;++e)m(this.leftPad),m(this.separator);for(let t=0;t<u-1;++t)m(e[d+t]),m(this.separator);if(u>0){m(e[d+u-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error("Invalid split value ".concat(t[r],", must be in [").concat(e,", ").concat(n,"]"));e=t[r]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const r=a-1,s=i.ZSL.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=r;++t)s[t]=0;return[e,s]}s[0]=0;for(let i=1;i<=r;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[i]=s[i-1]+n}const o=new Array(s[r]);for(let i=0;i<r;++i){const n=t[i];let a=s[i];if(this.nGramWidths.forEach((r=>{const s=t[i+1]-t[i],c=this.getNumNGrams(s,r);this.createNGrams(e,n,o,a,c,r),a+=c})),this.preserveShort&&a===s[i]){const r=t[i+1]-t[i];if(0===r)continue;const s=r+2*this.padWidth,c=1;this.createNGrams(e,n,o,a,c,s)}}return[o,s]}}function Ag(e,t,n,a,r,s,o,i){return new Eg(n,a,r,s,o,i).compute(e,t)}const _g={kernelName:i.YAb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,h=n.data.get(u.dataId).values,p=n.data.get(d.dataId).values,[f,m]=Ag(h,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};function Rg(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function Fg(e,t,n){const a=e.length,r=[];let s=0,o=0;const c=new Array(a);for(let i=0;i<a;++i){const a=r.length;Rg(e[i],t,n,r);const l=r.length-a;c[i]=l,s+=l,o=Math.max(o,l)}const l=i.ZSL.getArrayFromDType("int32",2*s),u=new Array(s),d=[a,o];let h=0;for(let i=0;i<a;++i)for(let e=0;e<c[i];++e)l[2*h]=i,l[2*h+1]=e,u[h]=r[h],++h;return[l,u,d]}const Dg={kernelName:i.iW0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values[0],[l,u,d]=Fg(i,c,r),h=u.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};function Og(e,t){const n=i.ZSL.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=i.ZSL.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}const Lg={kernelName:i.$jE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=Og(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",o)}},Mg=Iu(i.oFs,(e=>Math.tan(e))),zg={kernelName:i.oFs,backendName:"cpu",kernelFunc:Mg},Pg=Iu(i.iuW,(e=>Math.tanh(e))),Bg={kernelName:i.iuW,backendName:"cpu",kernelFunc:Pg};const Wg={kernelName:i.X4r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:s}=t,{sliceRank:o,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=i.backend_util.calculateShapes(s,r,a.shape),h=n.bufferSync(r),p=n.bufferSync(s),f=n.bufferSync(a),m=Bm(h,p,a.shape,d,l,c,o,u,f,!1);return n.makeTensorInfo(a.shape,m.dtype,m.values)}};function Ug(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=(0,i.ra8)(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}const Vg={kernelName:i.FAs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;wu(r,"tile");const o=Ug(n.bufferSync(r),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},Gg=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function jg(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,o=Math.log(r),i=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*i*(r-i)/r)*Math.sign(s-r/2);jg(e,t,Math.max(n,Math.floor(t-s*i/r+c)),Math.min(a,Math.floor(t+(r-s)*i/r+c)))}const r=e[t];let s=n,o=a;for(i.ZSL.swap(e,n,t),Gg(e[a],r)>0&&i.ZSL.swap(e,n,a);s<o;){for(i.ZSL.swap(e,s,o),s++,o--;Gg(e[s],r)<0;)s+=1;for(;Gg(e[o],r)>0;)o-=1}0===Gg(e[n],r)?i.ZSL.swap(e,n,o):(o+=1,i.ZSL.swap(e,o,a)),o<=t&&(n=o+1),t<=o&&(a=o-1)}}function Zg(e,t,n,a,r){const s=t[t.length-1],[o,c]=[e.length/s,s],l=i.ZSL.getTypedArrayFromDType(n,o*a),u=i.ZSL.getTypedArrayFromDType("int32",o*a);for(let i=0;i<o;i++){const t=i*c,n=e.subarray(t,t+c);let s=new Array(n.length);n.forEach(((e,t)=>s[t]={value:e,index:t})),a<s.length&&(jg(s,a),s=s.slice(0,a)),r&&s.sort(Gg);const o=i*a,d=l.subarray(o,o+a),h=u.subarray(o,o+a);for(let e=0;e<a;e++)d[e]=s[e].value,h[e]=s[e].index}const d=t.slice();return d[d.length-1]=a,[(0,i.ra8)(d,n,l),(0,i.ra8)(d,"int32",u)]}const Kg={kernelName:i.TBb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a;wu(r,"topk");const i=n.data.get(r.dataId).values,[c,l]=Zg(i,r.shape,r.dtype,s,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const Hg={kernelName:i.dLy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:c,fillValue:l,outputShape:u}=n,[d,h,p,f]=r.shape,[m,g]=null!=u?u:[h,p],y=[d,m,g,f],b=i.ZSL.computeStrides(r.shape),v=b[0],x=b[1],w=b[2],k=i.ZSL.computeStrides(y),S=k[0],T=k[1],I=k[2],N=i.ZSL.getTypedArrayFromDType(r.dtype,i.ZSL.sizeFromShape(y));N.fill(l);const C=a.data.get(r.dataId).values,E=a.data.get(s.dataId).values;for(let i=0;i<d;++i){const e=1===s.shape[0]?E:E.subarray(8*i,8*i+8);for(let t=0;t<m;++t)for(let n=0;n<g;++n)for(let a=0;a<f;++a){let r;const s=e[6]*n+e[7]*t+1;if(0===s)continue;const u=(e[0]*n+e[1]*t+e[2])/s,d=(e[3]*n+e[4]*t+e[5])/s,f=qg(u,p,c),m=qg(d,h,c);switch(o){case"nearest":r=Qg(C,h,p,v,x,w,i,m,f,a,l);break;case"bilinear":r=Xg(C,h,p,v,x,w,i,m,f,a,l);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(o))}N[i*S+t*T+n*I+a]=r}return a.makeTensorInfo(y,r.dtype,N)}return{dataId:a.write(N,y,r.dtype),shape:r.shape,dtype:r.dtype}}};function qg(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return i.ZSL.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return i.ZSL.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return i.ZSL.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Yg(e,t,n,a,r,s,o,i,c,l,u){return 0<=i&&i<t&&0<=c&&c<n?e[o*a+i*r+c*s+l]:u}function Qg(e,t,n,a,r,s,o,i,c,l,u){return Yg(e,t,n,a,r,s,o,Math.round(i),Math.round(c),l,u)}function Xg(e,t,n,a,r,s,o,i,c,l,u){const d=Math.floor(i),h=Math.floor(c),p=d+1,f=h+1;return(p-i)*((f-c)*Yg(e,t,n,a,r,s,o,d,h,l,u)+(c-h)*Yg(e,t,n,a,r,s,o,d,f,l,u))+(i-d)*((f-c)*Yg(e,t,n,a,r,s,o,p,h,l,u)+(c-h)*Yg(e,t,n,a,r,s,o,p,f,l,u))}function Jg(e,t,n,a){const r=i.ZSL.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let i=0;i<r;i++)s[0]*=n[i];s[1]=n[r];for(let i=r+1;i<n.length;i++)s[2]*=n[i];const o=new Map,c=new Int32Array(n[r]),l=new i.ylz(s,a,e),u=[],d=1===s[0]&&1===s[2];for(let i=0;i<n[r];i++){let t;if(d)t=e[i].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(l.get(t,i,n));t=e.join(",")}const n=o.get(t);if(null!=n)c[i]=n;else{const e=o.size;o.set(t,e),c[i]=e,u.push(i)}}const h=s.slice();h[1]=o.size;const p=new i.ylz(h,a);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)p.set(l.get(n,e,a),n,t,a)}));const f=n.slice();return f[r]=h[1],{outputValues:p.values,outputShape:f,indices:c}}const $g={kernelName:i.EwU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;wu(s,"unique");const o=a.data.get(s.dataId).values,{outputValues:i,outputShape:c,indices:l}=Jg(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const ey={kernelName:i.dXR,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r.shape.length,i=r.shape[s],c=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==s&&(c[l++]=r.shape[p]);const u=new Array(o).fill(0),d=r.shape.slice();d[s]=1;const h=new Array(i);for(let p=0;p<h.length;p++){u[s]=p;const e=jd({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});h[p]=sd({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return h}};const ty={kernelName:i.pPe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a;wu(r,"unsortedSegmentSum");const c=[],l=[],u=r.shape.length-s.shape.length;let d=s;for(let i=0;i<u;++i){const e=rp({inputs:{input:d},backend:n,attrs:{dim:i+1}});d=e,l.push(e)}for(let p=0;p<o;++p){const e=i.ZSL.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),a=Zh({inputs:{a:t,b:d},backend:n}),s=Xu({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),o=Ph({inputs:{a:s,b:r},backend:n}),u=Wh({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});c.push(u),l.push(t),l.push(a),l.push(s),l.push(o),l.push(u)}const h=nm({inputs:c,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},ny=[ld,dd,pd,md,rd,gd,xd,wd,kd,Sd,Id,Cd,Ad,Fd,Od,Pd,Bd,Wd,Ud,cd,Vd,Kd,Yd,Jd,$d,Ju,nh,rh,Ku,sh,uh,hh,ph,fh,mh,gh,yh,vh,wh,kh,Sh,Th,Ih,Nh,Eh,Ah,_h,Rh,Fh,Dh,Oh,Lh,Vh,Eu,Gh,Kh,ep,ap,sp,cp,vp,wp,kp,Ip,Ep,Ap,_p,Fp,Op,zp,Wp,_u,Up,ch,Gp,Zp,Hp,Fu,Qp,$p,tf,rf,of,uf,hf,mf,gf,yf,xf,Sf,Tf,If,Nf,Cf,Ef,Af,_f,Df,Of,zf,Wf,Bh,Vf,jf,Kf,qf,Xf,Jf,tm,am,rm,im,Mu,lm,fm,ym,Sm,Im,Yu,dp,Cm,Pu,Wu,od,Em,Am,_m,Rm,Fm,Dm,Lm,Pm,Wm,Gm,jm,qm,Gu,Qm,Jm,eg,Zd,Bf,ag,rg,og,cg,ug,dg,hg,pg,gg,yg,xg,Sg,Ig,Cg,_g,Dg,Lg,mp,Uh,zg,Bg,Wg,Vg,Kg,Hg,vd,$g,ey,ty,em];for(const n of ny)(0,i.tAK)(n);const ay={},ry={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function sy(e,t){if(!(e in ay)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,i._K2)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete ay[e]}),!1),(0,i._K2)().getBool("SOFTWARE_WEBGL_ENABLED")&&(ry.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",ry)||n.getContext("experimental-webgl",ry);return n.getContext("webgl2",ry)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;ay[e]=n}const n=ay[e];return null==n||n.isContextLost()?(delete ay[e],sy(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ay[e])}var oy,iy,cy;function ly(e,t){return[t,e]}function uy(e){const t=i.ZSL.sizeFromShape(e),n=Math.ceil(t/4);return i.ZSL.sizeToSquarishShape(n)}function dy(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function hy(e,t){const n=e;let a,r,s,o,c,l,u,d,h,p;return 2===(0,i._K2)().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,o=n.RGBA32F,c=n.RED,u=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(a=e.RGBA,r=e.RGBA,s=e.RGBA,o=n.RGBA,c=e.RGBA,u=4,d=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:c,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function py(e,t){const n=t();return(0,i._K2)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(oy||(oy={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(iy||(iy={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(cy||(cy={}));function fy(e){return!!((0,i._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function my(e,t){return Ty(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const gy=/ERROR: [0-9]+:([0-9]+):/g;function yy(e,t){const n=gy.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,o=r.map(((e,t)=>i.ZSL.rightPad((t+1).toString(),s)+e));let c=0;for(let i=0;i<o.length;i++)c=Math.max(o[i].length,c);const l=o.slice(0,a-1),u=o.slice(a-1,a),d=o.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(i.ZSL.rightPad(u[0],c)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function by(e,t){if(py(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function vy(e,t,n,a,r,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(py(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),py(e,(()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,s,o))),py(e,(()=>e.enableVertexAttribArray(i))),!0)}function xy(e,t,n,a){py(e,(()=>function(e,t,n){Iy(e,n),py(e,(()=>e.activeTexture(e.TEXTURE0+n))),py(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),py(e,(()=>e.uniform1i(n,a)))}function wy(e,t,n){py(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),py(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function ky(e,t){py(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),py(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function Sy(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function Ty(e,t,n){const a=py(e,(()=>t()));if(null==a)throw new Error(n);return a}function Iy(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function Ny(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return i.ZSL.sizeFromShape(e.slice(0,e.length-t))}function Cy(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Ey(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Ny(e),...Cy(e)]),t}function Ay(e){return e%2===0}function _y(e,t){if(e=e.slice(-2),t=t.slice(-2),i.ZSL.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(Ay(n)&&Ay(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Ay(e[0])&&Ay(t[0])}let Ry,Fy;function Dy(e,t){return null!=e.getExtension(t)}function Oy(e){try{if(null!=sy(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Ly(e){if(0===e)return!1;const t=sy(e);if(1!==e){if(Dy(t,"EXT_color_buffer_float"))return My(t);const e="EXT_color_buffer_half_float";if(Dy(t,e)){const n=t.getExtension(e);return function(e,t){const n=hy(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!Dy(t,"OES_texture_float"))return!1;if(!Dy(t,"WEBGL_color_buffer_float"))return!1;return My(t)}function My(e){const t=hy(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function zy(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&i.ZSL.assert("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const Py=(0,i._K2)();function By(){let e,t,n,a,r,s,o,c,l,u;return 2===(0,i._K2)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",o="out vec4 outputColor;",c=(0,i._K2)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",o="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:o,defineSpecialNaN:c,defineSpecialInf:l,defineRound:u}}function Wy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=i.ZSL.computeStrides(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(t),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(t):"index -= ".concat(e[r]," * ").concat(t);return"".concat(s,"; ").concat(o,";")})).join("")}function Uy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=i.ZSL.computeStrides(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(e[r]," * outShapeStrides[").concat(r,"]");return"".concat(s,"; ").concat(o,";")})).join("")}function Vy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map((e=>"".concat(t,"[").concat(e,"]"))),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]="(".concat(r[s+1]," * ").concat(a[s+1],")");return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(s,"; ").concat(o,";")})).join("")}function Gy(e){const t=i.ZSL.computeStrides(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}Py.registerFlag("HAS_WEBGL",(()=>Py.getNumber("WEBGL_VERSION")>0)),Py.registerFlag("WEBGL_VERSION",(()=>Oy(2)?2:Oy(1)?1:0)),Py.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Py.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Py.get("WEBGL_VERSION"))),Py.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Py.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Py.registerFlag("WEBGL_PACK",(()=>Py.getBool("HAS_WEBGL"))),Py.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Py.getBool("WEBGL_PACK"))),Py.registerFlag("WEBGL_PACK_CLIP",(()=>Py.getBool("WEBGL_PACK"))),Py.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>Py.getBool("WEBGL_PACK"))),Py.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Py.getBool("WEBGL_PACK"))),Py.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Py.getBool("WEBGL_PACK"))),Py.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Py.getBool("WEBGL_PACK"))),Py.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Py.getBool("WEBGL_PACK"))),Py.registerFlag("WEBGL_PACK_REDUCE",(()=>Py.getBool("WEBGL_PACK"))),Py.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Py.getBool("WEBGL_PACK"))),Py.registerFlag("WEBGL_CONV_IM2COL",(()=>Py.getBool("WEBGL_PACK"))),Py.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>Py.getBool("WEBGL_PACK"))),Py.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==Ry){const t=sy(e);Ry=t.getParameter(t.MAX_TEXTURE_SIZE)}return Ry}(Py.getNumber("WEBGL_VERSION")))),Py.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==Fy){const t=sy(e);Fy=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Fy)}(Py.getNumber("WEBGL_VERSION")))),Py.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=Py.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=sy(e);return t=Dy(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Dy(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),Py.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Py.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!i.eMq.isMobile())),Py.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=sy(e);if(1===e){if(!Dy(t,"OES_texture_float"))return!1}else if(!Dy(t,"EXT_color_buffer_float"))return!1;return My(t)}(Py.getNumber("WEBGL_VERSION")))),Py.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Py.getBool("WEBGL_FORCE_F16_TEXTURES")&&Py.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Py.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>Ly(Py.getNumber("WEBGL_VERSION")))),Py.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=Py.getNumber("WEBGL_VERSION"))&&null!=sy(e).fenceSync;var e})),Py.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Py.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Py.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),Py.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>i.eMq.isMobile()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),Py.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),Py.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),Py.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),Py.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),Py.registerFlag("WEBGL_EXP_CONV",(()=>!1)),Py.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>Py.getBool("IS_TEST"))),Py.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),Py.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),Py.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),Py.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const jy="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Zy}=i.backend_util;function Ky(e,t,n){const a=[];if(e.forEach((e=>{const t=i.ZSL.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=nb(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),s=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?qy(e,a):Hy(e,a);const s=e.shapeInfo.logicalShape,o=t.logicalShape;s.length<=o.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,c=Zy(e.shapeInfo.logicalShape,t.logicalShape),l=tb(o),u=o-s;let d;const h=["x","y","z","w","u","v"];d=0===s?"":o<2&&c.length>=1?"coords = 0;":c.map((e=>"coords.".concat(h[e+u]," = 0;"))).join("\n");let p="";p=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(h[t+u]))).join(", ");let f="return outputValue;";const m=1===i.ZSL.sizeFromShape(e.shapeInfo.logicalShape),g=i.ZSL.sizeFromShape(t.logicalShape),y=1===g;if(1!==s||m||y){if(m&&!y)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const e=s-2,t=s-1;c.indexOf(e)>-1&&c.indexOf(t)>-1?f="return vec4(outputValue.x);":c.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(d,"\n      vec4 outputValue = get").concat(a,"(").concat(p,");\n      ").concat(f,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,c=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&c===l&&null==e.shapeInfo.flatOffset&&i.ZSL.arraysEqual(o,s))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const u=tb(l),d=Zy(e.shapeInfo.logicalShape,t.logicalShape),h=l-c;let p;const f=["x","y","z","w","u","v"];p=0===c?"":l<2&&d.length>=1?"coords = 0;":d.map((e=>"coords.".concat(f[e+h]," = 0;"))).join("\n");let m="";m=l<2&&c>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(f[t+h]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(p,"\n      return get").concat(a,"(").concat(m,");\n    }\n  ")}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,c=By(),l=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(c);let u,d,h=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(Yy,"\n    ").concat(Qy,"\n    ").concat(Xy,"\n  ");return t}(c);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(i.ZSL.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let o=s,i="",c="b, r, c";for(let l=2;l<e.length-1;l++)o*=e[e.length-l-1],i="\n      int b".concat(l," = index / ").concat(o,";\n      index -= b").concat(l," * ").concat(o,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(c)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(i.ZSL.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=Uy(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=Wy(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=Uy(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=Wy(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=Wy(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=Wy(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(c)),n.packedInputs&&(h+=Jy);return[h,l,d,r,u,s,n.userCode].join("\n")}function Hy(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=$y(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(eb(e),"\n      }\n    ");const r=e.shapeInfo.texShape,s=r[0],o=r[1];if(1===o&&1===s)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=$y(n);if(1===o)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(s,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===s)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&i.ZSL.arraysEqual(n,s)){if(t)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=s[0],n=s[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:o,keptDims:c}=i.ZSL.squeezeShape(n),l=o;if(l.length<n.length){const n=ab(e,l),a=["row","col"];return"\n      ".concat(Hy(n,t),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(rb(a,c),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(eb(e),"\n      }\n    ");const u=s[0],d=s[1],h=$y(a);if(1===d)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(u,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===u)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(d,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(t)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(u,", ").concat(d,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],o=n[2],{newShape:c,keptDims:l}=i.ZSL.squeezeShape(n),u=c;if(u.length<n.length){const n=ab(e,u),a=["row","col","depth"];return"\n        ".concat(Hy(n,t),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(rb(a,l),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(s,", ").concat(o,", 1)));\n        ").concat(eb(e),"\n      }\n    ");const d=e.shapeInfo.texShape,h=d[0],p=d[1],f=e.shapeInfo.flatOffset;if(p===s&&null==f)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(o,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(p,".0, ").concat(h,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(p===o&&null==f)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(p,".0, ").concat(h,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const m=$y(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(s," + col * ").concat(o," + depth + ").concat(m,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(p,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],o=n[2]*s,c=n[1]*o,{newShape:l,keptDims:u}=i.ZSL.squeezeShape(n);if(l.length<n.length){const n=ab(e,l),a=["row","col","depth","depth2"];return"\n      ".concat(Hy(n,t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(rb(a,u),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(c,", ").concat(o,", ").concat(s,", 1)));\n        ").concat(eb(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1],m="int stride2 = ".concat(a,"Shape[3];"),g="int stride1 = ".concat(a,"Shape[2] * stride2;"),y="int stride0 = ".concat(a,"Shape[1] * stride1;");if(f===c&&null==d)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(m,"\n        ").concat(g,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(f===s&&null==d)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const b=$y(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(m,"\n      ").concat(g,"\n      ").concat(y,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(b,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(o," +\n          depth * ").concat(s," + depth2;\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index + ").concat(b,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,o=t[2]*s,c=t[1]*o,{newShape:l,keptDims:u}=i.ZSL.squeezeShape(t);if(l.length<t.length){const t=ab(e,l),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(Hy(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(rb(n,u),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(c,", ").concat(o,", ").concat(s,", ").concat(r,")) +\n          depth3;\n        ").concat(eb(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(o,", ").concat(s,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===r&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=$y(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(o," + depth * ").concat(s," +\n          depth2 * ").concat(r," + depth3 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=i.ZSL.squeezeShape(t);if(r.length<t.length){const t=ab(e,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(Hy(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(rb(n,s),");\n      }\n    ")}const o=t[5],c=t[4]*o,l=t[3]*c,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(d,", ").concat(u,", ").concat(l,", ").concat(c,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(o,", 1)));\n        ").concat(eb(e),"\n      }\n    ");const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(o,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(m===o&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const g=$y(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(d," + col * ").concat(u," + depth * ").concat(l," +\n          depth2 * ").concat(c," + depth3 * ").concat(o," + depth4 + ").concat(g,";\n      vec2 uv = uvFromFlat(").concat(f,", ").concat(m,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function qy(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=By();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=By();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=s[0],c=s[1],l=By();if(null!=s&&i.ZSL.arraysEqual(n,s))return t?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(c,".0, ").concat(o,".0);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ");const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],d=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(d,", ").concat(u[0],", ").concat(u[1],", row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=ab(e,n.slice(1)),o=["b","row","col"];return"\n        ".concat(qy(s,t),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(rb(o,a),");\n        }\n      ")}const i=By();if(t)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=o[0],l=o[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(d,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=By();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],d=Math.ceil(s[o-1]/2);let h=d*Math.ceil(s[o-2]/2),p="int b, int row, int col",f="b * ".concat(h," + (row / 2) * ").concat(d," + (col / 2)");for(let m=2;m<o-1;m++)p="int b".concat(m,", ")+p,h*=s[o-m-1],f="b".concat(m," * ").concat(h," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const Yy="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Qy="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Xy="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Jy="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function $y(e){return"offset".concat(e)}function eb(e){const t=e.name,n=i.ZSL.sizeFromShape(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function tb(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function nb(e,t,n){const{newShape:a,keptDims:r}=i.ZSL.squeezeShape(t),s=t.length,o=e&&3===s&&1===t[0],c=o?t.slice(1):a,l=!e&&s>1&&!i.ZSL.arraysEqual(t,n)&&a.length<s||o;return{useSqueezeShape:l,uniformShape:l?c:t,keptDims:r}}function ab(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function rb(e,t){return t.map((t=>e[t])).join(", ")}function sb(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},c=Ky(r,o,t),l=function(e,t){const n=Ty(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(py(e,(()=>e.shaderSource(n,t))),py(e,(()=>e.compileShader(n))),(0,i._K2)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw yy(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,c),u=e.createProgram(l);return(0,i._K2)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:s,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:s,outShapeInfo:o},ob(e,t,u)))}function ob(e,t,n){const a=[],r=[];let s,o,c,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===(0,i._K2)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(const i of t.variableNames){const r={name:i,uniform:e.getUniformLocation(n,i,d),offset:e.getUniformLocation(n,"offset".concat(i),d)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,"".concat(i,"Shape"),d),r.texShape=e.getUniformLocation(n,"".concat(i,"TexShape"),d)),a.push(r)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",d),c=e.getUniformLocation(n,"outShapeStrides",d),o=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(const i of t.customUniforms)r.push(e.getUniformLocation(n,i.name,d));return{variablesLocations:a,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:c,outTexShapeLocation:o}}function ib(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!i.ZSL.arraysEqual(a,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(s," must match"));if(e.isUniform&&r.isUniform)return;const o=e.texShape,c=r.isUniform?null:r.texData.texShape;if(!i.ZSL.arraysEqual(o,c))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(o," and ").concat(c," must match"))}))}function cb(e){return(0,i._K2)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class lb{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=oy.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=By();this.outputShape=e,this.enableShapeUniforms=cb(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?Uy(["r","c","d"],e):Wy(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class ub{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=oy.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=By();this.outputShape=e,this.enableShapeUniforms=cb(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?Uy(["r","c","d"],e):Wy(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class db{constructor(e){this.variableNames=["A"],this.outTexUsage=iy.DOWNLOAD;const t=By();this.outputShape=e,this.userCode="\n      ".concat(jy,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class hb{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=iy.DOWNLOAD;const t=By();this.outputShape=e,this.userCode="\n      ".concat(jy,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const pb={R:0,G:1,B:2,A:3};class fb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=By();this.outputShape=e,this.enableShapeUniforms=cb(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let o=0;o<n.length;o++){const e=n[o];s+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(pb[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Gy(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(s,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class mb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=By();this.outputShape=e,this.enableShapeUniforms=cb(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const r=2*s+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(s," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(s,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Gy(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function gb(e){const t=By();return function(e,t){const n=Ty(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(py(e,(()=>e.shaderSource(n,t))),py(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function yb(e){return function(e,t){const n=Ty(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return py(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),py(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function bb(e){return function(e,t){const n=Ty(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return py(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),py(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function vb(e,t,n,a,r,s){!function(e,t){const n=(0,i._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(t,n);const o=function(e){return Ty(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),c=e.TEXTURE_2D;return py(e,(()=>e.bindTexture(c,o))),py(e,(()=>e.texParameteri(c,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),py(e,(()=>e.texParameteri(c,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),py(e,(()=>e.texParameteri(c,e.TEXTURE_MIN_FILTER,e.NEAREST))),py(e,(()=>e.texParameteri(c,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,i._K2)().getNumber("WEBGL_VERSION")?py(e,(()=>e.texImage2D(c,0,a,t,n,0,r,s,null))):py(e,(()=>e.texStorage2D(c,1,a,t,n))),py(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function xb(e){return e.internalFormatFloat}function wb(e){return e.internalFormatHalfFloat}function kb(e){return e.downloadTextureFormat}function Sb(e){return e.internalFormatPackedFloat}function Tb(e){return e.internalFormatPackedHalfFloat}function Ib(e,t,n,a,r,s,o,i){const c=e,l=new Float32Array(function(e,t){const[n,a]=dy(e,t);return n*a*4}(s,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class Nb{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,i._K2)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){ay[e]=t}(t,e)):this.gl=sy(t),e=this.gl,2===(0,i._K2)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>py(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>py(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>py(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>py(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>py(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>py(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>py(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>py(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,i._K2)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=my(this.gl,e),Dy(this.gl,t))this.textureHalfFloatExtension=my(this.gl,t);else if((0,i._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Dy(this.gl,a))this.colorBufferHalfFloatExtension=my(this.gl,a);else if((0,i._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Dy(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Dy(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=yb(this.gl),this.indexBuffer=bb(this.gl),this.framebuffer=function(e){return Ty(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=hy(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,i._K2)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;py(e,(()=>e.finish())),py(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),py(e,(()=>e.deleteFramebuffer(this.framebuffer))),py(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),py(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),py(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=ly(t,n);return vb(e,r,s,xb(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=ly(t,n);return vb(e,r,s,wb(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=ly(t,n);return vb(e,r,s,kb(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){py(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,i._K2)().getNumber("WEBGL_VERSION")?py(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):py(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,i._K2)().getNumber("WEBGL_VERSION")?py(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):py(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),py(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,s){let o,c,l;py(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(o=new Uint8Array(n*a*4),c=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*a*4),c=e.FLOAT,l=s.internalFormatPackedFloat),o.set(r),2===(0,i._K2)().getNumber("WEBGL_VERSION")?py(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,c,o))):py(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,c,o))),py(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=dy(t,n);return vb(e,r,s,Tb(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=dy(t,n);return vb(e,r,s,Sb(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(ky(this.gl,this.framebuffer),this.outputTexture=null),py(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,s]=ly(t,n),o=new Uint8Array(t*n*4);return py(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return Ib(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n,a){const r=e.createBuffer();py(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return py(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),py(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),py(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,i._K2)().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else(0,i._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,i._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return py(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=gb(t));const n=function(e){return Ty(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);py(t,(()=>t.attachShader(n,this.vertexShader))),py(t,(()=>t.attachShader(n,e))),function(e,t){if(py(e,(()=>e.linkProgram(t))),!(0,i._K2)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&by(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;py(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){py(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),vy(e,t,"clipSpacePos",n,3,20,0)&&vy(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(py(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&by(this.gl,this.program),py(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return Ty(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),py(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),xy(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=dy(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&by(this.gl,this.program),Sy(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}py(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),py(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=my(this.gl,2===(0,i._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,i._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,i._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await i.ZSL.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,i._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,i._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,i._K2)().platform&&(n=(0,i._K2)().platform.setTimeoutCustom.bind((0,i._K2)().platform)),i.ZSL.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),wy(this.gl,e,this.framebuffer),this.debug&&Sy(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(wy(this.gl,this.outputTexture,this.framebuffer),this.debug&&Sy(this.gl)):ky(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;wy(a,e,this.framebuffer),this.debug&&Sy(a),this.outputTexture=e,py(a,(()=>a.viewport(0,0,t,n))),py(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),py(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:Cb,bincountImpl:Eb,bincountReduceImpl:Ab,bitwiseAndImpl:_b,castImpl:Rb,ceilImpl:Fb,concatImpl:Db,equalImpl:Ob,expImpl:Lb,expm1Impl:Mb,floorImpl:zb,gatherNdImpl:Pb,gatherV2Impl:Bb,greaterImpl:Wb,greaterEqualImpl:Ub,lessImpl:Vb,lessEqualImpl:Gb,linSpaceImpl:jb,logImpl:Zb,maxImpl:Kb,maximumImpl:Hb,minimumImpl:qb,multiplyImpl:Yb,negImpl:Qb,notEqualImpl:Xb,prodImpl:Jb,raggedGatherImpl:$b,raggedRangeImpl:ev,raggedTensorToTensorImpl:tv,rangeImpl:nv,rsqrtImpl:av,scatterImpl:rv,sigmoidImpl:sv,simpleAbsImpl:ov,sliceImpl:iv,sparseFillEmptyRowsImpl:cv,sparseReshapeImpl:lv,sparseSegmentReductionImpl:uv,sqrtImpl:dv,staticRegexReplaceImpl:hv,stridedSliceImpl:pv,stringNGramsImpl:fv,stringSplitImpl:mv,stringToHashBucketFastImpl:gv,subImpl:yv,tileImpl:bv,topKImpl:vv,transposeImpl:xv,uniqueImpl:wv}=e;function kv(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function Sv(e,t){return 1===t?[e]:kv(e,t)}class Tv{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=cb(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Sv("rc",this.rank),t=tb(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)r="".concat(e[e.length-1-t],",")+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class Iv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=cb(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?Vy(["r","c","d"],"inputShape"):Wy(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Gy(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class Nv{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=Ev(t,n),r=Av(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=Cv(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let o;return a===cy.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===cy.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===cy.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===cy.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===cy.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=Ev(n,a),s=Av(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const o=Cv(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),c=(0,i._K2)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==c&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[s],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Cv(e,t,n,a,r){const s=function(e,t){switch(e){case cy.PACKED_2X2_FLOAT32:return Sb(t);case cy.PACKED_2X2_FLOAT16:return Tb(t);case cy.UNPACKED_FLOAT32:return xb(t);case cy.UNPACKED_FLOAT16:return wb(t);case cy.PACKED_4X1_UNSIGNED_BYTE:return kb(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let o;if(r){const[t,n]=dy(e[0],e[1]);o=t*n}else{const[t,n]=ly(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,s);return o*i}function Ev(e,t){if(e===iy.UPLOAD)return cy.PACKED_2X2_FLOAT32;if(e===iy.RENDER||null==e)return function(e){return(0,i._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?cy.PACKED_2X2_FLOAT32:cy.UNPACKED_FLOAT32:e?cy.PACKED_2X2_FLOAT16:cy.UNPACKED_FLOAT16}(t);if(e===iy.DOWNLOAD||e===iy.PIXELS)return cy.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function Av(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class _v{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=cb(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const Rv="if (isnan(x)) return x;",Fv="return x;",Dv="return abs(x);";const Ov="return (x >= 0.0) ? x : (exp(x) - 1.0);",Lv=Rv+"\n  return (x < 0.0) ? 0.0 : x;\n",Mv=Rv+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",zv="return x;",Pv="return 1.0 / (1.0 + exp(-1.0 * x));",Bv="return x;",Wv="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",Uv="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Vv="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Gv="return 1.0 / (1.0 + exp(-1.0 * x));";class jv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=cb(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class Zv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=cb(this.outputShape.length);const t=e.length,n=Sv("rc",t),a=tb(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const Kv=i.kpo.YO,Hv={};const qv=(0,i._K2)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Yv extends i.uI_{nextDataId(){return Yv.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,i._K2)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Nb)t=e;else{const n=sy((0,i._K2)().getNumber("WEBGL_VERSION"),e);t=new Nb(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=sy((0,i._K2)().getNumber("WEBGL_VERSION"));t=new Nb(e),this.binaryCache=((n=(0,i._K2)().getNumber("WEBGL_VERSION"))in Hv||(Hv[n]={}),Hv[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Nv(this.gpgpu),this.numMBBeforeWarning=null==(0,i._K2)().global.screen?1024:(0,i._K2)().global.screen.height*(0,i._K2)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i.GJx(this,(0,i.Hi9)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,r]},i.texShape=[a,r];const c=Ey(t),l=new fb(c,!1,s),u=this.runWebGLProgram(l,[o],n,[[a,r]]);return u.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),u.dataId}write(e,t,n){if(((0,i._K2)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,i._K2)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:iy.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if((0,i._K2)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:iy.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:o,isPacked:c}=t;if(null!=s){let t;t=c?new jv(o,zv):new _v(o,zv);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const l=null!=this.activeTimers;let u,d;if(l&&(u=i.ZSL.now()),"complex64"===a){const e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);d=i.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=i.ZSL.now()-u),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:o,isPacked:c}=t;if(null!=r){let t;t=c?new jv(a,zv):new _v(a,zv);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,i._K2)().getBool("DEBUG")&&!(0,i._K2)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,i._K2)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,d=null;if("complex64"!==s&&(0,i._K2)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...uy(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];u=i.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)u=this.getValuesFromTexture(e);else{const e=i.ZSL.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){const e=this.gpgpu.gl;py(e,(()=>e.deleteBuffer(d)))}const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,i.Hi9)().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:o,isPacked:c,texture:l}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=c?new jv(r,zv):new _v(r,zv);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:o}],o),s=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),s}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),d=(0,i.Hi9)().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>i.ZSL.decodeString(e)));return(0,i.ra8)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,i.ra8)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!fy(n)){if((0,i._K2)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=i.ZSL.sizeFromShape(t);if((0,i._K2)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...uy(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=(0,i._K2)().getBool("WEBGL_PACK")&&!0===a,o=s?Ey(t):t,c=s?new hb(o):new db(o),l=this.runWebGLProgram(c,[{shape:o,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return(0,i._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=i.ZSL.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=i.ZSL.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,i._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);o.kernelMs=i.ZSL.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,i._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:i.ZSL.now(),endMs:null}}endTimer(e){return(0,i._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=i.ZSL.now(),e)}async getQueryTime(e){if((0,i._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:qv;return(0,i._K2)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&i.ZSL.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){i.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Kv(e.shape,t)}packedUnaryOp(e,t,n){const a=new jv(e.shape,t),r=this.compileAndRun(a,[e],n);return(0,i.Hi9)().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=ov(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,i._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Dv,e.dtype);const t=new _v(e.shape,Dv),n=this.compileAndRun(t,[e]);return(0,i.Hi9)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&i.ZSL.isString(n[0])){const r=n.map((e=>i.ZSL.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return(0,i.Hi9)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new Zv(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Tv(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Ny(e.shape),...Cy(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[Ny(t),...Cy(t)],s=new Iv(r,n),o=[n],i=this.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;if(null!=t){const e=i.ZSL.sizeFromShape(r),n=t[0]*t[1]*4;i.ZSL.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=Ey(r);let c;c=a?new ub(o):new lb(o);const l=[null!=t?t:uy(o)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(c,[{shape:o,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const o=this.makeTensorInfo(e.outputShape,n),c=this.texData.get(o.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===oy.DENSE){const t=null!=s?s:uy(e.outputShape);c.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(c.usage=e.outTexUsage),0===i.ZSL.sizeFromShape(o.shape))return c.values=i.ZSL.getTypedArrayFromDType(o.dtype,0),o;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&i.ZSL.sizeFromShape(t.shape)<=(0,i._K2)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!_y(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),l.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const d={shape:o.shape,texData:c,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:o,uniformShape:c,keptDims:l}=nb(e.packedInputs,t.shape,s);let u="",d="",h="";if(1===c.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==c.length||e.packedInputs){if(c.length>2&&!e.packedInputs){const e=i.ZSL.computeStrides(c);h="".concat(e[0]===s[1],"_").concat(e[e.length-1]===s[1])}}else d="".concat(c[0]>1,"_").concat(c[1]>1);const p=t.shape.length,f=2===c.length&&i.ZSL.arraysEqual(t.shape,s),m=1===i.ZSL.sizeFromShape(t.shape),g=i.backend_util.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&p===n.shape.length&&i.ZSL.arraysEqual(s,n.texData.texShape),b=e.packedInputs||c.length>2?"":"".concat(s[0]>1,"_").concat(s[1]>1);a+="".concat(p,"_").concat(y,"_").concat(o?l:"","_").concat(c.length,"_").concat(m,"_").concat(g,"_").concat(f,"_").concat(u,"_").concat(d,"_").concat(h,"_").concat(b,"_").concat(r)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(r)}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+"".concat((0,i._K2)().getNumber("WEBGL_VERSION")),s}(e,u,d),p=this.getAndSaveBinary(h,(()=>sb(this.gpgpu,e,u,d))),f=null!=this.activeTimers;let m;f&&(m=this.startTimer()),(0,i._K2)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(ib(t.inShapeInfos,n),ib([t.outShapeInfo],[a]));const s=a.texData.texture,o=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,o[0],o[1]):e.setOutputMatrixTexture(s.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,i._K2)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){const a=n[l],{uniform:r,offset:s,shape:o,texShape:c}=t.variablesLocations[l];if(o){const{uniformShape:n}=nb(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(c&&e.gl.uniform2i(c,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(i.ZSL.sizeFromShape(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,l)}const c=t.outShapeLocation;if(c)switch(a.shape.length){case 1:e.gl.uniform1iv(c,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(c,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(c,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(c,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=i.ZSL.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let i=0;i<t.program.customUniforms.length;++i){const n=t.program.customUniforms[i],a=t.customUniformLocations[i],s=r[i];if("float"===n.type)e.gl.uniform1fv(a,s);else if("vec2"===n.type)e.gl.uniform2fv(a,s);else if("vec3"===n.type)e.gl.uniform3fv(a,s);else if("vec4"===n.type)e.gl.uniform4fv(a,s);else if("int"===n.type)e.gl.uniform1iv(a,s);else if("ivec2"===n.type)e.gl.uniform2iv(a,s);else if("ivec3"===n.type)e.gl.uniform3iv(a,s);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,s)}}e.executeProgram()}(this.gpgpu,p,u,d,a),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=(0,i._K2)().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=i.ZSL.now();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,i._K2)().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&!1===r){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,i._K2)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,i.DZQ)((()=>{if(!(0,i._K2)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,i._K2)().getBool("DEBUG");(0,i._K2)().set("DEBUG",!1);const t=this.abs((0,i.d_2)(1e-8)).dataSync()[0];if((0,i._K2)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:o,isPacked:c}=t;if(null!=s)return;const l=null!=this.activeTimers;let u;l&&(u=i.ZSL.now());let d=t.texShape;if(null==d&&(d=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=(0,i._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=(0,i._K2)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&(0,i._K2)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?i.ZSL.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=i.ZSL.squeezeShape(e);e=t.newShape}let r=i.ZSL.sizeFromShape(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);const o=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||o)if(t){const t=Ny(e);let n=2,a=2;e.length&&([n,a]=Cy(e)),r=t*(n/2)*(a/2),s=i.ZSL.sizeToSquarishShape(r).map((e=>2*e))}else s=i.ZSL.sizeToSquarishShape(r);return s}(n,c),t.texShape=d),null!=r){const e=Ey(n);let s,o=d[1],h=d[0];const p=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!c&&p||([o,h]=dy(d[0],d[1])),s=c?new mb(e,p):new fb(e,p);const f=p?[h,o]:d,m=this.makeTensorInfo(f,a),g=this.texData.get(m.dataId);g.usage=p?iy.PIXELS:iy.UPLOAD,g.texShape=f,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),o,h,r);const y=[[h,o]],b=!0,v=this.runWebGLProgram(s,[m],a,y,b),x=this.texData.get(v.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,(0,i._K2)().get("ENGINE_COMPILE_ONLY")?this.disposeData(v.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(v.dataId)),this.disposeIntermediateTensorInfo(m),l&&(this.uploadWaitMs+=i.ZSL.now()-u)}else{const e=this.acquireTexture(d,o,a,c);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*i.ZSL.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,i.dA1)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw yy(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=ob(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:s,channels:o}=e,c=(0,i.Hi9)().backend;if(!c.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=c.writeTexture(a,t,n,r,s,o);return(0,i.Hi9)().makeTensorFromDataId(l,t,n,c)}}Yv.nextDataId=0;i.eMq.isBrowser()&&(0,i.gJX)("webgl",(()=>new Yv),2);const Qv="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Xv{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=i.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=cb(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const Jv="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class $v{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i.backend_util.assertAndGetBroadcastShape(t,n);const r=this.outputShape.length;this.enableShapeUniforms=cb(r);let s="";if(a)if(0===r||1===i.ZSL.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=tb(r);if(s="\n          ".concat(e," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=Sv("coords",r);this.enableShapeUniforms?s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function ex(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const tx={kernelName:i.lzr,backendName:"webgl",kernelFunc:ex};function nx(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(s.dataId),i=ex({inputs:{x:a},backend:n}),c=ex({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:c},s}const ax={kernelName:i.pr3,backendName:"webgl",kernelFunc:nx},rx="return (a < 0.) ? b * a : a;",sx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const ox={kernelName:i.X0$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,o=n.makeTensorInfo([],"float32",i.ZSL.createScalarValue(s,"float32")),c=(0,i._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $v(sx,r.shape,o.shape):new Xv(rx,r.shape,o.shape),l=n.runWebGLProgram(c,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),l}},ix="return (a < 0.) ? b * a : a;",cx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const lx={kernelName:i.Ncv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=(0,i._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $v(cx,a.shape,r.shape):new Xv(ix,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}},ux="if (isnan(x)) return x;";function dx(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:s,backend:o}=e;const{x:c}=s,l=o,u=r||c.dtype;if(l.shouldExecuteOnCPU([c])&&null!=a){const e=l.texData.get(c.dataId),t=a(e.values,u);return l.makeTensorInfo(c.shape,u,t)}let d;return d=(0,i._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new jv(c.shape,n):new _v(c.shape,t),l.runWebGLProgram(d,[c],u)}}function hx(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}=e;return e=>{let{inputs:c,backend:l}=e;const{a:u,b:d}=c,h=l;if(r&&"complex64"===u.dtype){const e=h.texData.get(u.dataId),n=h.texData.get(d.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:a.dataId,dtype:a.dtype,shape:d.shape},o=new Xv(t,u.shape,d.shape);return h.runWebGLProgram(o,[r,s],(0,i.TuY)(n.dtype,a.dtype))})),s=nx({inputs:{real:a,imag:r},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(r),s}const p=o||(0,i.TuY)(u.dtype,d.dtype);if(("string"===u.dtype||"string"===d.dtype||h.shouldExecuteOnCPU([u,d]))&&null!=s){const e=h.texData.get(u.dataId).values,t=h.texData.get(d.dataId).values,n="string"===u.dtype?i.backend_util.fromUint8ToStringArray(e):e,a="string"===u.dtype?i.backend_util.fromUint8ToStringArray(t):t,[r,o]=s(u.shape,d.shape,n,a,p),c=h.makeTensorInfo(o,p);return h.texData.get(c.dataId).values=r,c}let f;return f=(0,i._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new $v(n,u.shape,d.shape,a):new Xv(t,u.shape,d.shape),h.runWebGLProgram(f,[u,d],p)}}function px(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?Bv:Fv;if("relu"===e)return t?Uv:Lv;if("elu"===e)return t?Wv:Ov;if("relu6"===e)return t?Vv:Mv;if("prelu"===e)return t?cx:ix;if("leakyrelu"===e)return t?sx:rx;if("sigmoid"===e)return t?Gv:Pv;throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class fx{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=cb(this.outputShape.length);const l=a?e[1]:e[2],u=Math.ceil(l/2),d=a?"i * 2, rc.y":"rc.y, i * 2",h=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(v="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(v,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(d,");\n          vec4 b = getMatrixB(batchB, ").concat(h,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const mx={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class gx{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=i.backend_util.assertAndGetBroadcastShape(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const yx="return a * b;";function bx(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=i.backend_util.upcastType(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),s=new gx(mx.REAL,a.shape,r.shape),o=new gx(mx.IMAG,a.shape,r.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),u=nx({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[o,i]=Yb(a.shape,r.shape,e.values,t.values,s),c=n.makeTensorInfo(i,s);return n.texData.get(c.dataId).values=o,c}let o;return o=(0,i._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $v(yx,a.shape,r.shape):new Xv(yx,a.shape,r.shape),n.runWebGLProgram(o,[a,r],s)}const vx={kernelName:i.xu7,backendName:"webgl",kernelFunc:bx};function xx(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=n,c=i.ZSL.sizeFromShape(r.shape),l=i.ZSL.inferFromImplicitShape(s,c),u=i.ZSL.sizeFromShape(l);i.ZSL.assert(c===u,(()=>"The new shape (".concat(l,") has ").concat(u," elements and the old ")+"shape (".concat(r.shape,") has ").concat(c," elements. The new shape and old ")+"shape must have the same number of elements."));const d=o.texData.get(r.dataId);return!d.isPacked||_y(r.shape,l)||null!==d.texture&&_y(d.shape,l)?(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const a=[Ny(e.shape),...Cy(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[Ny(t),...Cy(t)],o=new Iv(s,a),i=[a],c=n.runWebGLProgram(o,[r],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(r,l,o)}const wx={kernelName:i.R23,backendName:"webgl",kernelFunc:xx};class kx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const o=4*Math.floor(n/4),c=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l="sumValue += dot(values * ".concat(i.ZSL.isInt(e)?e.toPrecision(2):e,", ones);")}let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(o,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(o,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(l,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class Sx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let d="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),h="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";r%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(d,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(2===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(3===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(d,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function Tx(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=i.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:c,outSize:l}=r[o];let u,d;u="mean"===n?0===o?new kx({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},i):new kx({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l}):new Sx({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},n),d=s,s=a.runWebGLProgram(u,[s],t),d.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(d)}return s}class Ix{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const a=tb(this.rank),r=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class Nx{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=tb(this.rank),r=kv("rc",this.rank),s=new Array(this.rank);for(let l=0;l<t.length;l++)s[t[l]]=r[l];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function Cx(e,t,n){const a=(0,i._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Nx(e.shape,t):new Ix(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function Ex(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;return function(e,t,n,a){const r=t,s=e.shape.length,o=i.ZSL.parseAxisParam(r,e.shape);let c=o;const l=i.backend_util.getAxesPermutation(c,s),u=null!=l;let d=e;u&&(d=Cx(e,l,a),c=i.backend_util.getInnerMostAxes(c.length,s)),i.backend_util.assertAxesAreInnerMostDims("sum",c,s);const[h,p]=i.backend_util.computeOutAndReduceShapes(d.shape,c);let f=h;n&&(f=i.backend_util.expandShapeToKeepDim(h,o));const m=i.ZSL.sizeFromShape(p),g=xx({inputs:{x:d},attrs:{shape:[i.ZSL.sizeFromShape(e.shape)/m,m]},backend:a}),y=Tx(g,(0,i.chL)(e.dtype),"sum",a),b=xx({inputs:{x:y},attrs:{shape:f},backend:a});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(y),u&&a.disposeIntermediateTensorInfo(d),b}(r,s,o,n)}const Ax={kernelName:i.WuN,backendName:"webgl",kernelFunc:Ex};function _x(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,o=n,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[s[u]];let l;if(o.shouldExecuteOnCPU([r])){const e=o.texData.get(r.dataId).values,t=xv(e,r.shape,r.dtype,s,c);l=o.makeTensorInfo(c,r.dtype);o.texData.get(l.dataId).values=t}else l=Cx(r,s,o);return l}const Rx={kernelName:i.wx0,backendName:"webgl",kernelFunc:_x},Fx=1e3;function Dx(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:s,bias:o=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:u=null}=e;const d=t.shape.length,h=n.shape.length,p=a?t.shape[d-2]:t.shape[d-1],f=r?n.shape[h-1]:n.shape[h-2],m=a?t.shape[d-1]:t.shape[d-2],g=r?n.shape[h-2]:n.shape[h-1],y=t.shape.slice(0,-2),b=n.shape.slice(0,-2),v=i.ZSL.sizeFromShape(y),x=i.ZSL.sizeFromShape(b),w=i.ZEY.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([m,g]);i.ZSL.assert(p===f,(()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(f,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const k=a?[v,p,m]:[v,m,p],S=r?[x,g,f]:[x,f,g],T=xx({inputs:{x:t},backend:s,attrs:{shape:k}}),I=xx({inputs:{x:n},backend:s,attrs:{shape:S}}),N=[T,I],C=Math.max(v,x),E=a?T.shape[1]:T.shape[2],A=null!=o,_=null!=c,R="leakyrelu"===u,F=null!=u?px(u,!0):null;let D;if((1===m||1===g)&&E>Fx&&!1===(A||_||R||null!=F)){let e=T,t=I;a&&(e=_x({inputs:{x:T},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=_x({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));const n=1===g;let o=e;1!==g&&(o=xx({inputs:{x:e},backend:s,attrs:{shape:[C,E,1]}}),N.push(o));const i=1===g?2:1;let c=t;n&&(c=xx({inputs:{x:t},backend:s,attrs:{shape:[C,1,E]}}),N.push(c));const l=bx({inputs:{a:o,b:c},backend:s});D=Ex({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),N.push(l)}else{const e=(0,i.TuY)(t.dtype,n.dtype),u=new fx(k,S,[C,m,g],a,r,A,F,_,R),d=[T,I];if(null!=o&&d.push(o),_&&d.push(c),R){const e=s.makeTensorInfo([],"float32",i.ZSL.createScalarValue(l,"float32"));d.push(e),N.push(e)}D=s.runWebGLProgram(u,d,e)}const O=xx({inputs:{x:D},backend:s,attrs:{shape:w}});N.push(D);for(const i of N)s.disposeIntermediateTensorInfo(i);return O}const Ox={kernelName:i.Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;return Dx({a:r,b:s,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}},Lx="return abs(x);";const Mx={kernelName:i.ljI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=ov(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=(0,i._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new jv(a.shape,Lx):new _v(a.shape,Lx),n.runWebGLProgram(r,[a],a.dtype)}},zx=dx({opSnippet:Rv+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Px={kernelName:i.Vvy,backendName:"webgl",kernelFunc:zx},Bx=dx({opSnippet:Rv+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Wx={kernelName:i.PH8,backendName:"webgl",kernelFunc:Bx},Ux="return a + b;",Vx=hx({opSnippet:Ux,packedOpSnippet:Ux,supportsComplex:!0,cpuKernelImpl:Cb}),Gx={kernelName:i.OMN,backendName:"webgl",kernelFunc:Vx};class jx{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class Zx{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const Kx={kernelName:i.EkD,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return ex({inputs:{x:r[0]},backend:a});if(r.length>(0,i._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>(0,i.TuY)(e,t))),o=r.map((e=>e.shape)),c=(0,i._K2)().getBool("WEBGL_PACK")?new Zx(r[0].shape,o):new jx(r[0].shape,o);return a.runWebGLProgram(c,r,s)}};const Hx={kernelName:i.u8Z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,c=r.shape.length,l=i.ZSL.parseAxisParam(s,r.shape);let u=l;const d=i.backend_util.getAxesPermutation(u,c);let h=r;null!=d&&(h=_x({inputs:{x:r},backend:n,attrs:{perm:d}}),u=i.backend_util.getInnerMostAxes(u.length,c)),i.backend_util.assertAxesAreInnerMostDims("all",u,c);const[p,f]=i.backend_util.computeOutAndReduceShapes(h.shape,u),m=xx({inputs:{x:h},backend:n,attrs:{shape:[-1,i.ZSL.sizeFromShape(f)]}}),g=Tx(m,m.dtype,"all",n);let y;if(o){y=xx({inputs:{x:g},backend:n,attrs:{shape:i.backend_util.expandShapeToKeepDim(p,l)}})}else y=xx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}};const qx={kernelName:i.FSt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,c=r.shape.length,l=i.ZSL.parseAxisParam(s,r.shape);let u=l;const d=i.backend_util.getAxesPermutation(u,c);let h=r;null!=d&&(h=_x({inputs:{x:r},backend:n,attrs:{perm:d}}),u=i.backend_util.getInnerMostAxes(u.length,c)),i.backend_util.assertAxesAreInnerMostDims("any",u,c);const[p,f]=i.backend_util.computeOutAndReduceShapes(h.shape,u),m=xx({inputs:{x:h},backend:n,attrs:{shape:[-1,i.ZSL.sizeFromShape(f)]}}),g=Tx(m,m.dtype,"any",n);let y;if(o){y=xx({inputs:{x:g},backend:n,attrs:{shape:i.backend_util.expandShapeToKeepDim(p,l)}})}else y=xx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}};class Yx{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class Qx{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,i.ZSL.assert(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,c=o.length,l=tb(c),u=Sv("coords",c);let d,h;if(1===s){h=c+1;const e=tb(h);d="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(u.join(),", 0);\n        ++").concat(u[c-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(u.join(),", 0);\n        ++").concat(u[c-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(u.join(),", 0);\n        --").concat(u[c-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(u.join(),", 0);\n        --").concat(u[c-2],";")}else h=c,d="\n        ".concat(l," sourceLocR = coords;\n        ++").concat(u[c-1],";\n        ").concat(l," sourceLocG = coords;\n        ++").concat(u[c-2],";\n        ").concat(l," sourceLocA = coords;\n        --").concat(u[c-1],";\n        ").concat(l," sourceLocB = coords;\n        --").concat(u[c-2],";");const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map((e=>"int "+e)),g=Sv("sourceLocR",h-1).concat("inIdx.r"),y=Sv("sourceLocG",h-1).concat("inIdx.g"),b=Sv("sourceLocB",h-1).concat("inIdx.b"),v=Sv("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),"),\n                             getBestIndicesAChannel(").concat(v.join(),")));"),k="vec4(\n            getAChannel(".concat(g.join(),"),\n            hasNextCol ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(b.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(v.join(),") : 0.)"),S=a?"":"\n      float getBestIndicesAChannel(".concat(m.join(),") {\n        return getChannel(getBestIndicesA(").concat(p.join(),"),\n                                          vec2(").concat(p.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(m.join(),") {\n        return getChannel(getA(").concat(p.join(),"),\n                               vec2(").concat(p.slice(-2).join(),"));\n      }\n      ").concat(S,"\n      void main() {\n        ").concat(l," coords = getOutputCoords();\n        bool hasNextCol = ").concat(u[c-1]," < ").concat(o[c-1]-1,";\n        bool hasNextRow = ").concat(u[c-2]," < ").concat(o[c-2]-1,";\n        ").concat(d,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(f,", sourceLocG").concat(f,",\n          sourceLocB").concat(f,", sourceLocA").concat(f,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(k,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(w,"\n          vec4 candidate = ").concat(k,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(x,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function Xx(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const o=i.backend_util.computeOptimalWindowSize(s),c={windowSize:o,inSize:s,batchSize:r,outSize:Math.ceil(s/o)},l=new Yx(c,n,null==a),u=[t];null!=a&&u.push(a);const d=e.runWebGLProgram(l,u,"int32");if(1===d.shape[1])return d;const h=Xx(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function Jx(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,s=r[r.length-1],o=i.backend_util.computeOptimalWindowSize(s),c=new Qx(r,o,n,null==a),l=null==a?[t]:[t,a],u=e.runWebGLProgram(c,l,"int32");if(u.shape.length===t.shape.length){const a=Jx(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function $x(e,t,n,a){const r=[n];if(i.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!(0,i._K2)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let o=t;null!==s&&s.isPacked&&(o=e.unpackTensor(t),n.push(o));const[c,l]=i.backend_util.computeOutAndReduceShapes(o.shape,r),u=i.ZSL.sizeFromShape(l),d=xx({inputs:{x:o},backend:e,attrs:{shape:[-1,u]}});n.push(d);const h=Xx(e,d,a);n.push(h);const p=xx({inputs:{x:h},backend:e,attrs:{shape:c}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return Jx(e,t,a)}const ew={kernelName:i.Jp_,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=i.ZSL.parseAxisParam(s,r.shape);const c=i.backend_util.getAxesPermutation(o,r.shape.length);let l=r;const u=[];null!=c&&(l=_x({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),o=i.backend_util.getInnerMostAxes(o.length,l.shape.length)),i.backend_util.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);const d=$x(n,l,o[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const tw={kernelName:i.p_m,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=i.ZSL.parseAxisParam(s,r.shape);const c=i.backend_util.getAxesPermutation(o,r.shape.length);let l=r;const u=[];null!=c&&(l=_x({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),o=i.backend_util.getInnerMostAxes(o.length,l.shape.length)),i.backend_util.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);const d=$x(n,l,o[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},nw=dx({opSnippet:Rv+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),aw={kernelName:i.QKF,backendName:"webgl",kernelFunc:nw},rw=dx({opSnippet:Rv+"return log(x + sqrt(x * x + 1.0));"}),sw={kernelName:i.epO,backendName:"webgl",kernelFunc:rw},ow=dx({opSnippet:Rv+"\n  return atan(x);\n"}),iw={kernelName:i.TyE,backendName:"webgl",kernelFunc:ow},cw=hx({opSnippet:Qv+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Jv+"\n  return result;\n"}),lw={kernelName:i.lxb,backendName:"webgl",kernelFunc:cw},uw=dx({opSnippet:Rv+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),dw={kernelName:i.zP9,backendName:"webgl",kernelFunc:uw};class hw{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),g="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(d," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(b="avgValue / max(count, 1.0)");const v=4*Math.floor(s/4),x=s%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(v,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(v,";\n          if (").concat(1===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class pw{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(h,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(d,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let x="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),k=s%4,S="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(v,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(v,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(h,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(d,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(d,", ch)\n              );\n\n              ").concat(S,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                initializationValue\n              );\n\n              ").concat(S,"\n            }\n          }\n        }\n        setOutput(").concat(x,");\n      }\n    ")}}const fw={kernelName:i.ho8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;zy(r,"avgPool");const{filterSize:s,strides:o,pad:c,dimRoundingMode:l}=a;i.ZSL.assert(i.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const u=i.backend_util.computePool2DInfo(r.shape,s,o,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&i.ZSL.arraysEqual(u.inShape,u.outShape))return ex({inputs:{x:r},backend:n});const d=new hw(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}};const mw={kernelName:i.cS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:c,dimRoundingMode:l,dataFormat:u}=a,d=i.backend_util.computePool3DInfo(r.shape,s,o,[1,1,1],c,l,u),h=new pw(d,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class gw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.top,u=c-1-e.padInfo.left,d=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(d,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class yw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(d,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const bw={kernelName:i.wwC,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=i.backend_util.computePool3DInfo(o.shape,c,l,[1,1,1],u,d),p=new yw(h);return n.runWebGLProgram(p,[r],o.dtype)}};const vw={kernelName:i.VCH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;zy([r,s],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=a,d=i.backend_util.computePool2DInfo(o.shape,c,l,1,u),h=new gw(d);return n.runWebGLProgram(h,[r],o.dtype)}};const xw={kernelName:i.jAQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;return Dx({a:r,b:s,transposeA:o,transposeB:i,backend:n})}};class ww{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],i.backend_util.assertAndGetBroadcastShape(e,t),i.backend_util.assertAndGetBroadcastShape(e,n);let o="0.0";null!=a&&(i.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let c="1.0";null!=r&&(i.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(o,";\n        float scale = ").concat(c,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class kw{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],i.backend_util.assertAndGetBroadcastShape(e,t),i.backend_util.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=a&&(i.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let c="vec4(1.0)";null!=r&&(i.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(o,";\n        vec4 scale = ").concat(c,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const Sw={kernelName:i.i5R,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:s,variance:o,offset:c,scale:l}=t;i.ZSL.assert(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.ZSL.assert(null==c||s.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.ZSL.assert(null==l||s.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=a;null==u&&(u=.001);const d=[r,s,o];let h=null;null!=c&&(h=c.shape,d.push(c));let p=null;null!=l&&(p=l.shape,d.push(l));const f=(0,i._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new kw(r.shape,s.shape,o.shape,h,p,u):new ww(r.shape,s.shape,o.shape,h,p,u);return n.runWebGLProgram(f,d,d[0].dtype)}};class Tw{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=tb(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Iw.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const r=e.map(((e,t)=>"sourceLoc.".concat(Iw[t]," = start[").concat(t,"] + coords.").concat(Iw[t],";")));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const Iw=["x","y","z","w","u","v"];class Nw{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=tb(this.rank),n=Sv("coords",this.rank),a=Sv("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),s="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function Cw(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a,[c,l]=i.Kro.parseSliceParams(r,s,o);if(i.Kro.assertParamsValid(r,c,l),0===i.ZSL.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=iv(e.values,c,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),d=i.Kro.isSliceContinous(r.shape,c,l);if(u||!d){const e=(0,i._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Nw(l):new Tw(l),t=[c];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),o=a.texData.get(s.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let c=i.Kro.computeFlatOffset(t,i.ZSL.computeStrides(e.shape));r.slice&&(c+=r.slice.flatOffset),o.slice={flatOffset:c,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=a.dataRefCount.get(o.slice.origDataId)||1;return a.dataRefCount.set(o.slice.origDataId,l+1),s}(r,c,l,n)}const Ew={kernelName:i.JiE,backendName:"webgl",kernelFunc:Cw},Aw={kernelName:i.Ik2,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;i.ZSL.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const c=s.reduce(((e,t)=>e*t)),l=i.backend_util.getReshaped(r.shape,s,c),u=i.backend_util.getPermuted(l.length,s.length),d=i.backend_util.getReshapedPermuted(r.shape,s,c),h=i.backend_util.getSliceBeginCoords(o,s.length),p=i.backend_util.getSliceSize(d,o,s.length),f=[],m=xx({inputs:{x:r},backend:n,attrs:{shape:l}}),g=_x({inputs:{x:m},backend:n,attrs:{perm:u}}),y=xx({inputs:{x:g},backend:n,attrs:{shape:d}}),b=Cw({inputs:{x:y},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const _w={kernelName:i.N4F,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=n.readSync(r.dataId),c=n.readSync(s.dataId),l=Eb(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}};const Rw={kernelName:i.HNs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=(0,i._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=(0,i._K2)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===o){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[s,o]=_b(a.shape,r.shape,e,t,a.dtype),i=n.makeTensorInfo(o,a.dtype);return n.texData.get(i.dataId).values=s,i}let c;return c=s?new $v("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new Xv("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(c,[a,r],a.dtype)}};const Fw={kernelName:i.vj7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),o=n.readSync(r.dataId),c=i.backend_util.assertAndGetBroadcastShape(Array.from(s),Array.from(o));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},Dw=hx({opSnippet:"return float(a != b);",cpuKernelImpl:Xb,dtype:"bool"}),Ow={kernelName:i.ylV,backendName:"webgl",kernelFunc:Dw};function Lw(e){const{inputs:t,backend:n}=e,{input:a}=t;return ex({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const Mw={kernelName:i.LRy,backendName:"webgl",kernelFunc:Lw},zw="return float(int(x));";const Pw={kernelName:i.KXH,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return ex({inputs:{x:s},backend:a});const t=i.Ul9(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=nx({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=Lw({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:o}});return a.disposeIntermediateTensorInfo(t),n}if(!i.ZSL.hasEncodingLoss(s.dtype,o)){const e=ex({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,[t,n,r]=Rb(e,s.shape,s.dtype,o);return a.makeTensorInfo(t,n,r)}if("int32"===o)return function(e,t){const n=new _v(e.shape,zw),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===o){const e=a.makeTensorInfo([],"bool",i.ZSL.getTypedArrayFromDType("bool",1)),t=Dw({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(o))}},Bw="return ceil(x);",Ww=dx({opSnippet:Bw,packedOpSnippet:Bw,cpuKernelImpl:Fb}),Uw={kernelName:i.QDP,backendName:"webgl",kernelFunc:Ww};class Vw{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Gw{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const jw={kernelName:i.vaV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:o}=a;let c;c=(0,i._K2)().getBool("WEBGL_PACK_CLIP")?new Gw(r.shape):new Vw(r.shape);const l=[[s],[o]];return n.runWebGLProgram(c,[r],r.dtype,l)}};class Zw{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Kw(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Hw={kernelName:i.$zE,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new Zw(a.shape),o=[Kw(a,r.complexTensorInfos.real),Kw(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class qw{constructor(e){this.outputShape=[],this.outputShape=i.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let s=1;s<t.length;s++){const e=t[s-1];n.push("else if (yC < ".concat(t[s],") ")+"setOutput(getT".concat(s,"(yR, yC-").concat(e,"));"))}const a=t.length,r=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class Yw{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=i.backend_util.computeOutShape(e,t);const n=this.outputShape,a=n.length,r=tb(a),s=Sv("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>"T".concat(t)));const c=new Array(e.length-1);c[0]=e[0][t];for(let i=1;i<c.length;i++)c[i]=c[i-1]+e[i][t];const l=o[t],u=o.slice(-2),d=o.join();let h="if (".concat(l," < ").concat(c[0],") {\n        return getChannel(\n            getT0(").concat(d,"), vec2(").concat(u.join(),"));\n        }");for(let i=1;i<c.length;i++){const e=c[i-1];h+="\n        if (".concat(l," < ").concat(c[i],"  && ").concat(l," >= ").concat(c[i-1],") {\n          return getChannel(\n            getT").concat(i,"(").concat(Qw(o,l,e),"),\n            vec2(").concat(Qw(u,l,e),"));\n        }")}const p=c.length,f=c[c.length-1];h+="\n        return getChannel(\n          getT".concat(p,"(").concat(Qw(o,l,f),"),\n          vec2(").concat(Qw(u,l,f),"));"),this.userCode="\n      float getValue(".concat(o.map((e=>"int "+e)),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," + 1;\n        if (").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-2]," = ").concat(s[a-2]," + 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," - 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2]," &&\n            ").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function Qw(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?"".concat(e," - ").concat(n):e)).join()}function Xw(e){const{inputs:t,backend:n}=e,{input:a}=t;return ex({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const Jw={kernelName:i.dv8,backendName:"webgl",kernelFunc:Xw};function $w(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>Lw({inputs:{input:e},backend:n}))),r=e.map((e=>Xw({inputs:{input:e},backend:n}))),s=$w(a,t,n),o=$w(r,t,n),i=nx({inputs:{real:s,imag:o},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=i.ZSL.sizeFromShape(e.shape.slice(t));return xx({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=i.backend_util.computeOutShape(r.map((e=>e.shape)),1),c=1===r[0].shape[0],l=Db(s,o,a,c),u=i.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,a,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const s=e.filter((e=>i.ZSL.sizeFromShape(e.shape)>0)),o=(0,i._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const t=o?new _v(e[0].shape,zv):new jv(e[0].shape,zv);return n.runWebGLProgram(t,e,a)}const c=(0,i._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>c){const e=[];for(let r=0;r<s.length;r+=c){const a=s.slice(r,r+c);e.push($w(a,t,n))}const a=$w(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(o){const e=new Yw(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}const{tensors2D:l,outShape:u}=function(e,t,n){const a=i.backend_util.computeOutShape(e.map((e=>e.shape)),t),r=e.map((e=>xx({inputs:{x:e},attrs:{shape:[-1,i.ZSL.sizeFromShape(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:a}}(s,t,n),d=new qw(l.map((e=>e.shape))),h=n.runWebGLProgram(d,l,a);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=xx({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),p}function ek(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=i.ZSL.parseAxisParam(r,t[0].shape)[0],o=t.map((e=>e.shape));i.backend_util.assertParamsConsistent(o,s);const c=i.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===i.ZSL.sizeFromShape(c))return n.makeTensorInfo(c,t[0].dtype,[]);const l=t.filter((e=>i.ZSL.sizeFromShape(e.shape)>0));return 1===l.length?ex({inputs:{x:l[0]},backend:n}):$w(l,s,n)}const tk={kernelName:i.$dB,backendName:"webgl",kernelFunc:ek};class nk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let v="",x="";n&&(v=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(v,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(d,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(h,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(x,"\n        setOutput(result);\n      }\n    ")}}class ak{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class rk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=cb(this.outputShape.length);const s=e.padInfo.left,o=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let i=0;i<u;i++)h+="\n           vec4 xTexelC".concat(2*i,";\n           int xTexelC").concat(2*i,"Ready;\n           vec4 xTexelC").concat(2*i+1,";\n           int xTexelC").concat(2*i+1,"Ready;\n           vec4 xC").concat(i,";");h+="\n     for (int r = 0; r < ".concat(l,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let i=0;i<u;i++)h+="\n           xTexelC".concat(2*i," = vec4(0.0);\n           xTexelC").concat(2*i,"Ready = 0;\n           xTexelC").concat(2*i+1," = vec4(0.0);\n           xTexelC").concat(2*i+1,"Ready = 0;\n           xC").concat(i," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let g=0;g<(d+1)/2;g++){const t=2*g;if(h+="\n           xC = xCCorner + ".concat(t*c,";\n           "),1===o){if(t<u&&(s%2===1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),h+=1===c&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<u)){const e=s%2===0?i.ZSL.nearestLargerEven(c):c;c%2===0&&s%2===1||c%2!==0&&s%2!==1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),h+=c>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):h+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<u&&(s%2===1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<u&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<u&&(h+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<u&&(h+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<u&&(h+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(p,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(m,"\n         ").concat(f,"\n         setOutput(result);\n       }\n     ")}}class sk{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=cb(this.outputShape.length);const{dataFormat:n}=t,a=By(),r="channelsLast"===n,s=r?1:2,o=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(s,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function ok(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function ik(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=t.shape,d=r.texData.get(t.dataId),h=a.inChannels,p=u[0]*u[1]*u[2],f=a.outChannels,m="channelsLast"===a.dataFormat,g=!1;let y;const b=[];if(null!=o){const e=ok(o.shape,m);null!=e&&(o=xx({inputs:{x:o},backend:r,attrs:{shape:e}}),b.push(o))}if(null!=s){const e=ok(s.shape,m);null!=e&&(s=xx({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}if(!((1===p||1===f)&&h>Fx)&&d.isPacked&&m&&null!=d.texture&&u[2]%2!==0&&i.ZSL.arraysEqual(d.shape.slice(-3),u.slice(-3))){const e=u[0]*u[1]*(u[2]+1),h={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},p=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,i.ZSL.assert(_y(d.shape,h.shape),(()=>"packed reshape ".concat(d.shape," to ").concat(h.shape," isn't free")));const f=xx({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});b.push(f);const m=Dx({a:h,b:f,backend:r,transposeA:false,transposeB:g,bias:s,activation:l,preluActivationWeights:o,leakyreluAlpha:c}),v=r.texData.get(m.dataId);i.ZSL.assert(v.isPacked,(()=>"batchMatMul result is expected to be packed")),d.shape=p,v.shape=a.outShape,y=ex({inputs:{x:m},backend:r}),y.shape=a.outShape,b.push(m)}else{const e=a.outHeight*a.outWidth,i=xx({inputs:{x:t},backend:r,attrs:{shape:m?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),u=xx({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),d=Dx({a:m?i:u,b:m?u:i,transposeA:!m,transposeB:g,backend:r,bias:s,activation:l,preluActivationWeights:o,leakyreluAlpha:c});y=xx({inputs:{x:d},backend:r,attrs:{shape:a.outShape}}),b.push(i),b.push(u),b.push(d)}for(const i of b)r.disposeIntermediateTensorInfo(i);return y}function ck(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:c=0,activation:l=null}=e;const{filterWidth:u,filterHeight:d,inChannels:h,outWidth:p,outHeight:f,dataFormat:m}=a,g="channelsLast"===m,y=u*d*h,b=f*p,v=[a.batchSize,y,b],x=[];if(null!=o){const e=ok(o.shape,g);null!=e&&(o=xx({inputs:{x:o},backend:r,attrs:{shape:e}}),x.push(o))}if(null!=s){const e=ok(s.shape,g);null!=e&&(s=xx({inputs:{x:s},backend:r,attrs:{shape:e}}),x.push(s))}const w=xx({inputs:{x:n},backend:r,attrs:{shape:[1,y,i.ZSL.sizeFromShape(n.shape)/y]}});x.push(w);const k=new sk(v,a),S=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],T=r.runWebGLProgram(k,[t],"float32",S),I=xx({inputs:{x:T},backend:r,attrs:{shape:v}});x.push(T),x.push(I);const N=null!=s,C=null!=o,E="leakyrelu"===l,A=l?px(l,!0):null,_=new fx(g?I.shape:w.shape,g?w.shape:I.shape,g?[a.batchSize,b,a.outChannels]:[a.batchSize,a.outChannels,b],!0,!1,N,A,C,E),R=g?[I,w]:[w,I];if(s&&R.push(s),C&&R.push(o),E){const e=r.makeTensorInfo([],"float32",i.ZSL.createScalarValue(c,"float32"));R.push(e),x.push(e)}const F=r.runWebGLProgram(_,R,"float32"),D=xx({inputs:{x:F},backend:r,attrs:{shape:a.outShape}});x.push(F);for(const i of x)r.disposeIntermediateTensorInfo(i);return D}const lk={kernelName:i.p2J,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:c,dataFormat:l,dilations:u,dimRoundingMode:d}=a,h=i.backend_util.convertConv2DDataFormat(l),p=i.backend_util.computeConv2DInfo(r.shape,s.shape,o,u,c,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&(0,i._K2)().getBool("WEBGL_EXP_CONV")){const e=new rk(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=n.runWebGLProgram(e,[r,s],"float32",t)}else if((0,i._K2)().getBool("WEBGL_CONV_IM2COL"))f=ck({x:r,filter:s,convInfo:p,backend:n});else{const e=new nk(p);f=n.runWebGLProgram(e,[r,s],"float32")}else f=ik({x:r,filter:s,convInfo:p,backend:n});const m=xx({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class uk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class dk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=s?1:2,l=s?2:3,u=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class hk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class pk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const fk={kernelName:i.rFm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:d}=a,h=i.backend_util.convertConv2DDataFormat(l),p=i.backend_util.computeConv2DInfo(r.shape,d,o,1,c,u,!1,h),f=new uk(p);return n.runWebGLProgram(f,[r,s],"float32")}};class mk{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=cb(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const gk={kernelName:i.jfg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:c,pad:l,dataFormat:u,dimRoundingMode:d}=a,h=i.backend_util.convertConv2DDataFormat(u),p=i.backend_util.computeConv2DInfo(o,s.shape,c,1,l,d,!1,h);if((0,i._K2)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[p.strideHeight,p.strideWidth]],t=new mk(p);return n.runWebGLProgram(t,[r,s],"float32",e)}{const e=new dk(p);return n.runWebGLProgram(e,[r,s],"float32")}}};const yk={kernelName:i.A1h,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:c,dilations:l}=a,u=i.backend_util.computeConv3DInfo(r.shape,s.shape,o,l,c),d=new ak(u);return n.runWebGLProgram(d,[r,s],"float32")}};const bk={kernelName:i.iGz,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:c,filterShape:l}=a,u=i.backend_util.computeConv3DInfo(r.shape,l,o,1,c),d=new hk(u);return n.runWebGLProgram(d,[r,s],"float32")}};const vk={kernelName:i.gC7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:c,inputShape:l}=a,u=i.backend_util.computeConv3DInfo(l,s.shape,c,1,o),d=new pk(u);return n.runWebGLProgram(d,[r,s],"float32")}},xk=dx({opSnippet:ux+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Jv,"\n  return result;\n")}),wk={kernelName:i.Mn0,backendName:"webgl",kernelFunc:xk},kk=dx({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Sk={kernelName:i.MnK,backendName:"webgl",kernelFunc:kk};class Tk{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,c]=e,[l]=t,[u,d]=n;this.outputShape=[l,u,d,c];const h="bilinear"===a?1:0,[p,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,g,y]=u>1?["".concat((o-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[b,v,x]=d>1?["".concat((i-1)/(d-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(v,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(x,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(h," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const Ik={kernelName:i.MRQ,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=a,u=new Tk(r.shape,s.shape,i,c,l);return n.runWebGLProgram(u,[r,s,o],"float32")}};var Nk;!function(e){e.Prod="*",e.Sum="+"}(Nk||(Nk={}));class Ck{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,s=this.op===Nk.Prod?"1.0":"0.0",o=n?s:"getX(".concat(Ek(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(tb(r)," coords = getOutputCoords();\n        int end = ").concat(Ak(r,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(Ak(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(Ek(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function Ek(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function Ak(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function _k(e,t,n,a,r,s){const o=t.shape.length,c=i.backend_util.getAxesPermutation([a],o);let l=t;null!=c&&(l=_x({inputs:{x:t},backend:n,attrs:{perm:c}}));const u=i.backend_util.getInnerMostAxes(1,o)[0];if(u!==o-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const d=l.shape[u];let h=ex({inputs:{x:l},backend:n});for(let i=0;i<=Math.ceil(Math.log2(d))-1;i++){const t=new Ck(e,l.shape,!1,s),a=[[i]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new Ck(e,l.shape,r,s),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=c){const e=_x({inputs:{x:h},backend:n,attrs:{perm:i.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const Rk={kernelName:i.jj_,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return _k(Nk.Prod,r,n,s,o,i)}};const Fk={kernelName:i.nY8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return _k(Nk.Sum,r,n,s,o,i)}};const Dk={kernelName:i.wNW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=Eb(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=Ab(e,t,o,i);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class Ok{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Lk={kernelName:i.TMz,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a,i=r.shape[0],c=("NHWC"===o?r.shape[1]:r.shape[2])*s,l=("NHWC"===o?r.shape[2]:r.shape[3])*s,u=("NHWC"===o?r.shape[3]:r.shape[1])/(s*s),d=new Ok("NHWC"===o?[i,c,l,u]:[i,u,c,l],s,o);return n.runWebGLProgram(d,[r],r.dtype)}};class Mk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=cb(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(s,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class zk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=cb(this.outputShape.length);const s=e.outChannels/e.inChannels,o=e.padInfo.left,c=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,h=d;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let i=0;i<d;i++)p+="\n          vec4 xTexelC".concat(2*i,";\n          int xTexelC").concat(2*i,"Ready;\n          vec4 xTexelC").concat(2*i+1,";\n          int xTexelC").concat(2*i+1,"Ready;\n          vec4 xC").concat(i,";");p+="\n    for (int r = 0; r < ".concat(u,"; r++) {\n      ");for(let i=0;i<d;i++)p+="\n          xTexelC".concat(2*i," = vec4(0.0);\n          xTexelC").concat(2*i,"Ready = 0;\n          xTexelC").concat(2*i+1," = vec4(0.0);\n          xTexelC").concat(2*i+1,"Ready = 0;\n          xC").concat(i," = vec4(0.0);");p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(h+1)/2;y++){const e=2*y;if(p+="\n          xC = xCCorner + ".concat(e*l,";\n          "),1===c){if(e<d&&(o%2===1?(p+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),p+=1===l&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):p+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<d)){const t=o%2===0?i.ZSL.nearestLargerEven(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(p+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),p+=l>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):p+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<d&&(o%2===1?(p+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<d&&(p+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(p+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<d&&(p+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<d&&(p+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<d&&(p+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(f,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(s,";\n        int q = d2 - d1 * ").concat(s,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(p,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(g,"\n        ").concat(m,"\n        setOutput(result);\n      }\n    ")}}const Pk={kernelName:i.tGH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:c,dilations:l,dimRoundingMode:u}=a;let d=l;null==d&&(d=[1,1]),i.ZSL.assert(i.backend_util.eitherStridesOrDilationsAreOne(o,d),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(d,"'")));const h=i.backend_util.computeConv2DInfo(r.shape,s.shape,o,d,c,u,!0);let p;p=(0,i._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new zk(h):new Mk(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[r,s],"float32",f)}};class Bk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Wk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Uk={kernelName:i.X$8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:c,pad:l,dimRoundingMode:u,filterShape:d}=a,h=i.backend_util.computeConv2DInfo(r.shape,d,o,c,l,u,!0),p=new Bk(h);return n.runWebGLProgram(p,[r,s],"float32")}};const Vk={kernelName:i.nVu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:c,pad:l,dimRoundingMode:u,inputShape:d}=a,h=i.backend_util.computeConv2DInfo(d,s.shape,o,c,l,u,!0),p=new Wk(h);return n.runWebGLProgram(p,[r,s],"float32")}};class Gk{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const jk={kernelName:i.ORI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=i.ZSL.sizeFromShape(a.shape),o=xx({inputs:{x:a},backend:n,attrs:{shape:[s]}}),c=new Gk(s),l=n.runWebGLProgram(c,[o],o.dtype),u=xx({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}};class Zk{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=e,{top:u,left:d}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(d,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const Kk={kernelName:i.jxD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:c,dilations:l}=a,u=i.backend_util.computeDilation2DInfo(r.shape,s.shape,o,c,"NHWC",l);let d;const h=new Zk(u);d=n.runWebGLProgram(h,[r,s],"float32");const p=xx({inputs:{x:d},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(d),p}};const Hk={kernelName:i.Qgm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:c,idDims:l}=i.backend_util.decodeEinsumEquation(r,s.length);i.backend_util.checkEinsumDimSizes(o.length,l,s);const{path:u,steps:d}=i.backend_util.getEinsumComputePath(c,l),h=d.length;let p=null,f=o.length;const m=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:a}=i.backend_util.getEinsumPermutation(f,l[e]);let r;i.backend_util.isIdentityPermutation(t)?r=s[e]:(r=_x({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),m.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);i.ZSL.arraysEqual(r.shape,o)||(r=xx({inputs:{x:r},backend:n,attrs:{shape:o}}),m.push(r)),null===p?p=r:(p=bx({inputs:{a:r,b:p},backend:n}),m.push(p))}g<h-1&&(u[g]>=0&&(p=Ex({inputs:{x:p},backend:n,attrs:{axis:u[g]-(o.length-f),keepDims:!1}}),m.push(p)),f--)}for(const i of m)i!==p&&n.disposeIntermediateTensorInfo(i);return p}},qk=dx({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Yk={kernelName:i.Pah,backendName:"webgl",kernelFunc:qk},Qk={kernelName:i.rsH,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=(0,i._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $v("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new Xv("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},Xk=hx({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Ob}),Jk={kernelName:i.BRl,backendName:"webgl",kernelFunc:Xk},$k=dx({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(i.backend_util.ERF_P,";\n  float a1 = ").concat(i.backend_util.ERF_A1,";\n  float a2 = ").concat(i.backend_util.ERF_A2,";\n  float a3 = ").concat(i.backend_util.ERF_A3,";\n  float a4 = ").concat(i.backend_util.ERF_A4,";\n  float a5 = ").concat(i.backend_util.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),eS={kernelName:i._s9,backendName:"webgl",kernelFunc:$k},tS=dx({opSnippet:ux+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Lb,dtype:"float32"}),nS={kernelName:i.ox3,backendName:"webgl",kernelFunc:tS};function aS(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,o=s.shape.length,c=s.shape.slice();let l=r;return r<0&&(i.ZSL.assert(-(o+1)<=r,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),l=o+r+1),c.splice(l,0,1),xx({inputs:{x:s},backend:a,attrs:{shape:c}})}const rS={kernelName:i.ybN,backendName:"webgl",kernelFunc:aS},sS="return exp(x) - 1.0;",oS=dx({opSnippet:sS,packedOpSnippet:sS,cpuKernelImpl:Mb}),iS={kernelName:i.ybj,backendName:"webgl",kernelFunc:oS};class cS{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(a,".0"):"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function lS(e,t,n){const a=n.texData.get(e.dataId),r=i.ZSL.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],o=xx({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),c=o.shape,l=new cS("real",c,t),u=new cS("imag",c,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:c},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:c}],h=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(u,d,"float32"),f=nx({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=xx({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const uS={kernelName:i.rGP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return lS(a,!1,n)}};class dS{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function hS(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||i.ZSL.inferDtype(r),"string"===s){const e=i.ZSL.getArrayFromDType(s,i.ZSL.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new dS(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}const pS={kernelName:i.SQl,backendName:"webgl",kernelFunc:hS};class fS{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const mS={kernelName:i.BxF,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,s=new fS(a.shape);return r.runWebGLProgram(s,[a],a.dtype)}},gS="return floor(x);",yS=dx({opSnippet:gS,packedOpSnippet:gS,cpuKernelImpl:zb}),bS={kernelName:i.ZgB,backendName:"webgl",kernelFunc:yS},vS=hx({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),xS={kernelName:i.ElG,backendName:"webgl",kernelFunc:vS};class wS{constructor(e){this.variableNames=["A"];const t=By(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class kS{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=By(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const SS={kernelName:i.awo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,o="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,c="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[u,l],h=[u,l,s];if(c||o){const e=(0,i._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=TS&&e===IS||(IS=e,TS=document.createElement("canvas").getContext("2d",{willReadFrequently:IS})),TS.canvas.width=l,TS.canvas.height=u,TS.drawImage(r,0,0,l,u),r=TS.canvas}const p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=iy.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const f=(0,i._K2)().getBool("WEBGL_PACK")?new kS(h):new wS(h),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let TS,IS=(0,i._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const NS={kernelName:i.aAr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:c}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=a,g=i.backend_util.convertConv2DDataFormat(d),y=i.backend_util.computeConv2DInfo(r.shape,s.shape,l,h,u,p,!1,g);let b;const v=[],x=null!=o,w=null!=c,k="leakyrelu"===f,S=()=>{const e=[r,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=xx({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return v.push(t),t}return e};if(x&&e.push(t(o,d)),w&&e.push(t(c,d)),k){const t=n.makeTensorInfo([],"float32",i.ZSL.createScalarValue(m,"float32"));e.push(t),v.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&(0,i._K2)().getBool("WEBGL_EXP_CONV")){const e=f?px(f,!0):null,t=new rk(y,x,e,w,k),a=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],r=S();b=n.runWebGLProgram(t,r,"float32",a)}else if((0,i._K2)().getBool("WEBGL_CONV_IM2COL"))b=ck({x:r,filter:s,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:c,leakyreluAlpha:m});else{const e=f?px(f,!1):null,t=new nk(y,x,e,w,k),a=S();b=n.runWebGLProgram(t,a,"float32")}else b=ik({x:r,filter:s,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:c,leakyreluAlpha:m});const T=xx({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return v.push(b),v.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};const CS={kernelName:i.T7M,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:c}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a,m=[];let g=d;null==g&&(g=[1,1]),i.ZSL.assert(i.backend_util.eitherStridesOrDilationsAreOne(l,g),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(l," and dilations '").concat(g,"'")));const y=i.backend_util.computeConv2DInfo(r.shape,s.shape,l,g,u,h,!0),b=(0,i._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,v=p?px(p,b):null,x=[r,s],w=null!=o,k=null!=c,S="leakyrelu"===p;if(w&&x.push(o),k&&x.push(c),S){const e=n.makeTensorInfo([],"float32",i.ZSL.createScalarValue(f,"float32"));x.push(e),m.push(e)}let T;T=b?new zk(y,w,v,k,S):new Mk(y,w,v,k,S);const I=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=n.runWebGLProgram(T,x,"float32",I);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class ES{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=tb(n.length);let s="\n    int index;";for(let o=0;o<this.sliceDim;o++)s+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(s,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const AS={kernelName:i.O4G,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,o=s[s.length-1],c=i.ZSL.sizeFromShape(a.shape),[l,u,d,h]=i.backend_util.prepareAndValidate(a,r),p=xx({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),f=xx({inputs:{x:a},backend:n,attrs:{shape:[i.ZSL.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=Pb(e,t,a.dtype,u,o,d,h,a.shape,c);return n.makeTensorInfo(l,a.dtype,s.values)}const m=new ES(o,h,[u,d],a.shape),g=n.runWebGLProgram(m,[f,p],f.dtype),y=xx({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class _S{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=tb(this.rank),a=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)2===r?a.push("index"):a.push("".concat(n[r]));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function RS(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:c}=a,l=i.ZSL.parseAxisParam(o,r.shape)[0];if((0,i._K2)().get("DEBUG")){const e=n.readSync(s.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const a=e[n];i.ZSL.assert(a<=t-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]")))}}const u=i.backend_util.segment_util.collectGatherOpShapeInfo(r,s,l,c),d=i.ZSL.sizeFromShape(s.shape),h=[],p=xx({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=xx({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(p),h.push(f);const m=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),a=Bb(t,e,m);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}const g=new _S(p.shape,m),y=n.runWebGLProgram(g,[p,f],p.dtype);h.push(y);const b=xx({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const FS={kernelName:i.mxL,backendName:"webgl",kernelFunc:RS},DS=hx({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Wb,dtype:"bool"}),OS={kernelName:i.XhZ,backendName:"webgl",kernelFunc:DS},LS=hx({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Ub}),MS={kernelName:i.lLS,backendName:"webgl",kernelFunc:LS};const zS={kernelName:i.OAQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return lS(a,!0,n)}},PS=dx({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),BS={kernelName:i.gIW,backendName:"webgl",kernelFunc:PS},WS=dx({opSnippet:"return float(isinf(x));",dtype:"bool"}),US={kernelName:i.E3$,backendName:"webgl",kernelFunc:WS},VS=dx({opSnippet:"return float(isnan(x));",dtype:"bool"}),GS={kernelName:i.iPs,backendName:"webgl",kernelFunc:VS},jS=hx({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Vb,dtype:"bool"}),ZS={kernelName:i.mIA,backendName:"webgl",kernelFunc:jS},KS=hx({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Gb,dtype:"bool"}),HS={kernelName:i.CwD,backendName:"webgl",kernelFunc:KS};const qS={kernelName:i.mnI,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=jb(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},YS=dx({opSnippet:ux+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Zb}),QS={kernelName:i.tG8,backendName:"webgl",kernelFunc:YS},XS=dx({opSnippet:ux+"\n  return log(1.0 + x);\n"}),JS={kernelName:i.Cg$,backendName:"webgl",kernelFunc:XS},$S=hx({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),eT={kernelName:i.RUm,backendName:"webgl",kernelFunc:$S},tT=dx({opSnippet:"return float(!(x >= 1.0));"}),nT={kernelName:i.nZd,backendName:"webgl",kernelFunc:tT},aT=hx({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),rT={kernelName:i.LXA,backendName:"webgl",kernelFunc:aT};class sT{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class oT{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const iT={kernelName:i.jM4,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:c,beta:l}=a,u=(0,i._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new oT(r.shape,s,o,c,l):new sT(r.shape,s,o,c,l);return n.runWebGLProgram(u,[r],r.dtype)}};class cT{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const lT={kernelName:i.ToN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a,d=new cT(r.shape,i,c,l,u);return n.runWebGLProgram(d,[r,s,o],r.dtype)}};function uT(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,c=r.shape.length,l=i.ZSL.parseAxisParam(s,r.shape);let u=l;const d=i.backend_util.getAxesPermutation(u,c),h=null!=d,p=n.shouldExecuteOnCPU([r]);let f=r;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(c);for(let n=0;n<t.length;n++)t[n]=r.shape[d[n]];const a=xv(e,r.shape,r.dtype,d,t);f=n.makeTensorInfo(t,r.dtype);n.texData.get(f.dataId).values=a}else f=Cx(r,d,n);u=i.backend_util.getInnerMostAxes(u.length,c)}i.backend_util.assertAxesAreInnerMostDims("max",u,c);const[m,g]=i.backend_util.computeOutAndReduceShapes(f.shape,u);let y,b=m;if(o&&(b=i.backend_util.expandShapeToKeepDim(m,l)),p){const e=n.texData.get(f.dataId).values,t=Kb(e,i.ZSL.sizeFromShape(g),b,r.dtype);y=n.makeTensorInfo(b,r.dtype);n.texData.get(y.dataId).values=t}else y=function(e,t,n,a){const r=i.ZSL.sizeFromShape(t),s=xx({inputs:{x:e},attrs:{shape:[i.ZSL.sizeFromShape(e.shape)/r,r]},backend:a}),o=Tx(s,e.dtype,"max",a),c=xx({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),c}(f,g,b,n);return h&&n.disposeIntermediateTensorInfo(f),y}const dT={kernelName:i.VAI,backendName:"webgl",kernelFunc:uT},hT=hx({opSnippet:Qv+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Jv+"\n  return result;\n",cpuKernelImpl:Hb}),pT={kernelName:i.LDN,backendName:"webgl",kernelFunc:hT};const fT={kernelName:i.t3d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;zy(r,"maxPool");const{filterSize:s,strides:o,pad:c,dimRoundingMode:l}=a;i.ZSL.assert(i.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const u=i.backend_util.computePool2DInfo(r.shape,s,o,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&i.ZSL.arraysEqual(u.inShape,u.outShape))return ex({inputs:{x:r},backend:n});const d=new hw(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}};const mT={kernelName:i.ySp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:c,dataFormat:l,dimRoundingMode:u}=a,d=i.backend_util.computePool3DInfo(r.shape,s,o,[1,1,1],c,u,l),h=new pw(d,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class gT{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=s-1-e.padInfo.left,c=r*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class yT{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=c-1-e.padInfo.top,h=l-1-e.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(d,", ").concat(h,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const bT={kernelName:i.cHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=i.backend_util.computePool3DInfo(o.shape,c,l,[1,1,1],u,d),p=new pw(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new yT(h),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const vT={kernelName:i.RXX,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,c=s;zy([s,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=a,p=i.backend_util.computePool2DInfo(c.shape,l,u,1,d,h),f=new hw(p,"max",!0),m=n.runWebGLProgram(f,[c],c.dtype),g=new gT(p),y=n.runWebGLProgram(g,[r,m],c.dtype);return n.disposeIntermediateTensorInfo(m),y}};const xT={kernelName:i.TL8,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:c,includeBatchInIndex:l}=n,u=a;i.ZSL.assert(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const d=[1,1];i.ZSL.assert(i.backend_util.eitherStridesOrDilationsAreOne(o,d),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(d,"'")));const h=i.backend_util.computePool2DInfo(r.shape,s,o,d,c),[p,f]=function(e,t,n,a){let r=new hw(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new hw(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(r,l,h,u);return[p,f]}};const wT={kernelName:i.g5A,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:s,axis:o}=n,c=a,l=r.shape.length,u=i.ZSL.parseAxisParam(o,r.shape);let d=u;const h=i.backend_util.getAxesPermutation(d,l),p=null!=h,f=c.shouldExecuteOnCPU([r]),m=[];let g=r;if(p){if(f){const e=c.texData.get(g.dataId).values,t=new Array(l);for(let a=0;a<t.length;a++)t[a]=r.shape[h[a]];const n=xv(e,r.shape,r.dtype,h,t);g=c.makeTensorInfo(t,r.dtype);c.texData.get(g.dataId).values=n}else g=Cx(r,h,c);m.push(g),d=i.backend_util.getInnerMostAxes(d.length,l)}i.backend_util.assertAxesAreInnerMostDims("sum",d,l);const[y,b]=i.backend_util.computeOutAndReduceShapes(g.shape,d);let v=y;s&&(v=i.backend_util.expandShapeToKeepDim(y,u));const x=function(e,t,n,a){const r=i.ZSL.sizeFromShape(t),s=xx({inputs:{x:e},attrs:{shape:[i.ZSL.sizeFromShape(e.shape)/r,r]},backend:a}),o=Tx(s,"float32","mean",a),c=xx({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),c}(g,b,v,c);for(const i of m)c.disposeIntermediateTensorInfo(i);return x}};const kT={kernelName:i.lNG,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,c=r.shape.length,l=i.ZSL.parseAxisParam(s,r.shape);let u=l;const d=i.backend_util.getAxesPermutation(u,c);let h=r;null!=d&&(h=_x({inputs:{x:r},backend:n,attrs:{perm:d}}),u=i.backend_util.getInnerMostAxes(u.length,r.shape.length)),i.backend_util.assertAxesAreInnerMostDims("min",u,c);const[p,f]=i.backend_util.computeOutAndReduceShapes(h.shape,u),m=xx({inputs:{x:h},backend:n,attrs:{shape:[-1,i.ZSL.sizeFromShape(f)]}}),g=Tx(m,m.dtype,"min",n);let y;if(o){y=xx({inputs:{x:g},backend:n,attrs:{shape:i.backend_util.expandShapeToKeepDim(p,l)}})}else y=xx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}},ST=hx({opSnippet:Qv+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Jv+"\n  return result;\n",cpuKernelImpl:qb}),TT={kernelName:i.LG0,backendName:"webgl",kernelFunc:ST};class IT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=tb(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class NT{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=tb(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Sv("rc",a),c=Sv("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d="reflect"===n?0:1;let h="";if(1===a){const e="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(d,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(d,";\n        }\n        source -= start;\n      ");h="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const e="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(d,") +\n                gte * ((end - 1) * 2 - source + ").concat(d,");\n        source -= start;\n      ");h="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(h,"\n        setOutput(result);\n      }\n    ")}}const CT={kernelName:i.x7F,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:s,mode:o}=a,c=(0,i._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NT(r.shape,s,o):new IT(r.shape,s,o);return n.runWebGLProgram(c,[r],r.dtype)}},ET=hx({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Jv+"\n  return result;\n"}),AT={kernelName:i.BLA,backendName:"webgl",kernelFunc:ET};class _T{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const RT=hx({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),FT={kernelName:i.sDr,backendName:"webgl",kernelFunc:RT},DT="return a - b;",OT=hx({opSnippet:DT,packedOpSnippet:DT,supportsComplex:!0,cpuKernelImpl:yv}),LT={kernelName:i.PbM,backendName:"webgl",kernelFunc:OT};function MT(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=i.ZSL.parseAxisParam([s],r.shape),c=uT({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=i.backend_util.expandShapeToKeepDim(c.shape,o),u=xx({inputs:{x:c},backend:n,attrs:{shape:l}}),d=OT({inputs:{a:r,b:u},backend:n}),h=tS({inputs:{x:d},backend:n}),p=Ex({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),f=xx({inputs:{x:p},backend:n,attrs:{shape:l}}),m=RT({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const zT={kernelName:i.rFG,backendName:"webgl",kernelFunc:MT};const PT={kernelName:i.WT3,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a,c=i?r:MT({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],d=new _T(l,u,s),h=[[o]],p=n.runWebGLProgram(d,[c],"int32",h);return i||n.disposeIntermediateTensorInfo(c),p}},BT=Rv+"\n  return -x;\n";const WT={kernelName:i.l0G,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=Qb(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=(0,i._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new jv(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new _v(a.shape,BT),n.runWebGLProgram(r,[a],a.dtype)}},UT=i.kpo.c7;const VT={kernelName:i.SDM,backendName:"webgl",kernelFunc:function(e){i.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:c,scoreThreshold:l}=a,u=n.readSync(r.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=UT(u,d,o,c,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},GT=i.kpo.ZS;const jT={kernelName:i.Zl4,backendName:"webgl",kernelFunc:function(e){i.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:c,scoreThreshold:l,padToMaxOutputSize:u}=a,d=n.readSync(r.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:f}=GT(d,h,o,c,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},ZT=i.kpo.ut;const KT={kernelName:i.e0f,backendName:"webgl",kernelFunc:function(e){i.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:c,scoreThreshold:l,softNmsSigma:u}=a,d=n.readSync(r.dataId),h=n.readSync(s.dataId),p=o,f=c,m=l,g=u,{selectedIndices:y,selectedScores:b}=ZT(d,h,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class HT{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const qT={kernelName:i.urI,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:c,offValue:l}=a,u=i.ZSL.sizeFromShape(r.shape),d=new HT(u,o,c,l),h=xx({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(d,[h],s);n.disposeIntermediateTensorInfo(h);const f=xx({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,o]}});return n.disposeIntermediateTensorInfo(p),f}};function YT(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=Lw({inputs:{input:a},backend:n}),t=YT({inputs:{x:e},backend:n}),r=Xw({inputs:{input:a},backend:n}),s=YT({inputs:{x:r},backend:n}),o=nx({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return hS({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const QT={kernelName:i.xJ3,backendName:"webgl",kernelFunc:YT};const XT={kernelName:i.LWX,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=Lw({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=Xw({inputs:{input:r},backend:a}),o=YT({inputs:{x:s},backend:a}),i=nx({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return hS({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const JT={kernelName:i.mM$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return aS({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{i.ZSL.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),i.ZSL.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=ek({inputs:t.map((e=>{const t=aS({inputs:{input:e},backend:n,attrs:{dim:r}});return c.push(t),t})),backend:n,attrs:{axis:r}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class $T{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=tb(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class eI{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=tb(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Sv("rc",a),c=Sv("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],h=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===a?2:4;f<m;f++)p+="\n        ".concat(d[f],"\n        if (").concat(h,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const tI=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;if(0===i.ZSL.sizeFromShape(r.shape)){const e=s.map(((e,t)=>e[0]+r.shape[t]+e[1]));return hS({backend:n,attrs:{shape:e,value:o,dtype:r.dtype}})}const c=(0,i._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new eI(r.shape,s,o):new $T(r.shape,s,o),l=[[o]];return n.runWebGLProgram(c,[r],r.dtype,l)},nI={kernelName:i.ODT,backendName:"webgl",kernelFunc:tI},aI=hx({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Jv+"\n  return result;\n"}),rI={kernelName:i.pyJ,backendName:"webgl",kernelFunc:aI};const sI={kernelName:i.kdj,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,c=r.shape.length,l=[],u=i.ZSL.parseAxisParam(s,r.shape);let d=u;const h=i.backend_util.getAxesPermutation(d,c);let p,f=r;if(null!=h&&(f=_x({inputs:{x:r},backend:n,attrs:{perm:h}}),d=i.backend_util.getInnerMostAxes(d.length,c),l.push(f)),i.backend_util.assertAxesAreInnerMostDims("prod",d,c),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:a,outDtype:r}=Jb(f.shape,f.dtype,e,d);p=n.makeTensorInfo(a,r,t)}else{const[e,t]=i.backend_util.computeOutAndReduceShapes(f.shape,d),a=i.ZSL.sizeFromShape(t),s=xx({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),o=Tx(s,(0,i.chL)(r.dtype),"prod",n);p=xx({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(s),l.push(o)}if(o){l.push(p);const e=i.backend_util.expandShapeToKeepDim(p.shape,u);p=xx({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const oI={kernelName:i.oJ2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.readSync(e.dataId))),l=r.map((e=>e.shape)),u=n.readSync(s.dataId),d=n.readSync(o.dataId),[h,p,f]=$b(c,l,u,s.shape,s.dtype,d,o.shape,i),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}};const iI={kernelName:i.CQC,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=ev(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const cI={kernelName:i.mH5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),d=n.readSync(o.dataId),h=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[f,m]=tv(l,r.shape,u,s.shape,s.dtype,d,o.shape,h,p,c);return n.makeTensorInfo(f,s.dtype,m)}},lI=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:o}=n,i=nv(a,r,s,o);return t.makeTensorInfo([i.length],o,i)},uI={kernelName:i.Q6t,backendName:"webgl",kernelFunc:lI},dI=dx({opSnippet:"return 1.0 / x;"}),hI={kernelName:i.huO,backendName:"webgl",kernelFunc:dI},pI=dx({opSnippet:Rv+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),fI={kernelName:i.fUj,backendName:"webgl",kernelFunc:pI},mI=dx({opSnippet:Rv+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),gI={kernelName:i.P_L,backendName:"webgl",kernelFunc:mI};class yI{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class bI{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const vI={kernelName:i.hgw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:c}=a,[l,u]=c,d=(0,i._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new bI(r.shape,l,u,s,o):new yI(r.shape,l,u,s,o);return n.runWebGLProgram(d,[r],"float32")}};class xI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],d=1/l,h=1/u,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const wI={kernelName:i.FCQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new xI(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class kI{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let h;h=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class SI{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let h;h=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const TI={kernelName:i.jOE,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:c}=a,[l,u]=c,d=(0,i._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new SI(r.shape,l,u,s,o):new kI(r.shape,l,u,s,o);return n.runWebGLProgram(d,[r],r.dtype)}};class II{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],d=1/l,h=1/u,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const NI={kernelName:i.XQy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new II(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class CI{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=tb(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class EI{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=Sv("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=tb(n);function i(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),s=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const AI={kernelName:i.D7i,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,o=r.shape.length,c=i.ZSL.parseAxisParam(s,r.shape);if(0===o)return ex({inputs:{x:r},backend:n});const l=(0,i._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EI(r.shape,c):new CI(r.shape,c);return n.runWebGLProgram(l,[r],r.dtype)}};class _I{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const RI={kernelName:i.BK4,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:c}=n,l=a,u=new _I(r.shape,o),[d,h]=i.backend_util.getImageCenter(c,r.shape[1],r.shape[2]),p=[[d,h,Math.sin(s),Math.cos(s)]];return l.runWebGLProgram(u,[r],r.dtype,p)}},FI=dx({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),DI={kernelName:i.hVg,backendName:"webgl",kernelFunc:FI},OI=dx({opSnippet:"return inversesqrt(x);",cpuKernelImpl:av}),LI={kernelName:i.TOR,backendName:"webgl",kernelFunc:OI};class MI{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=tb(r.length),c=tb(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(h,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class zI{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const i=tb(r.length),c=tb(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(h,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const PI={kernelName:i.pJc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=i.backend_util.calculateShapes(s,r,o),p=[h/u,u];if(0===h)return n.makeTensorInfo(o,r.dtype);const f=xx({inputs:{x:r},backend:n,attrs:{shape:[l,c]}}),m=xx({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;y=(0,i._K2)().getBool("WEBGL_PACK")?new zI(l,c,f.shape.length,m.shape.length,d,p):new MI(l,c,f.shape.length,m.shape.length,d,p);const b=n.runWebGLProgram(y,[m,f,g],m.dtype),v=xx({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),v}};class BI{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),s=2===(0,i._K2)().getNumber("WEBGL_VERSION")?"while (left < right) {":r,o="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(s,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(o," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const WI={kernelName:i.uWl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=new BI(r.shape[0],r.shape[1],s.shape[1],o),c=[[r.shape[1]]];return n.runWebGLProgram(i,[r,s],"int32",c)}};class UI{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let a=0;a<t.length;a++)o.push("".concat(n[a])),a<e&&s.push("".concat(n[a]));a=s.join(),r=o.join()}const s=tb(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const VI={kernelName:i.l6P,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,o=new UI(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[a,r,s],(0,i.TuY)(r.dtype,s.dtype))}},GI=dx({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(i.backend_util.SELU_SCALEALPHA,";\n  float scale = ").concat(i.backend_util.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),jI={kernelName:i.u$b,backendName:"webgl",kernelFunc:GI},ZI=dx({opSnippet:ux+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:sv}),KI={kernelName:i.vI1,backendName:"webgl",kernelFunc:ZI},HI=dx({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),qI={kernelName:i.YVe,backendName:"webgl",kernelFunc:HI},YI=dx({opSnippet:ux+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Jv,"\n  return result;\n")}),QI={kernelName:i.hql,backendName:"webgl",kernelFunc:YI},XI=dx({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),JI={kernelName:i.J3C,backendName:"webgl",kernelFunc:XI},$I=dx({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),eN={kernelName:i.Fin,backendName:"webgl",kernelFunc:$I},tN={kernelName:i.A8B,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;i.ZSL.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const c=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...o);for(let i=1+s.length;i<r.shape.length;++i)l.push([0,0]);const u=[],d=tI({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=i.backend_util.getReshaped(d.shape,s,c,!1),p=i.backend_util.getPermuted(h.length,s.length,!1),f=i.backend_util.getReshapedPermuted(d.shape,s,c,!1),m=xx({inputs:{x:d},backend:n,attrs:{shape:h}}),g=_x({inputs:{x:m},backend:n,attrs:{perm:p}}),y=xx({inputs:{x:g},backend:n,attrs:{shape:f}});return u.push(d),u.push(m),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const nN={kernelName:i.C8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(a.dataId),c=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[d,h,p,f,m]=cv(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(h,a.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const aN={kernelName:i.BoJ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(s.dataId)),[l,u,d]=lv(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const rN={kernelName:i.L6G,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=uv(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const sN={kernelName:i.DvZ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=uv(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const oN={kernelName:i.jgd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:c}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=i.backend_util.calculateShapes(s,r,c),f=!1;if("string"===s.dtype){const e=n.bufferSync(r),t=n.bufferSync(s),a=i.ZSL.decodeString(n.readSync(o.dataId)[0]),m=rv(e,t,c,p,d,u,l,h,a,f);return n.makeTensorInfo(c,m.dtype,m.values)}const m=new MI(u,l,r.shape.length,s.shape.length,h,[p,1],f),g=n.runWebGLProgram(m,[s,r,o],s.dtype),y=xx({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(g),y}};const iN={kernelName:i.Blb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,c=i.ZSL.parseAxisParam(o,r.shape)[0],l=i.backend_util.prepareSplitSize(r,s,c),u=r.shape.length,d=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[c]=e;const a=Cw({inputs:{x:r},backend:n,attrs:{begin:d,size:t}});return d[c]+=e,a}))}},cN="return sqrt(x);",lN=dx({opSnippet:cN,packedOpSnippet:cN,cpuKernelImpl:dv}),uN={kernelName:i.dFH,backendName:"webgl",kernelFunc:lN},dN=dx({opSnippet:"return x * x;"}),hN={kernelName:i.M6A,backendName:"webgl",kernelFunc:dN},pN="return (a - b) * (a - b);",fN=hx({opSnippet:pN,packedOpSnippet:pN}),mN={kernelName:i.Ddj,backendName:"webgl",kernelFunc:fN};const gN={kernelName:i.GZp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const s=n.readSync(r.dataId),o=i.backend_util.fromUint8ToStringArray(s),c=hv(o,"string",a);return n.makeTensorInfo(r.shape,"string",c)}};const yN={kernelName:i.pnw,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,s=Rv+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new _v(r.shape,s);return a.runWebGLProgram(o,[r],r.dtype)}};class bN{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=tb(n.length),s=tb(n.length);let o="";if(1===a)o="coords * strides + begin";else{let e=0;o=n.map(((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(e,");\n      ").concat(r," strides = ").concat(r,"(").concat(t,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const vN={kernelName:i.UcO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:c,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:w}=i.Kro.sliceInfo(r.shape,s,o,c,l,u,d,h,p);let k;if(g)k=xx({inputs:{x:r},backend:n,attrs:{shape:m}});else if(y||b){i.ZSL.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=i.Kro.computeOutShape(v,x,w),t=Cw({inputs:{x:r},backend:n,attrs:{begin:v,size:e}});k=xx({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=(0,i.ra8)(r.shape,r.dtype,e),a=pv(f,t,w,v);k=n.makeTensorInfo(m,r.dtype,a.values)}else{const e=new bN(v,w,f);k=n.runWebGLProgram(e,[r],r.dtype)}}const S=xx({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),S}};const xN={kernelName:i.YAb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,h=n.readSync(u.dataId),p=n.readSync(d.dataId),[f,m]=fv(h,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const wN={kernelName:i.iW0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[l,u,d]=mv(i,c,r),h=u.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const kN={kernelName:i.$jE,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=gv(o,r);return n.makeTensorInfo(s.shape,"int32",i)}},SN=dx({opSnippet:"return tan(x);"}),TN={kernelName:i.oFs,backendName:"webgl",kernelFunc:SN},IN=dx({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),NN={kernelName:i.iuW,backendName:"webgl",kernelFunc:IN};const CN={kernelName:i.X4r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:o}=t,{}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=i.backend_util.calculateShapes(o,s,r.shape),p=[h/u,u];if(0===h)return n.makeTensorInfo(r.shape,s.dtype);const f=xx({inputs:{x:s},backend:n,attrs:{shape:[l,c]}}),m=xx({inputs:{x:o},backend:n,attrs:{shape:[l,u]}}),g=xx({inputs:{x:r},backend:n,attrs:{shape:p}}),y=new MI(l,c,f.shape.length,m.shape.length,d,p,!1,!0),b=n.runWebGLProgram(y,[m,f,g],g.dtype),v=xx({inputs:{x:b},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),v}};class EN{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const a=tb(this.rank),r=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push("imod(".concat(n[r],", ").concat(e[r],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function AN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>i.ZSL.decodeString(e))):e,a=(0,i.ra8)(r.shape,r.dtype,t),o=bv(a,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new EN(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}const _N={kernelName:i.FAs,backendName:"webgl",kernelFunc:AN};class RN{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class FN{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function DN(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function ON(e){let t=1;for(;t<e;)t*=2;return t}const LN={kernelName:i.TBb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a,c=(0,i._K2)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,i._K2)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([r])||d<c||s>l){const e=n.readSync(r.dataId),[t,a]=vv(e,u,r.dtype,s,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===d)return[r,hS({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),p=null!==h&&h.isPacked,f=p?n.unpackTensor(r):r,m=i.ZSL.sizeFromShape(u)/d,g=xx({inputs:{x:f},attrs:{shape:[m,d]},backend:n});p&&DN(n,f);const y=ON(s),b=ON(d);let v=null;const x=()=>null===v?[g,g]:[g,v],w=(e,t,a)=>{const r=x(),s=new RN(a),o=[[d],[null===v?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=v;v=n.runWebGLProgram(s,r,"int32",o),DN(n,i)};for(let i=1;i<y;i*=2){const e=2*i;for(let t=i;t>=1;t/=2)w(e,t,[m,b])}for(let i=b;i>y;i/=2){const e=x(),t=new FN([m,i/2]),a=[[d],[null===v?1:0],[y]],r=v;v=n.runWebGLProgram(t,e,"int32",a),DN(n,r);const s=y/2,o=2*s;for(let n=s;n>=1;n/=2)w(o,n,v.shape)}let k=v;v=Cw({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,s]}}),DN(n,k);let S=RS({inputs:{x:g,indices:v},backend:n,attrs:{axis:1,batchDims:1}});DN(n,g);const T=u.slice(0,-1);T.push(s),k=v,v=xx({inputs:{x:v},attrs:{shape:T},backend:n}),DN(n,k);const I=S;return S=xx({inputs:{x:S},attrs:{shape:T},backend:n}),DN(n,I),[S,v]}};class MN{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const zN={kernelName:i.dLy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=a,[u,d,h,p]=r.shape,[f,m]=null!=l?l:[d,h],g=new MN(d,h,o,i,c,[u,f,m,p]);return n.runWebGLProgram(g,[r,s],"float32")}};const PN={kernelName:i.EwU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;zy(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(s.dataId),{outputValues:i,outputShape:c,indices:l}=wv(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const BN={kernelName:i.dXR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r,i=o.shape.length,c=r.shape[s],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==s&&(l[u++]=o.shape[m]);const d=[],h=new Array(i).fill(0),p=o.shape.slice();p[s]=1;const f=new Array(c);for(let m=0;m<f.length;m++){h[s]=m;const e=Cw({inputs:{x:o},backend:n,attrs:{begin:h,size:p}}),t=xx({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class WN{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,o=s*Math.ceil(r/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let d="";r%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(d,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const UN={kernelName:i.pPe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a,c=r.shape.length,l=[];let u=0;const d=i.backend_util.getAxesPermutation([u],c);let h=r;null!=d&&(h=_x({inputs:{x:r},backend:n,attrs:{perm:d}}),l.push(h),u=i.backend_util.getInnerMostAxes(1,c)[0]);const p=i.backend_util.segment_util.computeOutShape(h.shape,u,o),f=i.ZSL.sizeFromShape([h.shape[u]]),m=xx({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,i.chL)(r.dtype),y=(e,t,a,r,s)=>{const o=e.shape[0],c=e.shape[1],u=i.backend_util.segment_util.segOpComputeOptimalWindowSize(c,s),d=new WN({windowSize:u,inSize:c,batchSize:o,numSegments:s},t),h=n.compileAndRun(d,[e,a],r);if(l.push(h),h.shape[1]===s)return h;const p=lI({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=AN({inputs:{x:p},backend:n,attrs:{reps:[c/u]}});l.push(p),l.push(f);return y(h,t,f,r,s)},b=xx({inputs:{x:y(m,"unsortedSegmentSum",s,g,o)},backend:n,attrs:{shape:p}});let v=b;if(null!=d){l.push(b);const e=i.backend_util.getUndoAxesPermutation(d);v=_x({inputs:{x:v},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},VN=[Ox,Mx,Px,Wx,Gx,Kx,Hx,qx,ew,tw,aw,sw,iw,lw,dw,fw,mw,bw,vw,xw,Sw,Aw,_w,Rw,Fw,Pw,Uw,jw,ax,Hw,tk,lk,fk,gk,yk,bk,vk,wk,Sk,Ik,Rk,Fk,Dk,Lk,Pk,Uk,Vk,jk,Kk,Hk,Yk,Qk,Jk,eS,nS,rS,iS,uS,pS,mS,bS,xS,SS,NS,CS,AS,FS,OS,MS,tx,zS,Jw,BS,US,GS,ox,ZS,HS,qS,QS,JS,eT,nT,rT,iT,lT,dT,pT,fT,mT,bT,vT,xT,wT,kT,TT,CT,AT,PT,vx,WT,VT,jT,KT,Ow,qT,XT,JT,nI,rI,lx,sI,oI,iI,cI,uI,Mw,FT,hI,fI,gI,wx,vI,wI,TI,NI,AI,RI,DI,LI,PI,WI,VI,jI,KI,qI,QI,JI,Ew,zT,eN,tN,nN,aN,rN,sN,oN,iN,uN,hN,mN,gN,yN,vN,xN,wN,kN,LT,Ax,TN,NN,CN,_N,LN,zN,Rx,PN,BN,UN,QT];for(const n of VN)(0,i.tAK)(n);i.bgA,Gl.uW;const GN=(e,t,n)=>{if(e.length>0&&n)for(let a=0;a<e.length;a++){const n=e[a].topLeft,r=e[a].bottomRight,s=[r[0]-n[0],r[1]-n[1]];t.beginPath(),t.lineWidth="6",t.strokeStyle="red",t.rect(n[0],n[1],s[0],s[1]),t.stroke(),setTimeout((()=>{t.clearRect(0,0,t.canvas.width,t.canvas.height)}),2e3)}};function jN(e,t,n,a){return new(n||(n=Promise))((function(r,s){function o(e){try{c(a.next(e))}catch(e){s(e)}}function i(e){try{c(a.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}c((a=a.apply(e,t||[])).next())}))}function ZN(e,t){var n,a,r,s,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,a&&(r=2&s[0]?a.return:s[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,s[1])).done)return r;switch(a=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,a=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(r=(r=o.trys).length>0&&r[r.length-1])&&(6===s[0]||2===s[0])){o=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){o.label=s[1];break}if(6===s[0]&&o.label<r[1]){o.label=r[1],r=s;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(s);break}r[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],a=0}finally{n=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}}var KN={0:"tench, Tinca tinca",1:"goldfish, Carassius auratus",2:"great white shark, white shark, man-eater, man-eating shark, Carcharodon carcharias",3:"tiger shark, Galeocerdo cuvieri",4:"hammerhead, hammerhead shark",5:"electric ray, crampfish, numbfish, torpedo",6:"stingray",7:"cock",8:"hen",9:"ostrich, Struthio camelus",10:"brambling, Fringilla montifringilla",11:"goldfinch, Carduelis carduelis",12:"house finch, linnet, Carpodacus mexicanus",13:"junco, snowbird",14:"indigo bunting, indigo finch, indigo bird, Passerina cyanea",15:"robin, American robin, Turdus migratorius",16:"bulbul",17:"jay",18:"magpie",19:"chickadee",20:"water ouzel, dipper",21:"kite",22:"bald eagle, American eagle, Haliaeetus leucocephalus",23:"vulture",24:"great grey owl, great gray owl, Strix nebulosa",25:"European fire salamander, Salamandra salamandra",26:"common newt, Triturus vulgaris",27:"eft",28:"spotted salamander, Ambystoma maculatum",29:"axolotl, mud puppy, Ambystoma mexicanum",30:"bullfrog, Rana catesbeiana",31:"tree frog, tree-frog",32:"tailed frog, bell toad, ribbed toad, tailed toad, Ascaphus trui",33:"loggerhead, loggerhead turtle, Caretta caretta",34:"leatherback turtle, leatherback, leathery turtle, Dermochelys coriacea",35:"mud turtle",36:"terrapin",37:"box turtle, box tortoise",38:"banded gecko",39:"common iguana, iguana, Iguana iguana",40:"American chameleon, anole, Anolis carolinensis",41:"whiptail, whiptail lizard",42:"agama",43:"frilled lizard, Chlamydosaurus kingi",44:"alligator lizard",45:"Gila monster, Heloderma suspectum",46:"green lizard, Lacerta viridis",47:"African chameleon, Chamaeleo chamaeleon",48:"Komodo dragon, Komodo lizard, dragon lizard, giant lizard, Varanus komodoensis",49:"African crocodile, Nile crocodile, Crocodylus niloticus",50:"American alligator, Alligator mississipiensis",51:"triceratops",52:"thunder snake, worm snake, Carphophis amoenus",53:"ringneck snake, ring-necked snake, ring snake",54:"hognose snake, puff adder, sand viper",55:"green snake, grass snake",56:"king snake, kingsnake",57:"garter snake, grass snake",58:"water snake",59:"vine snake",60:"night snake, Hypsiglena torquata",61:"boa constrictor, Constrictor constrictor",62:"rock python, rock snake, Python sebae",63:"Indian cobra, Naja naja",64:"green mamba",65:"sea snake",66:"horned viper, cerastes, sand viper, horned asp, Cerastes cornutus",67:"diamondback, diamondback rattlesnake, Crotalus adamanteus",68:"sidewinder, horned rattlesnake, Crotalus cerastes",69:"trilobite",70:"harvestman, daddy longlegs, Phalangium opilio",71:"scorpion",72:"black and gold garden spider, Argiope aurantia",73:"barn spider, Araneus cavaticus",74:"garden spider, Aranea diademata",75:"black widow, Latrodectus mactans",76:"tarantula",77:"wolf spider, hunting spider",78:"tick",79:"centipede",80:"black grouse",81:"ptarmigan",82:"ruffed grouse, partridge, Bonasa umbellus",83:"prairie chicken, prairie grouse, prairie fowl",84:"peacock",85:"quail",86:"partridge",87:"African grey, African gray, Psittacus erithacus",88:"macaw",89:"sulphur-crested cockatoo, Kakatoe galerita, Cacatua galerita",90:"lorikeet",91:"coucal",92:"bee eater",93:"hornbill",94:"hummingbird",95:"jacamar",96:"toucan",97:"drake",98:"red-breasted merganser, Mergus serrator",99:"goose",100:"black swan, Cygnus atratus",101:"tusker",102:"echidna, spiny anteater, anteater",103:"platypus, duckbill, duckbilled platypus, duck-billed platypus, Ornithorhynchus anatinus",104:"wallaby, brush kangaroo",105:"koala, koala bear, kangaroo bear, native bear, Phascolarctos cinereus",106:"wombat",107:"jelly fish",108:"sea anemone, anemone",109:"brain coral",110:"flatworm, platyhelminth",111:"nematode, nematode worm, roundworm",112:"conch",113:"snail",114:"slug",115:"sea slug, nudibranch",116:"chiton, coat-of-mail shell, sea cradle, polyplacophore",117:"chambered nautilus, pearly nautilus, nautilus",118:"Dungeness crab, Cancer magister",119:"rock crab, Cancer irroratus",120:"fiddler crab",121:"king crab, Alaska crab, Alaskan king crab, Alaska king crab, Paralithodes camtschatica",122:"American lobster, Northern lobster, Maine lobster, Homarus americanus",123:"spiny lobster, langouste, rock lobster, crawfish, crayfish, sea crawfish",124:"crayfish, crawfish, crawdad, crawdaddy",125:"hermit crab",126:"isopod",127:"white stork, Ciconia ciconia",128:"black stork, Ciconia nigra",129:"spoonbill",130:"flamingo",131:"little blue heron, Egretta caerulea",132:"American egret, great white heron, Egretta albus",133:"bittern",134:"crane",135:"limpkin, Aramus pictus",136:"European gallinule, Porphyrio porphyrio",137:"American coot, marsh hen, mud hen, water hen, Fulica americana",138:"bustard",139:"ruddy turnstone, Arenaria interpres",140:"red-backed sandpiper, dunlin, Erolia alpina",141:"redshank, Tringa totanus",142:"dowitcher",143:"oystercatcher, oyster catcher",144:"pelican",145:"king penguin, Aptenodytes patagonica",146:"albatross, mollymawk",147:"grey whale, gray whale, devilfish, Eschrichtius gibbosus, Eschrichtius robustus",148:"killer whale, killer, orca, grampus, sea wolf, Orcinus orca",149:"dugong, Dugong dugon",150:"sea lion",151:"Chihuahua",152:"Japanese spaniel",153:"Maltese dog, Maltese terrier, Maltese",154:"Pekinese, Pekingese, Peke",155:"Shih-Tzu",156:"Blenheim spaniel",157:"papillon",158:"toy terrier",159:"Rhodesian ridgeback",160:"Afghan hound, Afghan",161:"basset, basset hound",162:"beagle",163:"bloodhound, sleuthhound",164:"bluetick",165:"black-and-tan coonhound",166:"Walker hound, Walker foxhound",167:"English foxhound",168:"redbone",169:"borzoi, Russian wolfhound",170:"Irish wolfhound",171:"Italian greyhound",172:"whippet",173:"Ibizan hound, Ibizan Podenco",174:"Norwegian elkhound, elkhound",175:"otterhound, otter hound",176:"Saluki, gazelle hound",177:"Scottish deerhound, deerhound",178:"Weimaraner",179:"Staffordshire bullterrier, Staffordshire bull terrier",180:"American Staffordshire terrier, Staffordshire terrier, American pit bull terrier, pit bull terrier",181:"Bedlington terrier",182:"Border terrier",183:"Kerry blue terrier",184:"Irish terrier",185:"Norfolk terrier",186:"Norwich terrier",187:"Yorkshire terrier",188:"wire-haired fox terrier",189:"Lakeland terrier",190:"Sealyham terrier, Sealyham",191:"Airedale, Airedale terrier",192:"cairn, cairn terrier",193:"Australian terrier",194:"Dandie Dinmont, Dandie Dinmont terrier",195:"Boston bull, Boston terrier",196:"miniature schnauzer",197:"giant schnauzer",198:"standard schnauzer",199:"Scotch terrier, Scottish terrier, Scottie",200:"Tibetan terrier, chrysanthemum dog",201:"silky terrier, Sydney silky",202:"soft-coated wheaten terrier",203:"West Highland white terrier",204:"Lhasa, Lhasa apso",205:"flat-coated retriever",206:"curly-coated retriever",207:"golden retriever",208:"Labrador retriever",209:"Chesapeake Bay retriever",210:"German short-haired pointer",211:"vizsla, Hungarian pointer",212:"English setter",213:"Irish setter, red setter",214:"Gordon setter",215:"Brittany spaniel",216:"clumber, clumber spaniel",217:"English springer, English springer spaniel",218:"Welsh springer spaniel",219:"cocker spaniel, English cocker spaniel, cocker",220:"Sussex spaniel",221:"Irish water spaniel",222:"kuvasz",223:"schipperke",224:"groenendael",225:"malinois",226:"briard",227:"kelpie",228:"komondor",229:"Old English sheepdog, bobtail",230:"Shetland sheepdog, Shetland sheep dog, Shetland",231:"collie",232:"Border collie",233:"Bouvier des Flandres, Bouviers des Flandres",234:"Rottweiler",235:"German shepherd, German shepherd dog, German police dog, alsatian",236:"Doberman, Doberman pinscher",237:"miniature pinscher",238:"Greater Swiss Mountain dog",239:"Bernese mountain dog",240:"Appenzeller",241:"EntleBucher",242:"boxer",243:"bull mastiff",244:"Tibetan mastiff",245:"French bulldog",246:"Great Dane",247:"Saint Bernard, St Bernard",248:"Eskimo dog, husky",249:"malamute, malemute, Alaskan malamute",250:"Siberian husky",251:"dalmatian, coach dog, carriage dog",252:"affenpinscher, monkey pinscher, monkey dog",253:"basenji",254:"pug, pug-dog",255:"Leonberg",256:"Newfoundland, Newfoundland dog",257:"Great Pyrenees",258:"Samoyed, Samoyede",259:"Pomeranian",260:"chow, chow chow",261:"keeshond",262:"Brabancon griffon",263:"Pembroke, Pembroke Welsh corgi",264:"Cardigan, Cardigan Welsh corgi",265:"toy poodle",266:"miniature poodle",267:"standard poodle",268:"Mexican hairless",269:"timber wolf, grey wolf, gray wolf, Canis lupus",270:"white wolf, Arctic wolf, Canis lupus tundrarum",271:"red wolf, maned wolf, Canis rufus, Canis niger",272:"coyote, prairie wolf, brush wolf, Canis latrans",273:"dingo, warrigal, warragal, Canis dingo",274:"dhole, Cuon alpinus",275:"African hunting dog, hyena dog, Cape hunting dog, Lycaon pictus",276:"hyena, hyaena",277:"red fox, Vulpes vulpes",278:"kit fox, Vulpes macrotis",279:"Arctic fox, white fox, Alopex lagopus",280:"grey fox, gray fox, Urocyon cinereoargenteus",281:"tabby, tabby cat",282:"tiger cat",283:"Persian cat",284:"Siamese cat, Siamese",285:"Egyptian cat",286:"cougar, puma, catamount, mountain lion, painter, panther, Felis concolor",287:"lynx, catamount",288:"leopard, Panthera pardus",289:"snow leopard, ounce, Panthera uncia",290:"jaguar, panther, Panthera onca, Felis onca",291:"lion, king of beasts, Panthera leo",292:"tiger, Panthera tigris",293:"cheetah, chetah, Acinonyx jubatus",294:"brown bear, bruin, Ursus arctos",295:"American black bear, black bear, Ursus americanus, Euarctos americanus",296:"ice bear, polar bear, Ursus Maritimus, Thalarctos maritimus",297:"sloth bear, Melursus ursinus, Ursus ursinus",298:"mongoose",299:"meerkat, mierkat",300:"tiger beetle",301:"ladybug, ladybeetle, lady beetle, ladybird, ladybird beetle",302:"ground beetle, carabid beetle",303:"long-horned beetle, longicorn, longicorn beetle",304:"leaf beetle, chrysomelid",305:"dung beetle",306:"rhinoceros beetle",307:"weevil",308:"fly",309:"bee",310:"ant, emmet, pismire",311:"grasshopper, hopper",312:"cricket",313:"walking stick, walkingstick, stick insect",314:"cockroach, roach",315:"mantis, mantid",316:"cicada, cicala",317:"leafhopper",318:"lacewing, lacewing fly",319:"dragonfly, darning needle, devil's darning needle, sewing needle, snake feeder, snake doctor, mosquito hawk, skeeter hawk",320:"damselfly",321:"admiral",322:"ringlet, ringlet butterfly",323:"monarch, monarch butterfly, milkweed butterfly, Danaus plexippus",324:"cabbage butterfly",325:"sulphur butterfly, sulfur butterfly",326:"lycaenid, lycaenid butterfly",327:"starfish, sea star",328:"sea urchin",329:"sea cucumber, holothurian",330:"wood rabbit, cottontail, cottontail rabbit",331:"hare",332:"Angora, Angora rabbit",333:"hamster",334:"porcupine, hedgehog",335:"fox squirrel, eastern fox squirrel, Sciurus niger",336:"marmot",337:"beaver",338:"guinea pig, Cavia cobaya",339:"sorrel",340:"zebra",341:"hog, pig, grunter, squealer, Sus scrofa",342:"wild boar, boar, Sus scrofa",343:"warthog",344:"hippopotamus, hippo, river horse, Hippopotamus amphibius",345:"ox",346:"water buffalo, water ox, Asiatic buffalo, Bubalus bubalis",347:"bison",348:"ram, tup",349:"bighorn, bighorn sheep, cimarron, Rocky Mountain bighorn, Rocky Mountain sheep, Ovis canadensis",350:"ibex, Capra ibex",351:"hartebeest",352:"impala, Aepyceros melampus",353:"gazelle",354:"Arabian camel, dromedary, Camelus dromedarius",355:"llama",356:"weasel",357:"mink",358:"polecat, fitch, foulmart, foumart, Mustela putorius",359:"black-footed ferret, ferret, Mustela nigripes",360:"otter",361:"skunk, polecat, wood pussy",362:"badger",363:"armadillo",364:"three-toed sloth, ai, Bradypus tridactylus",365:"orangutan, orang, orangutang, Pongo pygmaeus",366:"gorilla, Gorilla gorilla",367:"chimpanzee, chimp, Pan troglodytes",368:"gibbon, Hylobates lar",369:"siamang, Hylobates syndactylus, Symphalangus syndactylus",370:"guenon, guenon monkey",371:"patas, hussar monkey, Erythrocebus patas",372:"baboon",373:"macaque",374:"langur",375:"colobus, colobus monkey",376:"proboscis monkey, Nasalis larvatus",377:"marmoset",378:"capuchin, ringtail, Cebus capucinus",379:"howler monkey, howler",380:"titi, titi monkey",381:"spider monkey, Ateles geoffroyi",382:"squirrel monkey, Saimiri sciureus",383:"Madagascar cat, ring-tailed lemur, Lemur catta",384:"indri, indris, Indri indri, Indri brevicaudatus",385:"Indian elephant, Elephas maximus",386:"African elephant, Loxodonta africana",387:"lesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens",388:"giant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca",389:"barracouta, snoek",390:"eel",391:"coho, cohoe, coho salmon, blue jack, silver salmon, Oncorhynchus kisutch",392:"rock beauty, Holocanthus tricolor",393:"anemone fish",394:"sturgeon",395:"gar, garfish, garpike, billfish, Lepisosteus osseus",396:"lionfish",397:"puffer, pufferfish, blowfish, globefish",398:"abacus",399:"abaya",400:"academic gown, academic robe, judge's robe",401:"accordion, piano accordion, squeeze box",402:"acoustic guitar",403:"aircraft carrier, carrier, flattop, attack aircraft carrier",404:"airliner",405:"airship, dirigible",406:"altar",407:"ambulance",408:"amphibian, amphibious vehicle",409:"analog clock",410:"apiary, bee house",411:"apron",412:"ashcan, trash can, garbage can, wastebin, ash bin, ash-bin, ashbin, dustbin, trash barrel, trash bin",413:"assault rifle, assault gun",414:"backpack, back pack, knapsack, packsack, rucksack, haversack",415:"bakery, bakeshop, bakehouse",416:"balance beam, beam",417:"balloon",418:"ballpoint, ballpoint pen, ballpen, Biro",419:"Band Aid",420:"banjo",421:"bannister, banister, balustrade, balusters, handrail",422:"barbell",423:"barber chair",424:"barbershop",425:"barn",426:"barometer",427:"barrel, cask",428:"barrow, garden cart, lawn cart, wheelbarrow",429:"baseball",430:"basketball",431:"bassinet",432:"bassoon",433:"bathing cap, swimming cap",434:"bath towel",435:"bathtub, bathing tub, bath, tub",436:"beach wagon, station wagon, wagon, estate car, beach waggon, station waggon, waggon",437:"beacon, lighthouse, beacon light, pharos",438:"beaker",439:"bearskin, busby, shako",440:"beer bottle",441:"beer glass",442:"bell cote, bell cot",443:"bib",444:"bicycle-built-for-two, tandem bicycle, tandem",445:"bikini, two-piece",446:"binder, ring-binder",447:"binoculars, field glasses, opera glasses",448:"birdhouse",449:"boathouse",450:"bobsled, bobsleigh, bob",451:"bolo tie, bolo, bola tie, bola",452:"bonnet, poke bonnet",453:"bookcase",454:"bookshop, bookstore, bookstall",455:"bottlecap",456:"bow",457:"bow tie, bow-tie, bowtie",458:"brass, memorial tablet, plaque",459:"brassiere, bra, bandeau",460:"breakwater, groin, groyne, mole, bulwark, seawall, jetty",461:"breastplate, aegis, egis",462:"broom",463:"bucket, pail",464:"buckle",465:"bulletproof vest",466:"bullet train, bullet",467:"butcher shop, meat market",468:"cab, hack, taxi, taxicab",469:"caldron, cauldron",470:"candle, taper, wax light",471:"cannon",472:"canoe",473:"can opener, tin opener",474:"cardigan",475:"car mirror",476:"carousel, carrousel, merry-go-round, roundabout, whirligig",477:"carpenter's kit, tool kit",478:"carton",479:"car wheel",480:"cash machine, cash dispenser, automated teller machine, automatic teller machine, automated teller, automatic teller, ATM",481:"cassette",482:"cassette player",483:"castle",484:"catamaran",485:"CD player",486:"cello, violoncello",487:"cellular telephone, cellular phone, cellphone, cell, mobile phone",488:"chain",489:"chainlink fence",490:"chain mail, ring mail, mail, chain armor, chain armour, ring armor, ring armour",491:"chain saw, chainsaw",492:"chest",493:"chiffonier, commode",494:"chime, bell, gong",495:"china cabinet, china closet",496:"Christmas stocking",497:"church, church building",498:"cinema, movie theater, movie theatre, movie house, picture palace",499:"cleaver, meat cleaver, chopper",500:"cliff dwelling",501:"cloak",502:"clog, geta, patten, sabot",503:"cocktail shaker",504:"coffee mug",505:"coffeepot",506:"coil, spiral, volute, whorl, helix",507:"combination lock",508:"computer keyboard, keypad",509:"confectionery, confectionary, candy store",510:"container ship, containership, container vessel",511:"convertible",512:"corkscrew, bottle screw",513:"cornet, horn, trumpet, trump",514:"cowboy boot",515:"cowboy hat, ten-gallon hat",516:"cradle",517:"crane",518:"crash helmet",519:"crate",520:"crib, cot",521:"Crock Pot",522:"croquet ball",523:"crutch",524:"cuirass",525:"dam, dike, dyke",526:"desk",527:"desktop computer",528:"dial telephone, dial phone",529:"diaper, nappy, napkin",530:"digital clock",531:"digital watch",532:"dining table, board",533:"dishrag, dishcloth",534:"dishwasher, dish washer, dishwashing machine",535:"disk brake, disc brake",536:"dock, dockage, docking facility",537:"dogsled, dog sled, dog sleigh",538:"dome",539:"doormat, welcome mat",540:"drilling platform, offshore rig",541:"drum, membranophone, tympan",542:"drumstick",543:"dumbbell",544:"Dutch oven",545:"electric fan, blower",546:"electric guitar",547:"electric locomotive",548:"entertainment center",549:"envelope",550:"espresso maker",551:"face powder",552:"feather boa, boa",553:"file, file cabinet, filing cabinet",554:"fireboat",555:"fire engine, fire truck",556:"fire screen, fireguard",557:"flagpole, flagstaff",558:"flute, transverse flute",559:"folding chair",560:"football helmet",561:"forklift",562:"fountain",563:"fountain pen",564:"four-poster",565:"freight car",566:"French horn, horn",567:"frying pan, frypan, skillet",568:"fur coat",569:"garbage truck, dustcart",570:"gasmask, respirator, gas helmet",571:"gas pump, gasoline pump, petrol pump, island dispenser",572:"goblet",573:"go-kart",574:"golf ball",575:"golfcart, golf cart",576:"gondola",577:"gong, tam-tam",578:"gown",579:"grand piano, grand",580:"greenhouse, nursery, glasshouse",581:"grille, radiator grille",582:"grocery store, grocery, food market, market",583:"guillotine",584:"hair slide",585:"hair spray",586:"half track",587:"hammer",588:"hamper",589:"hand blower, blow dryer, blow drier, hair dryer, hair drier",590:"hand-held computer, hand-held microcomputer",591:"handkerchief, hankie, hanky, hankey",592:"hard disc, hard disk, fixed disk",593:"harmonica, mouth organ, harp, mouth harp",594:"harp",595:"harvester, reaper",596:"hatchet",597:"holster",598:"home theater, home theatre",599:"honeycomb",600:"hook, claw",601:"hoopskirt, crinoline",602:"horizontal bar, high bar",603:"horse cart, horse-cart",604:"hourglass",605:"iPod",606:"iron, smoothing iron",607:"jack-o'-lantern",608:"jean, blue jean, denim",609:"jeep, landrover",610:"jersey, T-shirt, tee shirt",611:"jigsaw puzzle",612:"jinrikisha, ricksha, rickshaw",613:"joystick",614:"kimono",615:"knee pad",616:"knot",617:"lab coat, laboratory coat",618:"ladle",619:"lampshade, lamp shade",620:"laptop, laptop computer",621:"lawn mower, mower",622:"lens cap, lens cover",623:"letter opener, paper knife, paperknife",624:"library",625:"lifeboat",626:"lighter, light, igniter, ignitor",627:"limousine, limo",628:"liner, ocean liner",629:"lipstick, lip rouge",630:"Loafer",631:"lotion",632:"loudspeaker, speaker, speaker unit, loudspeaker system, speaker system",633:"loupe, jeweler's loupe",634:"lumbermill, sawmill",635:"magnetic compass",636:"mailbag, postbag",637:"mailbox, letter box",638:"maillot",639:"maillot, tank suit",640:"manhole cover",641:"maraca",642:"marimba, xylophone",643:"mask",644:"matchstick",645:"maypole",646:"maze, labyrinth",647:"measuring cup",648:"medicine chest, medicine cabinet",649:"megalith, megalithic structure",650:"microphone, mike",651:"microwave, microwave oven",652:"military uniform",653:"milk can",654:"minibus",655:"miniskirt, mini",656:"minivan",657:"missile",658:"mitten",659:"mixing bowl",660:"mobile home, manufactured home",661:"Model T",662:"modem",663:"monastery",664:"monitor",665:"moped",666:"mortar",667:"mortarboard",668:"mosque",669:"mosquito net",670:"motor scooter, scooter",671:"mountain bike, all-terrain bike, off-roader",672:"mountain tent",673:"mouse, computer mouse",674:"mousetrap",675:"moving van",676:"muzzle",677:"nail",678:"neck brace",679:"necklace",680:"nipple",681:"notebook, notebook computer",682:"obelisk",683:"oboe, hautboy, hautbois",684:"ocarina, sweet potato",685:"odometer, hodometer, mileometer, milometer",686:"oil filter",687:"organ, pipe organ",688:"oscilloscope, scope, cathode-ray oscilloscope, CRO",689:"overskirt",690:"oxcart",691:"oxygen mask",692:"packet",693:"paddle, boat paddle",694:"paddlewheel, paddle wheel",695:"padlock",696:"paintbrush",697:"pajama, pyjama, pj's, jammies",698:"palace",699:"panpipe, pandean pipe, syrinx",700:"paper towel",701:"parachute, chute",702:"parallel bars, bars",703:"park bench",704:"parking meter",705:"passenger car, coach, carriage",706:"patio, terrace",707:"pay-phone, pay-station",708:"pedestal, plinth, footstall",709:"pencil box, pencil case",710:"pencil sharpener",711:"perfume, essence",712:"Petri dish",713:"photocopier",714:"pick, plectrum, plectron",715:"pickelhaube",716:"picket fence, paling",717:"pickup, pickup truck",718:"pier",719:"piggy bank, penny bank",720:"pill bottle",721:"pillow",722:"ping-pong ball",723:"pinwheel",724:"pirate, pirate ship",725:"pitcher, ewer",726:"plane, carpenter's plane, woodworking plane",727:"planetarium",728:"plastic bag",729:"plate rack",730:"plow, plough",731:"plunger, plumber's helper",732:"Polaroid camera, Polaroid Land camera",733:"pole",734:"police van, police wagon, paddy wagon, patrol wagon, wagon, black Maria",735:"poncho",736:"pool table, billiard table, snooker table",737:"pop bottle, soda bottle",738:"pot, flowerpot",739:"potter's wheel",740:"power drill",741:"prayer rug, prayer mat",742:"printer",743:"prison, prison house",744:"projectile, missile",745:"projector",746:"puck, hockey puck",747:"punching bag, punch bag, punching ball, punchball",748:"purse",749:"quill, quill pen",750:"quilt, comforter, comfort, puff",751:"racer, race car, racing car",752:"racket, racquet",753:"radiator",754:"radio, wireless",755:"radio telescope, radio reflector",756:"rain barrel",757:"recreational vehicle, RV, R.V.",758:"reel",759:"reflex camera",760:"refrigerator, icebox",761:"remote control, remote",762:"restaurant, eating house, eating place, eatery",763:"revolver, six-gun, six-shooter",764:"rifle",765:"rocking chair, rocker",766:"rotisserie",767:"rubber eraser, rubber, pencil eraser",768:"rugby ball",769:"rule, ruler",770:"running shoe",771:"safe",772:"safety pin",773:"saltshaker, salt shaker",774:"sandal",775:"sarong",776:"sax, saxophone",777:"scabbard",778:"scale, weighing machine",779:"school bus",780:"schooner",781:"scoreboard",782:"screen, CRT screen",783:"screw",784:"screwdriver",785:"seat belt, seatbelt",786:"sewing machine",787:"shield, buckler",788:"shoe shop, shoe-shop, shoe store",789:"shoji",790:"shopping basket",791:"shopping cart",792:"shovel",793:"shower cap",794:"shower curtain",795:"ski",796:"ski mask",797:"sleeping bag",798:"slide rule, slipstick",799:"sliding door",800:"slot, one-armed bandit",801:"snorkel",802:"snowmobile",803:"snowplow, snowplough",804:"soap dispenser",805:"soccer ball",806:"sock",807:"solar dish, solar collector, solar furnace",808:"sombrero",809:"soup bowl",810:"space bar",811:"space heater",812:"space shuttle",813:"spatula",814:"speedboat",815:"spider web, spider's web",816:"spindle",817:"sports car, sport car",818:"spotlight, spot",819:"stage",820:"steam locomotive",821:"steel arch bridge",822:"steel drum",823:"stethoscope",824:"stole",825:"stone wall",826:"stopwatch, stop watch",827:"stove",828:"strainer",829:"streetcar, tram, tramcar, trolley, trolley car",830:"stretcher",831:"studio couch, day bed",832:"stupa, tope",833:"submarine, pigboat, sub, U-boat",834:"suit, suit of clothes",835:"sundial",836:"sunglass",837:"sunglasses, dark glasses, shades",838:"sunscreen, sunblock, sun blocker",839:"suspension bridge",840:"swab, swob, mop",841:"sweatshirt",842:"swimming trunks, bathing trunks",843:"swing",844:"switch, electric switch, electrical switch",845:"syringe",846:"table lamp",847:"tank, army tank, armored combat vehicle, armoured combat vehicle",848:"tape player",849:"teapot",850:"teddy, teddy bear",851:"television, television system",852:"tennis ball",853:"thatch, thatched roof",854:"theater curtain, theatre curtain",855:"thimble",856:"thresher, thrasher, threshing machine",857:"throne",858:"tile roof",859:"toaster",860:"tobacco shop, tobacconist shop, tobacconist",861:"toilet seat",862:"torch",863:"totem pole",864:"tow truck, tow car, wrecker",865:"toyshop",866:"tractor",867:"trailer truck, tractor trailer, trucking rig, rig, articulated lorry, semi",868:"tray",869:"trench coat",870:"tricycle, trike, velocipede",871:"trimaran",872:"tripod",873:"triumphal arch",874:"trolleybus, trolley coach, trackless trolley",875:"trombone",876:"tub, vat",877:"turnstile",878:"typewriter keyboard",879:"umbrella",880:"unicycle, monocycle",881:"upright, upright piano",882:"vacuum, vacuum cleaner",883:"vase",884:"vault",885:"velvet",886:"vending machine",887:"vestment",888:"viaduct",889:"violin, fiddle",890:"volleyball",891:"waffle iron",892:"wall clock",893:"wallet, billfold, notecase, pocketbook",894:"wardrobe, closet, press",895:"warplane, military plane",896:"washbasin, handbasin, washbowl, lavabo, wash-hand basin",897:"washer, automatic washer, washing machine",898:"water bottle",899:"water jug",900:"water tower",901:"whiskey jug",902:"whistle",903:"wig",904:"window screen",905:"window shade",906:"Windsor tie",907:"wine bottle",908:"wing",909:"wok",910:"wooden spoon",911:"wool, woolen, woollen",912:"worm fence, snake fence, snake-rail fence, Virginia fence",913:"wreck",914:"yawl",915:"yurt",916:"web site, website, internet site, site",917:"comic book",918:"crossword puzzle, crossword",919:"street sign",920:"traffic light, traffic signal, stoplight",921:"book jacket, dust cover, dust jacket, dust wrapper",922:"menu",923:"plate",924:"guacamole",925:"consomme",926:"hot pot, hotpot",927:"trifle",928:"ice cream, icecream",929:"ice lolly, lolly, lollipop, popsicle",930:"French loaf",931:"bagel, beigel",932:"pretzel",933:"cheeseburger",934:"hotdog, hot dog, red hot",935:"mashed potato",936:"head cabbage",937:"broccoli",938:"cauliflower",939:"zucchini, courgette",940:"spaghetti squash",941:"acorn squash",942:"butternut squash",943:"cucumber, cuke",944:"artichoke, globe artichoke",945:"bell pepper",946:"cardoon",947:"mushroom",948:"Granny Smith",949:"strawberry",950:"orange",951:"lemon",952:"fig",953:"pineapple, ananas",954:"banana",955:"jackfruit, jak, jack",956:"custard apple",957:"pomegranate",958:"hay",959:"carbonara",960:"chocolate sauce, chocolate syrup",961:"dough",962:"meat loaf, meatloaf",963:"pizza, pizza pie",964:"potpie",965:"burrito",966:"red wine",967:"espresso",968:"cup",969:"eggnog",970:"alp",971:"bubble",972:"cliff, drop, drop-off",973:"coral reef",974:"geyser",975:"lakeside, lakeshore",976:"promontory, headland, head, foreland",977:"sandbar, sand bar",978:"seashore, coast, seacoast, sea-coast",979:"valley, vale",980:"volcano",981:"ballplayer, baseball player",982:"groom, bridegroom",983:"scuba diver",984:"rapeseed",985:"daisy",986:"yellow lady's slipper, yellow lady-slipper, Cypripedium calceolus, Cypripedium parviflorum",987:"corn",988:"acorn",989:"hip, rose hip, rosehip",990:"buckeye, horse chestnut, conker",991:"coral fungus",992:"agaric",993:"gyromitra",994:"stinkhorn, carrion fungus",995:"earthstar",996:"hen-of-the-woods, hen of the woods, Polyporus frondosus, Grifola frondosa",997:"bolete",998:"ear, spike, capitulum",999:"toilet tissue, toilet paper, bathroom tissue"},HN=224,qN={"1.00":"module_apply_default/MobilenetV1/Logits/global_pool","2.00":"module_apply_default/MobilenetV2/Logits/AvgPool"},YN={"1.00":{.25:{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_025_224/classification/1",inputRange:[0,1]},"0.50":{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_050_224/classification/1",inputRange:[0,1]},.75:{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_075_224/classification/1",inputRange:[0,1]},"1.00":{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_100_224/classification/1",inputRange:[0,1]}},"2.00":{"0.50":{url:"https://tfhub.dev/google/imagenet/mobilenet_v2_050_224/classification/2",inputRange:[0,1]},.75:{url:"https://tfhub.dev/google/imagenet/mobilenet_v2_075_224/classification/2",inputRange:[0,1]},"1.00":{url:"https://tfhub.dev/google/imagenet/mobilenet_v2_100_224/classification/2",inputRange:[0,1]}}};!function(){function e(e,t,n,a,r){void 0===a&&(a=-1),void 0===r&&(r=1),this.version=e,this.alpha=t,this.modelUrl=n,this.inputMin=a,this.inputMax=r,this.normalizationConstant=(r-a)/255}e.prototype.load=function(){return jN(this,void 0,void 0,(function(){var e,t,n,a,r=this;return ZN(this,(function(s){switch(s.label){case 0:return this.modelUrl?(e=this,[4,(0,Gl.ox)(this.modelUrl)]):[3,2];case 1:return e.model=s.sent(),[3,4];case 2:return t=YN[this.version][this.alpha].url,n=this,[4,(0,Gl.ox)(t,{fromTFHub:!0})];case 3:n.model=s.sent(),s.label=4;case 4:return[4,(a=(0,i.DZQ)((function(){return r.model.predict((0,i.Ul9)([1,HN,HN,3]))}))).data()];case 5:return s.sent(),a.dispose(),[2]}}))}))},e.prototype.infer=function(e,t){var n=this;return void 0===t&&(t=!1),(0,i.DZQ)((function(){e instanceof i.qYS||(e=i.TaL.fromPixels(e));var a=(0,i.WQq)((0,i.lKK)((0,i.wgE)(e,"float32"),n.normalizationConstant),n.inputMin),r=a;e.shape[0]===HN&&e.shape[1]===HN||(r=i.image.resizeBilinear(a,[HN,HN],!0));var s,o=(0,i.tQQ)(r,[-1,HN,HN,3]);if(t){var c=qN[n.version],l=n.model.execute(o,c);s=(0,i.r2V)(l,[1,2])}else{var u=n.model.predict(o);s=(0,i.dik)(u,[0,1],[-1,1e3])}return s}))},e.prototype.classify=function(e,t){return void 0===t&&(t=3),jN(this,void 0,void 0,(function(){var n,a;return ZN(this,(function(r){switch(r.label){case 0:return[4,QN(n=this.infer(e),t)];case 1:return a=r.sent(),n.dispose(),[2,a]}}))}))}}();function QN(e,t){return jN(this,void 0,void 0,(function(){var n,a,r,s,o,c,l;return ZN(this,(function(u){switch(u.label){case 0:return[4,(n=(0,i.Vs9)(e)).data()];case 1:for(a=u.sent(),n.dispose(),r=[],l=0;l<a.length;l++)r.push({value:a[l],index:l});for(r.sort((function(e,t){return t.value-e.value})),s=new Float32Array(t),o=new Int32Array(t),l=0;l<t;l++)s[l]=r[l].value,o[l]=r[l].index;for(c=[],l=0;l<o.length;l++)c.push({className:KN[o[l]],probability:s[l]});return[2,c]}}))}))}function XN(e,t){return function(){return e.apply(t,arguments)}}const{toString:JN}=Object.prototype,{getPrototypeOf:$N}=Object,eC=(tC=Object.create(null),e=>{const t=JN.call(e);return tC[t]||(tC[t]=t.slice(8,-1).toLowerCase())});var tC;const nC=e=>(e=e.toLowerCase(),t=>eC(t)===e),aC=e=>t=>typeof t===e,{isArray:rC}=Array,sC=aC("undefined");const oC=nC("ArrayBuffer");const iC=aC("string"),cC=aC("function"),lC=aC("number"),uC=e=>null!==e&&"object"===typeof e,dC=e=>{if("object"!==eC(e))return!1;const t=$N(e);return(null===t||t===Object.prototype||null===Object.getPrototypeOf(t))&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)},hC=nC("Date"),pC=nC("File"),fC=nC("Blob"),mC=nC("FileList"),gC=nC("URLSearchParams");function yC(e,t){let n,a,{allOwnKeys:r=!1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(null!==e&&"undefined"!==typeof e)if("object"!==typeof e&&(e=[e]),rC(e))for(n=0,a=e.length;n<a;n++)t.call(null,e[n],n,e);else{const a=r?Object.getOwnPropertyNames(e):Object.keys(e),s=a.length;let o;for(n=0;n<s;n++)o=a[n],t.call(null,e[o],o,e)}}function bC(e,t){t=t.toLowerCase();const n=Object.keys(e);let a,r=n.length;for(;r-- >0;)if(a=n[r],t===a.toLowerCase())return a;return null}const vC="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:"undefined"!==typeof window?window:global,xC=e=>!sC(e)&&e!==vC;const wC=(kC="undefined"!==typeof Uint8Array&&$N(Uint8Array),e=>kC&&e instanceof kC);var kC;const SC=nC("HTMLFormElement"),TC=(e=>{let{hasOwnProperty:t}=e;return(e,n)=>t.call(e,n)})(Object.prototype),IC=nC("RegExp"),NC=(e,t)=>{const n=Object.getOwnPropertyDescriptors(e),a={};yC(n,((n,r)=>{let s;!1!==(s=t(n,r,e))&&(a[r]=s||n)})),Object.defineProperties(e,a)},CC="abcdefghijklmnopqrstuvwxyz",EC="0123456789",AC={DIGIT:EC,ALPHA:CC,ALPHA_DIGIT:CC+CC.toUpperCase()+EC};const _C=nC("AsyncFunction"),RC={isArray:rC,isArrayBuffer:oC,isBuffer:function(e){return null!==e&&!sC(e)&&null!==e.constructor&&!sC(e.constructor)&&cC(e.constructor.isBuffer)&&e.constructor.isBuffer(e)},isFormData:e=>{let t;return e&&("function"===typeof FormData&&e instanceof FormData||cC(e.append)&&("formdata"===(t=eC(e))||"object"===t&&cC(e.toString)&&"[object FormData]"===e.toString()))},isArrayBufferView:function(e){let t;return t="undefined"!==typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&oC(e.buffer),t},isString:iC,isNumber:lC,isBoolean:e=>!0===e||!1===e,isObject:uC,isPlainObject:dC,isUndefined:sC,isDate:hC,isFile:pC,isBlob:fC,isRegExp:IC,isFunction:cC,isStream:e=>uC(e)&&cC(e.pipe),isURLSearchParams:gC,isTypedArray:wC,isFileList:mC,forEach:yC,merge:function e(){const{caseless:t}=xC(this)&&this||{},n={},a=(a,r)=>{const s=t&&bC(n,r)||r;dC(n[s])&&dC(a)?n[s]=e(n[s],a):dC(a)?n[s]=e({},a):rC(a)?n[s]=a.slice():n[s]=a};for(let r=0,s=arguments.length;r<s;r++)arguments[r]&&yC(arguments[r],a);return n},extend:function(e,t,n){let{allOwnKeys:a}=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return yC(t,((t,a)=>{n&&cC(t)?e[a]=XN(t,n):e[a]=t}),{allOwnKeys:a}),e},trim:e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),stripBOM:e=>(65279===e.charCodeAt(0)&&(e=e.slice(1)),e),inherits:(e,t,n,a)=>{e.prototype=Object.create(t.prototype,a),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:t.prototype}),n&&Object.assign(e.prototype,n)},toFlatObject:(e,t,n,a)=>{let r,s,o;const i={};if(t=t||{},null==e)return t;do{for(r=Object.getOwnPropertyNames(e),s=r.length;s-- >0;)o=r[s],a&&!a(o,e,t)||i[o]||(t[o]=e[o],i[o]=!0);e=!1!==n&&$N(e)}while(e&&(!n||n(e,t))&&e!==Object.prototype);return t},kindOf:eC,kindOfTest:nC,endsWith:(e,t,n)=>{e=String(e),(void 0===n||n>e.length)&&(n=e.length),n-=t.length;const a=e.indexOf(t,n);return-1!==a&&a===n},toArray:e=>{if(!e)return null;if(rC(e))return e;let t=e.length;if(!lC(t))return null;const n=new Array(t);for(;t-- >0;)n[t]=e[t];return n},forEachEntry:(e,t)=>{const n=(e&&e[Symbol.iterator]).call(e);let a;for(;(a=n.next())&&!a.done;){const n=a.value;t.call(e,n[0],n[1])}},matchAll:(e,t)=>{let n;const a=[];for(;null!==(n=e.exec(t));)a.push(n);return a},isHTMLForm:SC,hasOwnProperty:TC,hasOwnProp:TC,reduceDescriptors:NC,freezeMethods:e=>{NC(e,((t,n)=>{if(cC(e)&&-1!==["arguments","caller","callee"].indexOf(n))return!1;const a=e[n];cC(a)&&(t.enumerable=!1,"writable"in t?t.writable=!1:t.set||(t.set=()=>{throw Error("Can not rewrite read-only method '"+n+"'")}))}))},toObjectSet:(e,t)=>{const n={},a=e=>{e.forEach((e=>{n[e]=!0}))};return rC(e)?a(e):a(String(e).split(t)),n},toCamelCase:e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,(function(e,t,n){return t.toUpperCase()+n})),noop:()=>{},toFiniteNumber:(e,t)=>(e=+e,Number.isFinite(e)?e:t),findKey:bC,global:vC,isContextDefined:xC,ALPHABET:AC,generateString:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:16,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:AC.ALPHA_DIGIT,n="";const{length:a}=t;for(;e--;)n+=t[Math.random()*a|0];return n},isSpecCompliantForm:function(e){return!!(e&&cC(e.append)&&"FormData"===e[Symbol.toStringTag]&&e[Symbol.iterator])},toJSONObject:e=>{const t=new Array(10),n=(e,a)=>{if(uC(e)){if(t.indexOf(e)>=0)return;if(!("toJSON"in e)){t[a]=e;const r=rC(e)?[]:{};return yC(e,((e,t)=>{const s=n(e,a+1);!sC(s)&&(r[t]=s)})),t[a]=void 0,r}}return e};return n(e,0)},isAsyncFn:_C,isThenable:e=>e&&(uC(e)||cC(e))&&cC(e.then)&&cC(e.catch)};function FC(e,t,n,a,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=e,this.name="AxiosError",t&&(this.code=t),n&&(this.config=n),a&&(this.request=a),r&&(this.response=r)}RC.inherits(FC,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:RC.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const DC=FC.prototype,OC={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((e=>{OC[e]={value:e}})),Object.defineProperties(FC,OC),Object.defineProperty(DC,"isAxiosError",{value:!0}),FC.from=(e,t,n,a,r,s)=>{const o=Object.create(DC);return RC.toFlatObject(e,o,(function(e){return e!==Error.prototype}),(e=>"isAxiosError"!==e)),FC.call(o,e.message,t,n,a,r),o.cause=e,o.name=e.name,s&&Object.assign(o,s),o};const LC=FC;function MC(e){return RC.isPlainObject(e)||RC.isArray(e)}function zC(e){return RC.endsWith(e,"[]")?e.slice(0,-2):e}function PC(e,t,n){return e?e.concat(t).map((function(e,t){return e=zC(e),!n&&t?"["+e+"]":e})).join(n?".":""):t}const BC=RC.toFlatObject(RC,{},null,(function(e){return/^is[A-Z]/.test(e)}));const WC=function(e,t,n){if(!RC.isObject(e))throw new TypeError("target must be an object");t=t||new FormData;const a=(n=RC.toFlatObject(n,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(e,t){return!RC.isUndefined(t[e])}))).metaTokens,r=n.visitor||l,s=n.dots,o=n.indexes,i=(n.Blob||"undefined"!==typeof Blob&&Blob)&&RC.isSpecCompliantForm(t);if(!RC.isFunction(r))throw new TypeError("visitor must be a function");function c(e){if(null===e)return"";if(RC.isDate(e))return e.toISOString();if(!i&&RC.isBlob(e))throw new LC("Blob is not supported. Use a Buffer instead.");return RC.isArrayBuffer(e)||RC.isTypedArray(e)?i&&"function"===typeof Blob?new Blob([e]):Buffer.from(e):e}function l(e,n,r){let i=e;if(e&&!r&&"object"===typeof e)if(RC.endsWith(n,"{}"))n=a?n:n.slice(0,-2),e=JSON.stringify(e);else if(RC.isArray(e)&&function(e){return RC.isArray(e)&&!e.some(MC)}(e)||(RC.isFileList(e)||RC.endsWith(n,"[]"))&&(i=RC.toArray(e)))return n=zC(n),i.forEach((function(e,a){!RC.isUndefined(e)&&null!==e&&t.append(!0===o?PC([n],a,s):null===o?n:n+"[]",c(e))})),!1;return!!MC(e)||(t.append(PC(r,n,s),c(e)),!1)}const u=[],d=Object.assign(BC,{defaultVisitor:l,convertValue:c,isVisitable:MC});if(!RC.isObject(e))throw new TypeError("data must be an object");return function e(n,a){if(!RC.isUndefined(n)){if(-1!==u.indexOf(n))throw Error("Circular reference detected in "+a.join("."));u.push(n),RC.forEach(n,(function(n,s){!0===(!(RC.isUndefined(n)||null===n)&&r.call(t,n,RC.isString(s)?s.trim():s,a,d))&&e(n,a?a.concat(s):[s])})),u.pop()}}(e),t};function UC(e){const t={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,(function(e){return t[e]}))}function VC(e,t){this._pairs=[],e&&WC(e,this,t)}const GC=VC.prototype;GC.append=function(e,t){this._pairs.push([e,t])},GC.toString=function(e){const t=e?function(t){return e.call(this,t,UC)}:UC;return this._pairs.map((function(e){return t(e[0])+"="+t(e[1])}),"").join("&")};const jC=VC;function ZC(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function KC(e,t,n){if(!t)return e;const a=n&&n.encode||ZC,r=n&&n.serialize;let s;if(s=r?r(t,n):RC.isURLSearchParams(t)?t.toString():new jC(t,n).toString(a),s){const t=e.indexOf("#");-1!==t&&(e=e.slice(0,t)),e+=(-1===e.indexOf("?")?"?":"&")+s}return e}const HC=class{constructor(){this.handlers=[]}use(e,t,n){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!n&&n.synchronous,runWhen:n?n.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){RC.forEach(this.handlers,(function(t){null!==t&&e(t)}))}},qC={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},YC={isBrowser:!0,classes:{URLSearchParams:"undefined"!==typeof URLSearchParams?URLSearchParams:jC,FormData:"undefined"!==typeof FormData?FormData:null,Blob:"undefined"!==typeof Blob?Blob:null},protocols:["http","https","file","blob","url","data"]},QC="undefined"!==typeof window&&"undefined"!==typeof document,XC=(JC="undefined"!==typeof navigator&&navigator.product,QC&&["ReactNative","NativeScript","NS"].indexOf(JC)<0);var JC;const $C="undefined"!==typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&"function"===typeof self.importScripts,eE={...t,...YC};const tE=function(e){function t(e,n,a,r){let s=e[r++];if("__proto__"===s)return!0;const o=Number.isFinite(+s),i=r>=e.length;if(s=!s&&RC.isArray(a)?a.length:s,i)return RC.hasOwnProp(a,s)?a[s]=[a[s],n]:a[s]=n,!o;a[s]&&RC.isObject(a[s])||(a[s]=[]);return t(e,n,a[s],r)&&RC.isArray(a[s])&&(a[s]=function(e){const t={},n=Object.keys(e);let a;const r=n.length;let s;for(a=0;a<r;a++)s=n[a],t[s]=e[s];return t}(a[s])),!o}if(RC.isFormData(e)&&RC.isFunction(e.entries)){const n={};return RC.forEachEntry(e,((e,a)=>{t(function(e){return RC.matchAll(/\w+|\[(\w*)]/g,e).map((e=>"[]"===e[0]?"":e[1]||e[0]))}(e),a,n,0)})),n}return null};const nE={transitional:qC,adapter:["xhr","http"],transformRequest:[function(e,t){const n=t.getContentType()||"",a=n.indexOf("application/json")>-1,r=RC.isObject(e);r&&RC.isHTMLForm(e)&&(e=new FormData(e));if(RC.isFormData(e))return a?JSON.stringify(tE(e)):e;if(RC.isArrayBuffer(e)||RC.isBuffer(e)||RC.isStream(e)||RC.isFile(e)||RC.isBlob(e))return e;if(RC.isArrayBufferView(e))return e.buffer;if(RC.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let s;if(r){if(n.indexOf("application/x-www-form-urlencoded")>-1)return function(e,t){return WC(e,new eE.classes.URLSearchParams,Object.assign({visitor:function(e,t,n,a){return eE.isNode&&RC.isBuffer(e)?(this.append(t,e.toString("base64")),!1):a.defaultVisitor.apply(this,arguments)}},t))}(e,this.formSerializer).toString();if((s=RC.isFileList(e))||n.indexOf("multipart/form-data")>-1){const t=this.env&&this.env.FormData;return WC(s?{"files[]":e}:e,t&&new t,this.formSerializer)}}return r||a?(t.setContentType("application/json",!1),function(e,t,n){if(RC.isString(e))try{return(t||JSON.parse)(e),RC.trim(e)}catch(a){if("SyntaxError"!==a.name)throw a}return(n||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){const t=this.transitional||nE.transitional,n=t&&t.forcedJSONParsing,a="json"===this.responseType;if(e&&RC.isString(e)&&(n&&!this.responseType||a)){const n=!(t&&t.silentJSONParsing)&&a;try{return JSON.parse(e)}catch(r){if(n){if("SyntaxError"===r.name)throw LC.from(r,LC.ERR_BAD_RESPONSE,this,null,this.response);throw r}}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:eE.classes.FormData,Blob:eE.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};RC.forEach(["delete","get","head","post","put","patch"],(e=>{nE.headers[e]={}}));const aE=nE,rE=RC.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),sE=Symbol("internals");function oE(e){return e&&String(e).trim().toLowerCase()}function iE(e){return!1===e||null==e?e:RC.isArray(e)?e.map(iE):String(e)}function cE(e,t,n,a,r){return RC.isFunction(a)?a.call(this,t,n):(r&&(t=n),RC.isString(t)?RC.isString(a)?-1!==t.indexOf(a):RC.isRegExp(a)?a.test(t):void 0:void 0)}class lE{constructor(e){e&&this.set(e)}set(e,t,n){const a=this;function r(e,t,n){const r=oE(t);if(!r)throw new Error("header name must be a non-empty string");const s=RC.findKey(a,r);(!s||void 0===a[s]||!0===n||void 0===n&&!1!==a[s])&&(a[s||t]=iE(e))}const s=(e,t)=>RC.forEach(e,((e,n)=>r(e,n,t)));return RC.isPlainObject(e)||e instanceof this.constructor?s(e,t):RC.isString(e)&&(e=e.trim())&&!/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim())?s((e=>{const t={};let n,a,r;return e&&e.split("\n").forEach((function(e){r=e.indexOf(":"),n=e.substring(0,r).trim().toLowerCase(),a=e.substring(r+1).trim(),!n||t[n]&&rE[n]||("set-cookie"===n?t[n]?t[n].push(a):t[n]=[a]:t[n]=t[n]?t[n]+", "+a:a)})),t})(e),t):null!=e&&r(t,e,n),this}get(e,t){if(e=oE(e)){const n=RC.findKey(this,e);if(n){const e=this[n];if(!t)return e;if(!0===t)return function(e){const t=Object.create(null),n=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let a;for(;a=n.exec(e);)t[a[1]]=a[2];return t}(e);if(RC.isFunction(t))return t.call(this,e,n);if(RC.isRegExp(t))return t.exec(e);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=oE(e)){const n=RC.findKey(this,e);return!(!n||void 0===this[n]||t&&!cE(0,this[n],n,t))}return!1}delete(e,t){const n=this;let a=!1;function r(e){if(e=oE(e)){const r=RC.findKey(n,e);!r||t&&!cE(0,n[r],r,t)||(delete n[r],a=!0)}}return RC.isArray(e)?e.forEach(r):r(e),a}clear(e){const t=Object.keys(this);let n=t.length,a=!1;for(;n--;){const r=t[n];e&&!cE(0,this[r],r,e,!0)||(delete this[r],a=!0)}return a}normalize(e){const t=this,n={};return RC.forEach(this,((a,r)=>{const s=RC.findKey(n,r);if(s)return t[s]=iE(a),void delete t[r];const o=e?function(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,((e,t,n)=>t.toUpperCase()+n))}(r):String(r).trim();o!==r&&delete t[r],t[o]=iE(a),n[o]=!0})),this}concat(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.constructor.concat(this,...t)}toJSON(e){const t=Object.create(null);return RC.forEach(this,((n,a)=>{null!=n&&!1!==n&&(t[a]=e&&RC.isArray(n)?n.join(", "):n)})),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((e=>{let[t,n]=e;return t+": "+n})).join("\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e){const t=new this(e);for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return a.forEach((e=>t.set(e))),t}static accessor(e){const t=(this[sE]=this[sE]={accessors:{}}).accessors,n=this.prototype;function a(e){const a=oE(e);t[a]||(!function(e,t){const n=RC.toCamelCase(" "+t);["get","set","has"].forEach((a=>{Object.defineProperty(e,a+n,{value:function(e,n,r){return this[a].call(this,t,e,n,r)},configurable:!0})}))}(n,e),t[a]=!0)}return RC.isArray(e)?e.forEach(a):a(e),this}}lE.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]),RC.reduceDescriptors(lE.prototype,((e,t)=>{let{value:n}=e,a=t[0].toUpperCase()+t.slice(1);return{get:()=>n,set(e){this[a]=e}}})),RC.freezeMethods(lE);const uE=lE;function dE(e,t){const n=this||aE,a=t||n,r=uE.from(a.headers);let s=a.data;return RC.forEach(e,(function(e){s=e.call(n,s,r.normalize(),t?t.status:void 0)})),r.normalize(),s}function hE(e){return!(!e||!e.__CANCEL__)}function pE(e,t,n){LC.call(this,null==e?"canceled":e,LC.ERR_CANCELED,t,n),this.name="CanceledError"}RC.inherits(pE,LC,{__CANCEL__:!0});const fE=pE;const mE=eE.hasStandardBrowserEnv?{write(e,t,n,a,r,s){const o=[e+"="+encodeURIComponent(t)];RC.isNumber(n)&&o.push("expires="+new Date(n).toGMTString()),RC.isString(a)&&o.push("path="+a),RC.isString(r)&&o.push("domain="+r),!0===s&&o.push("secure"),document.cookie=o.join("; ")},read(e){const t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(e){this.write(e,"",Date.now()-864e5)}}:{write(){},read:()=>null,remove(){}};function gE(e,t){return e&&!/^([a-z][a-z\d+\-.]*:)?\/\//i.test(t)?function(e,t){return t?e.replace(/\/?\/$/,"")+"/"+t.replace(/^\/+/,""):e}(e,t):t}const yE=eE.hasStandardBrowserEnv?function(){const e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");let n;function a(n){let a=n;return e&&(t.setAttribute("href",a),a=t.href),t.setAttribute("href",a),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return n=a(window.location.href),function(e){const t=RC.isString(e)?a(e):e;return t.protocol===n.protocol&&t.host===n.host}}():function(){return!0};const bE=function(e,t){e=e||10;const n=new Array(e),a=new Array(e);let r,s=0,o=0;return t=void 0!==t?t:1e3,function(i){const c=Date.now(),l=a[o];r||(r=c),n[s]=i,a[s]=c;let u=o,d=0;for(;u!==s;)d+=n[u++],u%=e;if(s=(s+1)%e,s===o&&(o=(o+1)%e),c-r<t)return;const h=l&&c-l;return h?Math.round(1e3*d/h):void 0}};function vE(e,t){let n=0;const a=bE(50,250);return r=>{const s=r.loaded,o=r.lengthComputable?r.total:void 0,i=s-n,c=a(i);n=s;const l={loaded:s,total:o,progress:o?s/o:void 0,bytes:i,rate:c||void 0,estimated:c&&o&&s<=o?(o-s)/c:void 0,event:r};l[t?"download":"upload"]=!0,e(l)}}const xE={http:null,xhr:"undefined"!==typeof XMLHttpRequest&&function(e){return new Promise((function(t,n){let a=e.data;const r=uE.from(e.headers).normalize();let s,o,{responseType:i,withXSRFToken:c}=e;function l(){e.cancelToken&&e.cancelToken.unsubscribe(s),e.signal&&e.signal.removeEventListener("abort",s)}if(RC.isFormData(a))if(eE.hasStandardBrowserEnv||eE.hasStandardBrowserWebWorkerEnv)r.setContentType(!1);else if(!1!==(o=r.getContentType())){const[e,...t]=o?o.split(";").map((e=>e.trim())).filter(Boolean):[];r.setContentType([e||"multipart/form-data",...t].join("; "))}let u=new XMLHttpRequest;if(e.auth){const t=e.auth.username||"",n=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";r.set("Authorization","Basic "+btoa(t+":"+n))}const d=gE(e.baseURL,e.url);function h(){if(!u)return;const a=uE.from("getAllResponseHeaders"in u&&u.getAllResponseHeaders());!function(e,t,n){const a=n.config.validateStatus;n.status&&a&&!a(n.status)?t(new LC("Request failed with status code "+n.status,[LC.ERR_BAD_REQUEST,LC.ERR_BAD_RESPONSE][Math.floor(n.status/100)-4],n.config,n.request,n)):e(n)}((function(e){t(e),l()}),(function(e){n(e),l()}),{data:i&&"text"!==i&&"json"!==i?u.response:u.responseText,status:u.status,statusText:u.statusText,headers:a,config:e,request:u}),u=null}if(u.open(e.method.toUpperCase(),KC(d,e.params,e.paramsSerializer),!0),u.timeout=e.timeout,"onloadend"in u?u.onloadend=h:u.onreadystatechange=function(){u&&4===u.readyState&&(0!==u.status||u.responseURL&&0===u.responseURL.indexOf("file:"))&&setTimeout(h)},u.onabort=function(){u&&(n(new LC("Request aborted",LC.ECONNABORTED,e,u)),u=null)},u.onerror=function(){n(new LC("Network Error",LC.ERR_NETWORK,e,u)),u=null},u.ontimeout=function(){let t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded";const a=e.transitional||qC;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(new LC(t,a.clarifyTimeoutError?LC.ETIMEDOUT:LC.ECONNABORTED,e,u)),u=null},eE.hasStandardBrowserEnv&&(c&&RC.isFunction(c)&&(c=c(e)),c||!1!==c&&yE(d))){const t=e.xsrfHeaderName&&e.xsrfCookieName&&mE.read(e.xsrfCookieName);t&&r.set(e.xsrfHeaderName,t)}void 0===a&&r.setContentType(null),"setRequestHeader"in u&&RC.forEach(r.toJSON(),(function(e,t){u.setRequestHeader(t,e)})),RC.isUndefined(e.withCredentials)||(u.withCredentials=!!e.withCredentials),i&&"json"!==i&&(u.responseType=e.responseType),"function"===typeof e.onDownloadProgress&&u.addEventListener("progress",vE(e.onDownloadProgress,!0)),"function"===typeof e.onUploadProgress&&u.upload&&u.upload.addEventListener("progress",vE(e.onUploadProgress)),(e.cancelToken||e.signal)&&(s=t=>{u&&(n(!t||t.type?new fE(null,e,u):t),u.abort(),u=null)},e.cancelToken&&e.cancelToken.subscribe(s),e.signal&&(e.signal.aborted?s():e.signal.addEventListener("abort",s)));const p=function(e){const t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}(d);p&&-1===eE.protocols.indexOf(p)?n(new LC("Unsupported protocol "+p+":",LC.ERR_BAD_REQUEST,e)):u.send(a||null)}))}};RC.forEach(xE,((e,t)=>{if(e){try{Object.defineProperty(e,"name",{value:t})}catch(n){}Object.defineProperty(e,"adapterName",{value:t})}}));const wE=e=>"- ".concat(e),kE=e=>RC.isFunction(e)||null===e||!1===e,SE=e=>{e=RC.isArray(e)?e:[e];const{length:t}=e;let n,a;const r={};for(let s=0;s<t;s++){let t;if(n=e[s],a=n,!kE(n)&&(a=xE[(t=String(n)).toLowerCase()],void 0===a))throw new LC("Unknown adapter '".concat(t,"'"));if(a)break;r[t||"#"+s]=a}if(!a){const e=Object.entries(r).map((e=>{let[t,n]=e;return"adapter ".concat(t," ")+(!1===n?"is not supported by the environment":"is not available in the build")}));let n=t?e.length>1?"since :\n"+e.map(wE).join("\n"):" "+wE(e[0]):"as no adapter specified";throw new LC("There is no suitable adapter to dispatch the request "+n,"ERR_NOT_SUPPORT")}return a};function TE(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new fE(null,e)}function IE(e){TE(e),e.headers=uE.from(e.headers),e.data=dE.call(e,e.transformRequest),-1!==["post","put","patch"].indexOf(e.method)&&e.headers.setContentType("application/x-www-form-urlencoded",!1);return SE(e.adapter||aE.adapter)(e).then((function(t){return TE(e),t.data=dE.call(e,e.transformResponse,t),t.headers=uE.from(t.headers),t}),(function(t){return hE(t)||(TE(e),t&&t.response&&(t.response.data=dE.call(e,e.transformResponse,t.response),t.response.headers=uE.from(t.response.headers))),Promise.reject(t)}))}const NE=e=>e instanceof uE?{...e}:e;function CE(e,t){t=t||{};const n={};function a(e,t,n){return RC.isPlainObject(e)&&RC.isPlainObject(t)?RC.merge.call({caseless:n},e,t):RC.isPlainObject(t)?RC.merge({},t):RC.isArray(t)?t.slice():t}function r(e,t,n){return RC.isUndefined(t)?RC.isUndefined(e)?void 0:a(void 0,e,n):a(e,t,n)}function s(e,t){if(!RC.isUndefined(t))return a(void 0,t)}function o(e,t){return RC.isUndefined(t)?RC.isUndefined(e)?void 0:a(void 0,e):a(void 0,t)}function i(n,r,s){return s in t?a(n,r):s in e?a(void 0,n):void 0}const c={url:s,method:s,data:s,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,withXSRFToken:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:i,headers:(e,t)=>r(NE(e),NE(t),!0)};return RC.forEach(Object.keys(Object.assign({},e,t)),(function(a){const s=c[a]||r,o=s(e[a],t[a],a);RC.isUndefined(o)&&s!==i||(n[a]=o)})),n}const EE="1.6.8",AE={};["object","boolean","number","function","string","symbol"].forEach(((e,t)=>{AE[e]=function(n){return typeof n===e||"a"+(t<1?"n ":" ")+e}}));const _E={};AE.transitional=function(e,t,n){function a(e,t){return"[Axios v1.6.8] Transitional option '"+e+"'"+t+(n?". "+n:"")}return(n,r,s)=>{if(!1===e)throw new LC(a(r," has been removed"+(t?" in "+t:"")),LC.ERR_DEPRECATED);return t&&!_E[r]&&(_E[r]=!0,console.warn(a(r," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(n,r,s)}};const RE={assertOptions:function(e,t,n){if("object"!==typeof e)throw new LC("options must be an object",LC.ERR_BAD_OPTION_VALUE);const a=Object.keys(e);let r=a.length;for(;r-- >0;){const s=a[r],o=t[s];if(o){const t=e[s],n=void 0===t||o(t,s,e);if(!0!==n)throw new LC("option "+s+" must be "+n,LC.ERR_BAD_OPTION_VALUE)}else if(!0!==n)throw new LC("Unknown option "+s,LC.ERR_BAD_OPTION)}},validators:AE},FE=RE.validators;class DE{constructor(e){this.defaults=e,this.interceptors={request:new HC,response:new HC}}async request(e,t){try{return await this._request(e,t)}catch(n){if(n instanceof Error){let e;Error.captureStackTrace?Error.captureStackTrace(e={}):e=new Error;const t=e.stack?e.stack.replace(/^.+\n/,""):"";n.stack?t&&!String(n.stack).endsWith(t.replace(/^.+\n.+\n/,""))&&(n.stack+="\n"+t):n.stack=t}throw n}}_request(e,t){"string"===typeof e?(t=t||{}).url=e:t=e||{},t=CE(this.defaults,t);const{transitional:n,paramsSerializer:a,headers:r}=t;void 0!==n&&RE.assertOptions(n,{silentJSONParsing:FE.transitional(FE.boolean),forcedJSONParsing:FE.transitional(FE.boolean),clarifyTimeoutError:FE.transitional(FE.boolean)},!1),null!=a&&(RC.isFunction(a)?t.paramsSerializer={serialize:a}:RE.assertOptions(a,{encode:FE.function,serialize:FE.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let s=r&&RC.merge(r.common,r[t.method]);r&&RC.forEach(["delete","get","head","post","put","patch","common"],(e=>{delete r[e]})),t.headers=uE.concat(s,r);const o=[];let i=!0;this.interceptors.request.forEach((function(e){"function"===typeof e.runWhen&&!1===e.runWhen(t)||(i=i&&e.synchronous,o.unshift(e.fulfilled,e.rejected))}));const c=[];let l;this.interceptors.response.forEach((function(e){c.push(e.fulfilled,e.rejected)}));let u,d=0;if(!i){const e=[IE.bind(this),void 0];for(e.unshift.apply(e,o),e.push.apply(e,c),u=e.length,l=Promise.resolve(t);d<u;)l=l.then(e[d++],e[d++]);return l}u=o.length;let h=t;for(d=0;d<u;){const e=o[d++],t=o[d++];try{h=e(h)}catch(p){t.call(this,p);break}}try{l=IE.call(this,h)}catch(p){return Promise.reject(p)}for(d=0,u=c.length;d<u;)l=l.then(c[d++],c[d++]);return l}getUri(e){return KC(gE((e=CE(this.defaults,e)).baseURL,e.url),e.params,e.paramsSerializer)}}RC.forEach(["delete","get","head","options"],(function(e){DE.prototype[e]=function(t,n){return this.request(CE(n||{},{method:e,url:t,data:(n||{}).data}))}})),RC.forEach(["post","put","patch"],(function(e){function t(t){return function(n,a,r){return this.request(CE(r||{},{method:e,headers:t?{"Content-Type":"multipart/form-data"}:{},url:n,data:a}))}}DE.prototype[e]=t(),DE.prototype[e+"Form"]=t(!0)}));const OE=DE;class LE{constructor(e){if("function"!==typeof e)throw new TypeError("executor must be a function.");let t;this.promise=new Promise((function(e){t=e}));const n=this;this.promise.then((e=>{if(!n._listeners)return;let t=n._listeners.length;for(;t-- >0;)n._listeners[t](e);n._listeners=null})),this.promise.then=e=>{let t;const a=new Promise((e=>{n.subscribe(e),t=e})).then(e);return a.cancel=function(){n.unsubscribe(t)},a},e((function(e,a,r){n.reason||(n.reason=new fE(e,a,r),t(n.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}static source(){let e;return{token:new LE((function(t){e=t})),cancel:e}}}const ME=LE;const zE={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(zE).forEach((e=>{let[t,n]=e;zE[n]=t}));const PE=zE;const BE=function e(t){const n=new OE(t),a=XN(OE.prototype.request,n);return RC.extend(a,OE.prototype,n,{allOwnKeys:!0}),RC.extend(a,n,null,{allOwnKeys:!0}),a.create=function(n){return e(CE(t,n))},a}(aE);BE.Axios=OE,BE.CanceledError=fE,BE.CancelToken=ME,BE.isCancel=hE,BE.VERSION=EE,BE.toFormData=WC,BE.AxiosError=LC,BE.Cancel=BE.CanceledError,BE.all=function(e){return Promise.all(e)},BE.spread=function(e){return function(t){return e.apply(null,t)}},BE.isAxiosError=function(e){return RC.isObject(e)&&!0===e.isAxiosError},BE.mergeConfig=CE,BE.AxiosHeaders=uE,BE.formToJSON=e=>tE(RC.isHTMLForm(e)?new FormData(e):e),BE.getAdapter=SE,BE.HttpStatusCode=PE,BE.default=BE;const WE=BE;var UE=n(579);const VE=function(){const e=(0,a.useRef)(null),t=(0,a.useRef)(null),r=n(8249),s=(0,a.useRef)(!1),[i,c]=(0,a.useState)([]),l=async n=>{if("undefined"!==typeof e.current&&null!==e.current&&4===e.current.video.readyState){const a=e.current.video,r=e.current.video.videoWidth,o=e.current.video.videoHeight;e.current.video.width=r,e.current.video.height=o,t.current.width=r,t.current.height=o;const i=await n.estimateFaces(a,false);c(i);const l=t.current.getContext("2d");GN(i,l,s)}},u=async()=>(await WE.get("https://br246fcf02.execute-api.eu-north-1.amazonaws.com/faceDB/faces")).data.faces;return(0,UE.jsx)("div",{className:"App",children:(0,UE.jsxs)("header",{className:"App-header",children:[(0,UE.jsx)(o(),{ref:e,className:"cam"}),(0,UE.jsx)("canvas",{ref:t,className:"canvas"}),(0,UE.jsx)("button",{className:"btn",onClick:()=>{s.current=!s.current,(async()=>{try{const e=await WE.get("https://s2m5sd0p18.execute-api.eu-north-1.amazonaws.com/models_live/models"),t=await r.load(e.data);l(t)}catch(e){console.log(e)}})()},children:"Start Capturing"}),(0,UE.jsx)("button",{className:"btn",onClick:async()=>{console.log("compare faces");const e=await u();console.log(e);const t=[];if(e.forEach((e=>{const n=i[0].landmarks,a=e.landmarks;if(n.length===a.length){let e=0;for(let t=0;t<n.length;t++){const r=n[t][0]-a[t][0],s=n[t][1]-a[t][1];e+=Math.sqrt(r*r+s*s)}t.push(e),console.log(t)}else console.log("Mismatch in landmark array lengths, skipping comparison.")})),t.length>0){const e=t.reduce(((e,t)=>e+t),0)/t.length;console.log("Average distance:",e),e<.9?(console.log("Faces are similar."),alert("faces matched")):(console.log("Faces are not similar."),alert("faces not matched"))}else alert("No valid distances calculated.")},children:"Compare"}),(0,UE.jsx)("button",{className:"btn",onClick:async()=>{await WE.post("https://br246fcf02.execute-api.eu-north-1.amazonaws.com/faceDB/faces",i)},children:"Save In Database"})]})})},GE=e=>{e&&e instanceof Function&&n.e(453).then(n.bind(n,6453)).then((t=>{let{getCLS:n,getFID:a,getFCP:r,getLCP:s,getTTFB:o}=t;n(e),a(e),r(e),s(e),o(e)}))};r.createRoot(document.getElementById("root")).render((0,UE.jsx)(a.StrictMode,{children:(0,UE.jsx)(VE,{})})),GE()})()})();
//# sourceMappingURL=main.b2bbcbe3.js.map